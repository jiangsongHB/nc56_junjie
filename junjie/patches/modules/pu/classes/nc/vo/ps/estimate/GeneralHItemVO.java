/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.ps.estimate;

import nc.vo.pub.CircularlyAccessibleValueObject;
import nc.vo.pub.NullFieldException;
import nc.vo.pub.ValidationException;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDate;
import nc.vo.pub.lang.UFDouble;
import nc.vo.scm.field.pu.FieldDBValidate;
import nc.vo.scm.field.pu.FieldDBValidateVO;
import nc.vo.scm.field.pu.MoneyField;
import nc.vo.scm.field.pu.NumField;
import nc.vo.scm.field.pu.PriceField;

/**
 * 此处插入类型说明。
 *
 * 创建日期：(2001-6-11)
 * @author：
 */
public class GeneralHItemVO extends CircularlyAccessibleValueObject implements nc.vo.scm.field.pu.FieldDBValidateInterface{

	public String m_cgeneralbid;
	public String m_cgeneralhid;
	public String m_cinventoryid;
	public String m_vbatchcode;
	public String m_vfree1;
	public String m_vfree2;
	public String m_vfree3;
	public String m_vfree4;
	public String m_vfree5;
	public UFDate m_dvalidate;
	public UFDate m_dbizdate;
	public UFDate m_dstandbydate;
	public String m_vproductbatch;
	public UFDouble m_nshouldoutnum;
	public UFDouble m_nshouldoutassistnum;
	public UFDouble m_noutnum;
	public UFDouble m_noutassistnum;
	public UFDouble m_nshouldinnum;
	public String m_castunitid;
	public UFDouble m_nneedinassistnum;
	public UFDouble m_ninnum;
	public UFDouble m_ninassistnum;
	public UFDouble m_ntranoutnum;
	public UFDouble m_nprice;

	public UFDouble m_nmny;

	public UFDouble m_nplannedprice;
	public UFDouble m_nplannedmny;
	public String m_csourcebillhid;
	public String m_csourcebillbid;
	public String m_csourcetype;
	public String m_vsourcebillcode;
  public String m_vfirstbillcode;
	public Integer m_fchecked;
	public String m_cprojectid;
	public String m_ccostobject;
	public String m_ccorrespondbid;
	public String m_ccorrespondhid;
	public String m_ccorrespondtype;
	public String m_ccorrespondcode;
	public UFBoolean m_flargess;
	public String m_vuserdef1;
	public String m_vuserdef2;
	public String m_vuserdef3;
	public String m_vuserdef4;
	public String m_vuserdef5;
	public String m_vuserdef6;
	public UFBoolean m_bzgflag;
	public UFBoolean m_isok;
	public String m_cwp;
	public UFBoolean m_bzgyfflag;

	public String m_vuserdef7;
	public String m_vuserdef8;
	public String m_vuserdef9;
	public String m_vuserdef10;
	public String m_vuserdef11;
	public String m_vuserdef12;
	public String m_vuserdef13;
	public String m_vuserdef14;
	public String m_vuserdef15;
	public String m_vuserdef16;
	public String m_vuserdef17;
	public String m_vuserdef18;
	public String m_vuserdef19;
	public String m_vuserdef20;

	public String m_pk_defdoc1;
	public String m_pk_defdoc2;
	public String m_pk_defdoc3;
	public String m_pk_defdoc4;
	public String m_pk_defdoc5;
	public String m_pk_defdoc6;
	public String m_pk_defdoc7;
	public String m_pk_defdoc8;
	public String m_pk_defdoc9;
	public String m_pk_defdoc10;

	public String m_pk_defdoc11;
	public String m_pk_defdoc12;
	public String m_pk_defdoc13;
	public String m_pk_defdoc14;
	public String m_pk_defdoc15;
	public String m_pk_defdoc16;
	public String m_pk_defdoc17;
	public String m_pk_defdoc18;
	public String m_pk_defdoc19;
	public String m_pk_defdoc20;
	public String m_cvendorid;
	
	//wanglei 2014-05-28 
	public String m_pk_cubasdoc;
	
	public String m_pk_reqcorp;//需求公司
	public String m_pk_invoicecorp;//收票公司
	public String m_pk_reqstoorg;//需求库存组织
	public String m_pk_creqwareid;//需求仓库
	public String m_pk_corp;//收货公司
  
  //since v502,赠品标志
  private UFBoolean m_blargess = null;
  
  //since v55 支持调拨入库单费用结算 添加调拨入库单 暂估标志位
  private UFBoolean m_btoinzgflag;
  // 表体备注
  private String m_vnote;
  
  /**
   * 设置采购订单赠品标志。
   * <p>
   * <b>examples:</b>
   * <p>
   * 使用示例
   * <p>
   * <b>参数说明</b>
   * @param ufbNewVal
   * <p>
   * @author czp
   * @time 2007-9-21 上午09:18:49
   */
  public void setBLargess(UFBoolean ufbNewVal){
    m_blargess = ufbNewVal;
  }
  /**
   * 获取采购订单赠品标志。
   * <p>
   * <b>examples:</b>
   * <p>
   * 使用示例
   * <p>
   * <b>参数说明</b>
   * @param ufbNewVal
   * <p>
   * @author czp
   * @time 2007-9-21 上午09:18:53
   */
  public UFBoolean getBLargess(){
    return m_blargess;
  }

/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2001-6-11)
 */
public GeneralHItemVO() {


}
/**
 * 使用主键进行初始化的构造子。
 *
 * 创建日期：(2001-6-11)
 * @param ??fieldNameForMethod?? 主键值
 */
public GeneralHItemVO(String newCgeneralbid) {

	// 为主键字段赋值:
	m_cgeneralbid = newCgeneralbid;

}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2001-6-11)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	GeneralHItemVO generalB = (GeneralHItemVO)o;

	// 你在下面复制本VO对象的所有属性：

	return generalB;
}
/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2001-6-11)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "GeneralB";
}
/**
 * 返回对象标识，用来唯一定位对象。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getPrimaryKey() {

	return m_cgeneralbid;
}
/**
 * 设置对象标识，用来唯一定位对象。
 *
 * 创建日期：(2001-6-11)
 * @param m_cgeneralbid String
 */
public void setPrimaryKey(String newCgeneralbid) {

	m_cgeneralbid = newCgeneralbid;
}
/**
 * 属性m_cgeneralbid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCgeneralbid() {
	return m_cgeneralbid;
}
/**
 * 属性m_cgeneralhid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCgeneralhid() {
	return m_cgeneralhid;
}
/**
 * 属性m_cinventoryid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCinventoryid() {
	return m_cinventoryid;
}
/**
 * 属性m_vbatchcode的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVbatchcode() {
	return m_vbatchcode;
}
/**
 * 属性m_vfree1的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVfree1() {
	return m_vfree1;
}
/**
 * 属性m_vfree2的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVfree2() {
	return m_vfree2;
}
/**
 * 属性m_vfree3的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVfree3() {
	return m_vfree3;
}
/**
 * 属性m_vfree4的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVfree4() {
	return m_vfree4;
}
/**
 * 属性m_vfree5的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVfree5() {
	return m_vfree5;
}
/**
 * 属性m_dvalidate的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDate
 */
public UFDate getDvalidate() {
	return m_dvalidate;
}
/**
 * 属性m_dbizdate的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDate
 */
public UFDate getDbizdate() {
	return m_dbizdate;
}
/**
 * 属性m_dstandbydate的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDate
 */
public UFDate getDstandbydate() {
	return m_dstandbydate;
}
/**
 * 属性m_vproductbatch的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVproductbatch() {
	return m_vproductbatch;
}
/**
 * 属性m_nshouldoutnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNshouldoutnum() {
	return m_nshouldoutnum;
}
/**
 * 属性m_nshouldoutassistnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNshouldoutassistnum() {
	return m_nshouldoutassistnum;
}
/**
 * 属性m_noutnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNoutnum() {
	return m_noutnum;
}
/**
 * 属性m_noutassistnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNoutassistnum() {
	return m_noutassistnum;
}
/**
 * 属性m_nshouldinnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNshouldinnum() {
	return m_nshouldinnum;
}
/**
 * 属性m_castunitid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCastunitid() {
	return m_castunitid;
}
/**
 * 属性m_nneedinassistnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNneedinassistnum() {
	return m_nneedinassistnum;
}
/**
 * 属性m_ninnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNinnum() {
	return m_ninnum;
}
/**
 * 属性m_ninassistnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNinassistnum() {
	return m_ninassistnum;
}
/**
 * 属性m_ntranoutnum的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNtranoutnum() {
	return m_ntranoutnum;
}
/**
 * 属性m_nprice的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNprice() {
	return m_nprice;
}

/**
 * 属性m_nmny的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNmny() {
	return m_nmny;
}

/**
 * 属性m_nplannedprice的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNplannedprice() {
	return m_nplannedprice;
}
/**
 * 属性m_nplannedmny的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFDouble
 */
public UFDouble getNplannedmny() {
	return m_nplannedmny;
}
/**
 * 属性m_csourcebillhid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCsourcebillhid() {
	return m_csourcebillhid;
}
/**
 * 属性m_csourcebillbid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCsourcebillbid() {
	return m_csourcebillbid;
}
/**
 * 属性m_csourcetype的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCsourcetype() {
	return m_csourcetype;
}
/**
 * 属性m_vsourcebillcode的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVsourcebillcode() {
	return m_vsourcebillcode;
}
public String getVfirstbillcode() {
  return m_vfirstbillcode;
}
/**
 * 属性m_fchecked的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return Integer
 */
public Integer getFchecked() {
	return m_fchecked;
}
/**
 * 属性m_cprojectid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCprojectid() {
	return m_cprojectid;
}
public String getCvendorid() {
	return m_cvendorid;
}
/**
 * 属性m_ccostobject的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCcostobject() {
	return m_ccostobject;
}
/**
 * 属性m_ccorrespondbid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCcorrespondbid() {
	return m_ccorrespondbid;
}
/**
 * 属性m_ccorrespondhid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCcorrespondhid() {
	return m_ccorrespondhid;
}
/**
 * 属性m_ccorrespondtype的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCcorrespondtype() {
	return m_ccorrespondtype;
}
/**
 * 属性m_ccorrespondcode的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCcorrespondcode() {
	return m_ccorrespondcode;
}
/**
 * 属性m_flargess的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFBoolean
 */
public UFBoolean getFlargess() {
	return m_flargess;
}
/**
 * 属性m_vuserdef1的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVuserdef1() {
	return m_vuserdef1;
}
/**
 * 属性m_vuserdef2的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVuserdef2() {
	return m_vuserdef2;
}
/**
 * 属性m_vuserdef3的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVuserdef3() {
	return m_vuserdef3;
}
/**
 * 属性m_vuserdef4的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVuserdef4() {
	return m_vuserdef4;
}
/**
 * 属性m_vuserdef5的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVuserdef5() {
	return m_vuserdef5;
}
/**
 * 属性m_vuserdef6的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVuserdef6() {
	return m_vuserdef6;
}
public String getVuserdef7() {
	return m_vuserdef7;
}
public String getVuserdef8() {
	return m_vuserdef8;
}
public String getVuserdef9() {
	return m_vuserdef9;
}
public String getVuserdef10() {
	return m_vuserdef10;
}
public String getVuserdef11() {
	return m_vuserdef11;
}
public String getVuserdef12() {
	return m_vuserdef12;
}
public String getVuserdef13() {
	return m_vuserdef13;
}
public String getVuserdef14() {
	return m_vuserdef14;
}
public String getVuserdef15() {
	return m_vuserdef15;
}
public String getVuserdef16() {
	return m_vuserdef16;
}
public String getVuserdef17() {
	return m_vuserdef17;
}
public String getVuserdef18() {
	return m_vuserdef18;
}
public String getVuserdef19() {
	return m_vuserdef19;
}
public String getVuserdef20() {
	return m_vuserdef20;
}

public String getPk_defdoc1() {
	return m_pk_defdoc1;
}
public String getPk_defdoc2() {
	return m_pk_defdoc2;
}
public String getPk_defdoc3() {
	return m_pk_defdoc3;
}
public String getPk_defdoc4() {
	return m_pk_defdoc4;
}
public String getPk_defdoc5() {
	return m_pk_defdoc5;
}
public String getPk_defdoc6() {
	return m_pk_defdoc6;
}
public String getPk_defdoc7() {
	return m_pk_defdoc7;
}
public String getPk_defdoc8() {
	return m_pk_defdoc8;
}
public String getPk_defdoc9() {
	return m_pk_defdoc9;
}
public String getPk_defdoc10() {
	return m_pk_defdoc10;
}

public String getPk_defdoc11() {
	return m_pk_defdoc11;
}
public String getPk_defdoc12() {
	return m_pk_defdoc12;
}
public String getPk_defdoc13() {
	return m_pk_defdoc13;
}
public String getPk_defdoc14() {
	return m_pk_defdoc14;
}
public String getPk_defdoc15() {
	return m_pk_defdoc15;
}
public String getPk_defdoc16() {
	return m_pk_defdoc16;
}
public String getPk_defdoc17() {
	return m_pk_defdoc17;
}
public String getPk_defdoc18() {
	return m_pk_defdoc18;
}
public String getPk_defdoc19() {
	return m_pk_defdoc19;
}
public String getPk_defdoc20() {
	return m_pk_defdoc20;
}
/**
 * 属性m_bzgflag的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFBoolean
 */
public UFBoolean getBzgflag() {
	return m_bzgflag;
}
public UFBoolean getBzgyfflag() {
	return m_bzgyfflag;
}
/**
 * 属性m_isok的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return UFBoolean
 */
public UFBoolean getIsok() {
	return m_isok;
}
/**
 * 属性m_cwp的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCwp() {
	return m_cwp;
}
/**
 * 属性m_cgeneralbid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cgeneralbid String
 */
public void setCgeneralbid(String newCgeneralbid) {

	m_cgeneralbid = newCgeneralbid;
}
/**
 * 属性m_cgeneralhid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cgeneralhid String
 */
public void setCgeneralhid(String newCgeneralhid) {

	m_cgeneralhid = newCgeneralhid;
}
/**
 * 属性m_cinventoryid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cinventoryid String
 */
public void setCinventoryid(String newCinventoryid) {

	m_cinventoryid = newCinventoryid;
}
/**
 * 属性m_vbatchcode的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vbatchcode String
 */
public void setVbatchcode(String newVbatchcode) {

	m_vbatchcode = newVbatchcode;
}
/**
 * 属性m_vfree1的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vfree1 String
 */
public void setVfree1(String newVfree1) {

	m_vfree1 = newVfree1;
}
/**
 * 属性m_vfree2的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vfree2 String
 */
public void setVfree2(String newVfree2) {

	m_vfree2 = newVfree2;
}
/**
 * 属性m_vfree3的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vfree3 String
 */
public void setVfree3(String newVfree3) {

	m_vfree3 = newVfree3;
}
/**
 * 属性m_vfree4的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vfree4 String
 */
public void setVfree4(String newVfree4) {

	m_vfree4 = newVfree4;
}
/**
 * 属性m_vfree5的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vfree5 String
 */
public void setVfree5(String newVfree5) {

	m_vfree5 = newVfree5;
}
/**
 * 属性m_dvalidate的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_dvalidate UFDate
 */
public void setDvalidate(UFDate newDvalidate) {

	m_dvalidate = newDvalidate;
}
/**
 * 属性m_dbizdate的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_dbizdate UFDate
 */
public void setDbizdate(UFDate newDbizdate) {

	m_dbizdate = newDbizdate;
}
/**
 * 属性m_dstandbydate的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_dstandbydate UFDate
 */
public void setDstandbydate(UFDate newDstandbydate) {

	m_dstandbydate = newDstandbydate;
}
/**
 * 属性m_vproductbatch的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vproductbatch String
 */
public void setVproductbatch(String newVproductbatch) {

	m_vproductbatch = newVproductbatch;
}
/**
 * 属性m_nshouldoutnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_nshouldoutnum UFDouble
 */
public void setNshouldoutnum(UFDouble newNshouldoutnum) {

	m_nshouldoutnum = newNshouldoutnum;
}
/**
 * 属性m_nshouldoutassistnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_nshouldoutassistnum UFDouble
 */
public void setNshouldoutassistnum(UFDouble newNshouldoutassistnum) {

	m_nshouldoutassistnum = newNshouldoutassistnum;
}
/**
 * 属性m_noutnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_noutnum UFDouble
 */
public void setNoutnum(UFDouble newNoutnum) {

	m_noutnum = newNoutnum;
}
/**
 * 属性m_noutassistnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_noutassistnum UFDouble
 */
public void setNoutassistnum(UFDouble newNoutassistnum) {

	m_noutassistnum = newNoutassistnum;
}
/**
 * 属性m_nshouldinnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_nshouldinnum UFDouble
 */
public void setNshouldinnum(UFDouble newNshouldinnum) {

	m_nshouldinnum = newNshouldinnum;
}
/**
 * 属性m_castunitid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_castunitid String
 */
public void setCastunitid(String newCastunitid) {

	m_castunitid = newCastunitid;
}
/**
 * 属性m_nneedinassistnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_nneedinassistnum UFDouble
 */
public void setNneedinassistnum(UFDouble newNneedinassistnum) {

	m_nneedinassistnum = newNneedinassistnum;
}
/**
 * 属性m_ninnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_ninnum UFDouble
 */
public void setNinnum(UFDouble newNinnum) {

	m_ninnum = newNinnum;
}
/**
 * 属性m_ninassistnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_ninassistnum UFDouble
 */
public void setNinassistnum(UFDouble newNinassistnum) {

	m_ninassistnum = newNinassistnum;
}
/**
 * 属性m_ntranoutnum的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_ntranoutnum UFDouble
 */
public void setNtranoutnum(UFDouble newNtranoutnum) {

	m_ntranoutnum = newNtranoutnum;
}
/**
 * 属性m_nprice的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_nprice UFDouble
 */
public void setNprice(UFDouble newNprice) {

	m_nprice = newNprice;
}

/**
 * 属性m_nmny的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_nmny UFDouble
 */
public void setNmny(UFDouble newNmny) {

	m_nmny = newNmny;
}

/**
 * 属性m_nplannedprice的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_nplannedprice UFDouble
 */
public void setNplannedprice(UFDouble newNplannedprice) {

	m_nplannedprice = newNplannedprice;
}
/**
 * 属性m_nplannedmny的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_nplannedmny UFDouble
 */
public void setNplannedmny(UFDouble newNplannedmny) {

	m_nplannedmny = newNplannedmny;
}
/**
 * 属性m_csourcebillhid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_csourcebillhid String
 */
public void setCsourcebillhid(String newCsourcebillhid) {

	m_csourcebillhid = newCsourcebillhid;
}
/**
 * 属性m_csourcebillbid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_csourcebillbid String
 */
public void setCsourcebillbid(String newCsourcebillbid) {

	m_csourcebillbid = newCsourcebillbid;
}
/**
 * 属性m_csourcetype的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_csourcetype String
 */
public void setCsourcetype(String newCsourcetype) {

	m_csourcetype = newCsourcetype;
}
/**
 * 属性m_vsourcebillcode的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vsourcebillcode String
 */
public void setVsourcebillcode(String newVsourcebillcode) {

	m_vsourcebillcode = newVsourcebillcode;
}
public void setVfirstbillcode(String newVsourcebillcode) {

  m_vfirstbillcode = newVsourcebillcode;
}
/**
 * 属性m_fchecked的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_fchecked Integer
 */
public void setFchecked(Integer newFchecked) {

	m_fchecked = newFchecked;
}
/**
 * 属性m_cprojectid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cprojectid String
 */
public void setCprojectid(String newCprojectid) {

	m_cprojectid = newCprojectid;
}
/**
 * 属性m_ccostobject的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_ccostobject String
 */
public void setCcostobject(String newCcostobject) {

	m_ccostobject = newCcostobject;
}
/**
 * 属性m_ccorrespondbid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_ccorrespondbid String
 */
public void setCcorrespondbid(String newCcorrespondbid) {

	m_ccorrespondbid = newCcorrespondbid;
}
/**
 * 属性m_ccorrespondhid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_ccorrespondhid String
 */
public void setCcorrespondhid(String newCcorrespondhid) {

	m_ccorrespondhid = newCcorrespondhid;
}
/**
 * 属性m_ccorrespondtype的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_ccorrespondtype String
 */
public void setCcorrespondtype(String newCcorrespondtype) {

	m_ccorrespondtype = newCcorrespondtype;
}
/**
 * 属性m_ccorrespondcode的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_ccorrespondcode String
 */
public void setCcorrespondcode(String newCcorrespondcode) {

	m_ccorrespondcode = newCcorrespondcode;
}
/**
 * 属性m_flargess的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_flargess UFBoolean
 */
public void setFlargess(UFBoolean newFlargess) {

	m_flargess = newFlargess;
}
/**
 * 属性m_vuserdef1的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vuserdef1 String
 */
public void setVuserdef1(String newVuserdef1) {

	m_vuserdef1 = newVuserdef1;
}
/**
 * 属性m_vuserdef2的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vuserdef2 String
 */
public void setVuserdef2(String newVuserdef2) {

	m_vuserdef2 = newVuserdef2;
}
/**
 * 属性m_vuserdef3的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vuserdef3 String
 */
public void setVuserdef3(String newVuserdef3) {

	m_vuserdef3 = newVuserdef3;
}
/**
 * 属性m_vuserdef4的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vuserdef4 String
 */
public void setVuserdef4(String newVuserdef4) {

	m_vuserdef4 = newVuserdef4;
}
/**
 * 属性m_vuserdef5的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vuserdef5 String
 */
public void setVuserdef5(String newVuserdef5) {

	m_vuserdef5 = newVuserdef5;
}
/**
 * 属性m_vuserdef6的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vuserdef6 String
 */
public void setVuserdef6(String newVuserdef6) {

	m_vuserdef6 = newVuserdef6;
}
public void setVuserdef7(String newVuserdef6) {

	m_vuserdef7 = newVuserdef6;
}
public void setVuserdef8(String newVuserdef6) {

	m_vuserdef8 = newVuserdef6;
}
public void setVuserdef9(String newVuserdef6) {

	m_vuserdef9 = newVuserdef6;
}
public void setVuserdef10(String newVuserdef6) {

	m_vuserdef10 = newVuserdef6;
}

public void setVuserdef11(String newVuserdef6) {

	m_vuserdef11 = newVuserdef6;
}
public void setVuserdef12(String newVuserdef6) {

	m_vuserdef12 = newVuserdef6;
}
public void setVuserdef13(String newVuserdef6) {

	m_vuserdef13 = newVuserdef6;
}
public void setVuserdef14(String newVuserdef6) {

	m_vuserdef14 = newVuserdef6;
}
public void setVuserdef15(String newVuserdef6) {

	m_vuserdef15 = newVuserdef6;
}
public void setVuserdef16(String newVuserdef6) {

	m_vuserdef16 = newVuserdef6;
}
public void setVuserdef17(String newVuserdef6) {

	m_vuserdef17 = newVuserdef6;
}
public void setVuserdef18(String newVuserdef6) {

	m_vuserdef18 = newVuserdef6;
}
public void setVuserdef19(String newVuserdef6) {

	m_vuserdef19 = newVuserdef6;
}
public void setVuserdef20(String newVuserdef6) {

	m_vuserdef20 = newVuserdef6;
}

public void setPk_defdoc1(String newVuserdef6) {

	m_pk_defdoc1 = newVuserdef6;
}
public void setPk_defdoc2(String newVuserdef6) {

	m_pk_defdoc2 = newVuserdef6;
}
public void setPk_defdoc3(String newVuserdef6) {

	m_pk_defdoc3 = newVuserdef6;
}
public void setPk_defdoc4(String newVuserdef6) {

	m_pk_defdoc4 = newVuserdef6;
}
public void setPk_defdoc5(String newVuserdef6) {

	m_pk_defdoc5 = newVuserdef6;
}
public void setPk_defdoc6(String newVuserdef6) {

	m_pk_defdoc6 = newVuserdef6;
}
public void setPk_defdoc7(String newVuserdef6) {

	m_pk_defdoc7 = newVuserdef6;
}
public void setPk_defdoc8(String newVuserdef6) {

	m_pk_defdoc8 = newVuserdef6;
}
public void setPk_defdoc9(String newVuserdef6) {

	m_pk_defdoc9 = newVuserdef6;
}
public void setPk_defdoc10(String newVuserdef6) {

	m_pk_defdoc10 = newVuserdef6;
}

public void setPk_defdoc11(String newVuserdef6) {

	m_pk_defdoc11 = newVuserdef6;
}
public void setPk_defdoc12(String newVuserdef6) {

	m_pk_defdoc12 = newVuserdef6;
}
public void setPk_defdoc13(String newVuserdef6) {

	m_pk_defdoc13 = newVuserdef6;
}
public void setPk_defdoc14(String newVuserdef6) {

	m_pk_defdoc14 = newVuserdef6;
}
public void setPk_defdoc15(String newVuserdef6) {

	m_pk_defdoc15 = newVuserdef6;
}
public void setPk_defdoc16(String newVuserdef6) {

	m_pk_defdoc16 = newVuserdef6;
}
public void setPk_defdoc17(String newVuserdef6) {

	m_pk_defdoc17 = newVuserdef6;
}
public void setPk_defdoc18(String newVuserdef6) {

	m_pk_defdoc18 = newVuserdef6;
}
public void setPk_defdoc19(String newVuserdef6) {

	m_pk_defdoc19 = newVuserdef6;
}
public void setPk_defdoc20(String newVuserdef6) {

	m_pk_defdoc20 = newVuserdef6;
}

/**
 * 属性m_bzgflag的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_bzgflag UFBoolean
 */
public void setBzgflag(UFBoolean newBzgflag) {

	m_bzgflag = newBzgflag;
}
public void setBzgyfflag(UFBoolean newBzgflag) {

	m_bzgyfflag = newBzgflag;
}
/**
 * 属性m_isok的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_isok UFBoolean
 */
public void setIsok(UFBoolean newIsok) {

	m_isok = newIsok;
}
/**
 * 属性m_cwp的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cwp String
 */
public void setCwp(String newCwp) {

	m_cwp = newCwp;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2001-6-11)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws ValidationException {

	StringBuffer errFields = new StringBuffer(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	if (m_cinventoryid == null || m_cinventoryid.length()==0) {
		errFields.append(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0001480")/*@res "存货编码"*/));
	}
	String message = nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("40040503","UPP40040503-000081")/*@res "下列字段不能为空：\n"*/;
	if (errFields.toString().length() > 0) {
		message += errFields.toString();
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
	// construct the exception message:
//	StringBuffer message = new StringBuffer();
//	//message.append("下列字段不能为空：");
//	if (errFields.size() > 0) {
//		String[] temp = (String[]) errFields.toArray(new String[0]);
//		message.append(CommonConstant.SPACE_MARK + temp[0] + CommonConstant.SPACE_MARK);
//		for ( int i= 1; i < temp.length; i++ ) {
//			message.append("、");
//			message.append(CommonConstant.SPACE_MARK + temp[i] + CommonConstant.SPACE_MARK);
//		}
//		// throw the exception:
//		throw new NullFieldException(message.toString());
//	}

	FieldDBValidate.validate(this);
}
/**
 * <p>需要在一个循环中访问的属性的名称数组。
 * <p>
 * 创建日期：(??Date??)
 * @return java.lang.String[]
 */
public java.lang.String[] getAttributeNames() {

	return new String[]{ "cgeneralhid", "cinventoryid", "cbaseid", "vbatchcode", "vfree1", "vfree2", "vfree3", "vfree4", "vfree5", "dvalidate", "dbizdate", "dstandbydate", "vproductbatch", "nshouldoutnum", "nshouldoutassistnum", "noutnum", "noutassistnum", "nshouldinnum", "castunitid", "nneedinassistnum", "ninnum", "ninassistnum", "ntranoutnum", "nprice", "nmny", "nplannedprice", "nplannedmny", "csourcebillhid", "csourcebillbid", "csourcetype", "vsourcebillcode", "fchecked", "cprojectid", "ccostobject", "ccorrespondbid", "ccorrespondhid", "ccorrespondtype", "ccorrespondcode", "flargess", "vuserdef1", "vuserdef2", "vuserdef3", "vuserdef4", "vuserdef5", "vuserdef6", "bzgflag", "isok", "cwp", "cfirsttype", "cfirstbillhid", "cfirstbillbid", "cprojectphaseid", "dr", "ts", "dzgdate", "vfree", "crowno", "corder_bb1id",
			"vuserdef7", "vuserdef8", "vuserdef8", "vuserdef10", 
			"vuserdef11", "vuserdef12", "vuserdef13", "vuserdef14", "vuserdef15","vuserdef16", "vuserdef17", "vuserdef18", "vuserdef19", "vuserdef20",
			"pk_defdoc1", "pk_defdoc2", "pk_defdoc3", "pk_defdoc4", "pk_defdoc5", "pk_defdoc6", "pk_defdoc7", "pk_defdoc8", "pk_defdoc9", "pk_defdoc10",
			"pk_defdoc11", "pk_defdoc12", "pk_defdoc13", "pk_defdoc14", "pk_defdoc15", "pk_defdoc16", "pk_defdoc17", "pk_defdoc18", "pk_defdoc19", "pk_defdoc20",
      "vsourcebillcode","vnote", "pk_cubasdoc" //wanglei 2014-05-28
			};
}
/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2001-6-11)
 * @param key java.lang.String
 */
public Object getAttributeValue(String attributeName) {

	if (attributeName.equals("cgeneralbid")) {
		return m_cgeneralbid;
	}
	else if (attributeName.equals("cgeneralhid")) {
		return m_cgeneralhid;
	}
	else if (attributeName.equals("cinventoryid")) {
		return m_cinventoryid;
	}
	else if (attributeName.equals("cbaseid")) {
		return m_cbaseid;
	}
	else if (attributeName.equals("vbatchcode")) {
		return m_vbatchcode;
	}
	else if (attributeName.equals("vfree")) {
		return m_vfree;
	}
	else if (attributeName.equals("vfree1")) {
		return m_vfree1;
	}
	else if (attributeName.equals("vfree2")) {
		return m_vfree2;
	}
	else if (attributeName.equals("vfree3")) {
		return m_vfree3;
	}
	else if (attributeName.equals("vfree4")) {
		return m_vfree4;
	}
	else if (attributeName.equals("vfree5")) {
		return m_vfree5;
	}
	else if (attributeName.equals("dvalidate")) {
		return m_dvalidate;
	}
	else if (attributeName.equals("dbizdate")) {
		return m_dbizdate;
	}
	else if (attributeName.equals("dstandbydate")) {
		return m_dstandbydate;
	}
	else if (attributeName.equals("vproductbatch")) {
		return m_vproductbatch;
	}
	else if (attributeName.equals("nshouldoutnum")) {
		return m_nshouldoutnum;
	}
	else if (attributeName.equals("nshouldoutassistnum")) {
		return m_nshouldoutassistnum;
	}
	else if (attributeName.equals("noutnum")) {
		return m_noutnum;
	}
	else if (attributeName.equals("noutassistnum")) {
		return m_noutassistnum;
	}
	else if (attributeName.equals("nshouldinnum")) {
		return m_nshouldinnum;
	}
	else if (attributeName.equals("castunitid")) {
		return m_castunitid;
	}
	else if (attributeName.equals("nneedinassistnum")) {
		return m_nneedinassistnum;
	}
	else if (attributeName.equals("ninnum")) {
		return m_ninnum;
	}
	else if (attributeName.equals("ninassistnum")) {
		return m_ninassistnum;
	}
	else if (attributeName.equals("ntranoutnum")) {
		return m_ntranoutnum;
	}
	else if (attributeName.equals("nprice")) {
		return m_nprice;
	}
	else if (attributeName.equals("nmny")) {
		return m_nmny;
	}
	else if (attributeName.equals("nplannedprice")) {
		return m_nplannedprice;
	}
	else if (attributeName.equals("nplannedmny")) {
		return m_nplannedmny;
	}
	else if (attributeName.equals("cupsourcebillid")) {
		return m_csourcebillhid;
	}
	else if (attributeName.equals("cupsourcebillrowid")) {
		return m_csourcebillbid;
	}
	else if (attributeName.equals("cupsourcebilltype")) {
		return m_csourcetype;
	}
	else if (attributeName.equals("vsourcebillcode")) {
		return m_vsourcebillcode;
	}
  else if (attributeName.equals("vfirstbillcode")) {
    return m_vfirstbillcode;
  }
	else if (attributeName.equals("fchecked")) {
		return m_fchecked;
	}
	else if (attributeName.equals("cprojectid")) {
		return m_cprojectid;
	}
	else if (attributeName.equals("cprojectphaseid")) {
		return m_cprojectphaseid;
	}
	else if (attributeName.equals("ccostobject")) {
		return m_ccostobject;
	}
	else if (attributeName.equals("ccorrespondbid")) {
		return m_ccorrespondbid;
	}
	else if (attributeName.equals("ccorrespondhid")) {
		return m_ccorrespondhid;
	}
	else if (attributeName.equals("ccorrespondtype")) {
		return m_ccorrespondtype;
	}
	else if (attributeName.equals("ccorrespondcode")) {
		return m_ccorrespondcode;
	}
	else if (attributeName.equals("flargess")) {
		return m_flargess;
	}
	else if (attributeName.equals("vuserdef1")) {
		return m_vuserdef1;
	}
	else if (attributeName.equals("vuserdef2")) {
		return m_vuserdef2;
	}
	else if (attributeName.equals("vuserdef3")) {
		return m_vuserdef3;
	}
	else if (attributeName.equals("vuserdef4")) {
		return m_vuserdef4;
	}
	else if (attributeName.equals("vuserdef5")) {
		return m_vuserdef5;
	}
	else if (attributeName.equals("vuserdef6")) {
		return m_vuserdef6;
	}
	else if (attributeName.equals("bzgflag")) {
		return m_bzgflag;
	}
	else if (attributeName.equals("isok")) {
		return m_isok;
	}
	else if (attributeName.equals("cwp")) {
		return m_cwp;
	}
	else if (attributeName.equals("cfirsttype")) {
		return m_cfirsttype;
	}
	else if (attributeName.equals("cfirstbillhid")) {
		return m_cfirstbillhid;
	}
	else if (attributeName.equals("cfirstbillbid")) {
		return m_cfirstbillbid;
	}
	else if (attributeName.equals("dr")) {
		return m_dr;
	}
	else if (attributeName.equals("ts")) {
		return m_ts;
	}
	else if (attributeName.equals("dzgdate")) {
		return m_dzgdate;
	}
	else if (attributeName.equals("crowno")) {
		return m_crowno;
	}
	else if (attributeName.equals("csourcebillname")) {
		return m_csourcebillname;
	}
	else if (attributeName.equals("csourcebillcode")) {
		return m_csourcebillcode;
	}
	else if (attributeName.equals("corder_bb1id")) {
		return m_corder_bb1id;
	}
	else if (attributeName.equals("vuserdef7")) {
		return m_vuserdef7;
	}
	else if (attributeName.equals("vuserdef8")) {
		return m_vuserdef8;
	}
	else if (attributeName.equals("vuserdef9")) {
		return m_vuserdef9;
	}
	else if (attributeName.equals("vuserdef10")) {
		return m_vuserdef10;
	}
	else if (attributeName.equals("vuserdef11")) {
		return m_vuserdef11;
	}
	else if (attributeName.equals("vuserdef12")) {
		return m_vuserdef12;
	}
	else if (attributeName.equals("vuserdef13")) {
		return m_vuserdef13;
	}
	else if (attributeName.equals("vuserdef14")) {
		return m_vuserdef14;
	}
	else if (attributeName.equals("vuserdef15")) {
		return m_vuserdef15;
	}
	else if (attributeName.equals("vuserdef16")) {
		return m_vuserdef16;
	}
	else if (attributeName.equals("vuserdef17")) {
		return m_vuserdef17;
	}
	else if (attributeName.equals("vuserdef18")) {
		return m_vuserdef18;
	}
	else if (attributeName.equals("vuserdef19")) {
		return m_vuserdef19;
	}
	else if (attributeName.equals("vuserdef20")) {
		return m_vuserdef20;
	}

	else if (attributeName.equals("pk_defdoc1")) {
		return m_pk_defdoc1;
	}
	else if (attributeName.equals("pk_defdoc2")) {
		return m_pk_defdoc2;
	}
	else if (attributeName.equals("pk_defdoc3")) {
		return m_pk_defdoc3;
	}
	else if (attributeName.equals("pk_defdoc4")) {
		return m_pk_defdoc4;
	}
	else if (attributeName.equals("pk_defdoc5")) {
		return m_pk_defdoc5;
	}
	else if (attributeName.equals("pk_defdoc6")) {
		return m_pk_defdoc6;
	}
	else if (attributeName.equals("pk_defdoc7")) {
		return m_pk_defdoc7;
	}
	else if (attributeName.equals("pk_defdoc8")) {
		return m_pk_defdoc8;
	}
	else if (attributeName.equals("pk_defdoc9")) {
		return m_pk_defdoc9;
	}
	else if (attributeName.equals("pk_defdoc10")) {
		return m_pk_defdoc10;
	}

	else if (attributeName.equals("pk_defdoc11")) {
		return m_pk_defdoc11;
	}
	else if (attributeName.equals("pk_defdoc12")) {
		return m_pk_defdoc12;
	}
	else if (attributeName.equals("pk_defdoc13")) {
		return m_pk_defdoc13;
	}
	else if (attributeName.equals("pk_defdoc14")) {
		return m_pk_defdoc14;
	}
	else if (attributeName.equals("pk_defdoc15")) {
		return m_pk_defdoc15;
	}
	else if (attributeName.equals("pk_defdoc16")) {
		return m_pk_defdoc16;
	}
	else if (attributeName.equals("pk_defdoc17")) {
		return m_pk_defdoc17;
	}
	else if (attributeName.equals("pk_defdoc18")) {
		return m_pk_defdoc18;
	}
	else if (attributeName.equals("pk_defdoc19")) {
		return m_pk_defdoc19;
	}
	else if (attributeName.equals("pk_defdoc20")) {
		return m_pk_defdoc20;
	}
	
	else if (attributeName.equals("pk_reqcorp")) {
		return m_pk_reqcorp;
	}	
	else if (attributeName.equals("pk_reqstoorg")) {
		return m_pk_reqstoorg;
	}	
	else if (attributeName.equals("pk_creqwareid")) {
		return m_pk_creqwareid;
	}	
	else if (attributeName.equals("pk_invoicecorp")) {
		return m_pk_invoicecorp;
	}	
	else if (attributeName.equals("bzgyfflag")) {
		return m_bzgyfflag;
	}
	else if (attributeName.equals("vnote")) {
	  return m_vnote;
	}
	//wanglei 2014-05-28
	else if (attributeName.equals("pk_cubasdoc")) {
		  return m_pk_cubasdoc;
		}
	return null;
}
/**
 *  <p>对参数name对型的属性设置值。
 *  <p>
 * 创建日期：(2001-6-11)
 * @param key java.lang.String
 */
public void setAttributeValue(String name, Object value) {

	try {
		if (name.equals("cgeneralbid")) {
			m_cgeneralbid = (String) value;
		}
		else if (name.equals("cgeneralhid")) {
			m_cgeneralhid = (String) value;
		}
		else if (name.equals("cinventoryid")) {
			m_cinventoryid = (String) value;
		}
		else if (name.equals("cbaseid")) {
			m_cbaseid = (String) value;
		}
		else if (name.equals("vbatchcode")) {
			m_vbatchcode = (String) value;
		}
		else if (name.equals("vfree")) {
			m_vfree = (String) value;
		}
		else if (name.equals("vfree1")) {
			m_vfree1 = (String) value;
		}
		else if (name.equals("vfree2")) {
			m_vfree2 = (String) value;
		}
		else if (name.equals("vfree3")) {
			m_vfree3 = (String) value;
		}
		else if (name.equals("vfree4")) {
			m_vfree4 = (String) value;
		}
		else if (name.equals("vfree5")) {
			m_vfree5 = (String) value;
		}
		else if (name.equals("dvalidate")) {
			m_dvalidate = (UFDate) value;
		}
		else if (name.equals("dbizdate")) {
			m_dbizdate = (UFDate) value;
		}
		else if (name.equals("dstandbydate")) {
			m_dstandbydate = (UFDate) value;
		}
		else if (name.equals("vproductbatch")) {
			m_vproductbatch = (String) value;
		}
		else if (name.equals("nshouldoutnum")) {
			m_nshouldoutnum = (UFDouble) value;
		}
		else if (name.equals("nshouldoutassistnum")) {
			m_nshouldoutassistnum = (UFDouble) value;
		}
		else if (name.equals("noutnum")) {
			m_noutnum = (UFDouble) value;
		}
		else if (name.equals("noutassistnum")) {
			m_noutassistnum = (UFDouble) value;
		}
		else if (name.equals("nshouldinnum")) {
			m_nshouldinnum = (UFDouble) value;
		}
		else if (name.equals("castunitid")) {
			m_castunitid = (String) value;
		}
		else if (name.equals("nneedinassistnum")) {
			m_nneedinassistnum = (UFDouble) value;
		}
		else if (name.equals("ninnum")) {
			m_ninnum = (UFDouble) value;
		}
		else if (name.equals("ninassistnum")) {
			m_ninassistnum = (UFDouble) value;
		}
		else if (name.equals("ntranoutnum")) {
			m_ntranoutnum = (UFDouble) value;
		}
		else if (name.equals("nprice")) {
			m_nprice = (UFDouble) value;
		}
		else if (name.equals("nmny")) {
			m_nmny = (UFDouble) value;
		}
		else if (name.equals("nplannedprice")) {
			m_nplannedprice = (UFDouble) value;
		}
		else if (name.equals("nplannedmny")) {
			m_nplannedmny = (UFDouble) value;
		}
		else if (name.equals("cupsourcebillid")) {
			m_csourcebillhid = (String) value;
		}
		else if (name.equals("cupsourcebillrowid")) {
			m_csourcebillbid = (String) value;
		}
		else if (name.equals("cupsourcebilltype")) {
			m_csourcetype = (String) value;
		}
		else if (name.equals("vsourcebillcode")) {
			m_vsourcebillcode = (String) value;
		}
    else if (name.equals("vfirstbillcode")) {
      m_vfirstbillcode = (String) value;
    }
		else if (name.equals("fchecked")) {
			m_fchecked = (Integer) value;
		}
		else if (name.equals("cprojectid")) {
			m_cprojectid = (String) value;
		}
		else if (name.equals("cprojectphaseid")) {
			m_cprojectphaseid = (String) value;
		}
		else if (name.equals("ccostobject")) {
			m_ccostobject = (String) value;
		}
		else if (name.equals("ccorrespondbid")) {
			m_ccorrespondbid = (String) value;
		}
		else if (name.equals("ccorrespondhid")) {
			m_ccorrespondhid = (String) value;
		}
		else if (name.equals("ccorrespondtype")) {
			m_ccorrespondtype = (String) value;
		}
		else if (name.equals("ccorrespondcode")) {
			m_ccorrespondcode = (String) value;
		}
		else if (name.equals("flargess")) {
			m_flargess = (UFBoolean) value;
		}
		else if (name.equals("vuserdef1")) {
			m_vuserdef1 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef2")) {
			m_vuserdef2 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef3")) {
			m_vuserdef3 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef4")) {
			m_vuserdef4 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef5")) {
			m_vuserdef5 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef6")) {
			m_vuserdef6 = value == null ? null : value.toString();
		}
		else if (name.equals("bzgflag")) {
			m_bzgflag = (UFBoolean) value;
		}
		else if (name.equals("isok")) {
			m_isok = (UFBoolean) value;
		}
		else if (name.equals("cwp")) {
			m_cwp = (String) value;
		}
		else if (name.equals("cfirsttype")) {
			m_cfirsttype = (String) value;
		}
		else if (name.equals("cfirstbillhid")) {
			m_cfirstbillhid = (String) value;
		}
		else if (name.equals("cfirstbillbid")) {
			m_cfirstbillbid = (String) value;
		}
		else if (name.equals("dr")) {
			m_dr = (Integer) value;
		}
		else if (name.equals("ts")) {
			m_ts = (String) value;
		}
		else if (name.equals("dzgdate")) {
			m_dzgdate = (UFDate) value;
		}
		else if (name.equals("crowno")) {
			m_crowno = (String) value;
		}
		else if (name.equals("csourcebillname")) {
			m_csourcebillname = (String) value;
		}
		else if (name.equals("csourcebillcode")) {
			m_csourcebillcode = (String) value;
		}
		else if (name.equals("corder_bb1id")) {
			m_corder_bb1id = (String) value;
		}
		
		else if (name.equals("vuserdef7")) {
			m_vuserdef7 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef8")) {
			m_vuserdef8 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef9")) {
			m_vuserdef9 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef10")) {
			m_vuserdef10 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef11")) {
			m_vuserdef11 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef12")) {
			m_vuserdef12 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef13")) {
			m_vuserdef13 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef14")) {
			m_vuserdef14 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef15")) {
			m_vuserdef15 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef16")) {
			m_vuserdef16 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef17")) {
			m_vuserdef17 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef18")) {
			m_vuserdef18 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef19")) {
			m_vuserdef19 = value == null ? null : value.toString();
		}
		else if (name.equals("vuserdef20")) {
			m_vuserdef20 = value == null ? null : value.toString();
		}

		else if (name.equals("pk_defdoc1")) {
			m_pk_defdoc1 = (String) value;
		}
		else if (name.equals("pk_defdoc2")) {
			m_pk_defdoc2 = (String) value;
		}
		else if (name.equals("pk_defdoc3")) {
			m_pk_defdoc3 = (String) value;
		}
		else if (name.equals("pk_defdoc4")) {
			m_pk_defdoc4 = (String) value;
		}
		else if (name.equals("pk_defdoc5")) {
			m_pk_defdoc5 = (String) value;
		}
		else if (name.equals("pk_defdoc6")) {
			m_pk_defdoc6 = (String) value;
		}
		else if (name.equals("pk_defdoc7")) {
			m_pk_defdoc7 = (String) value;
		}
		else if (name.equals("pk_defdoc8")) {
			m_pk_defdoc8 = (String) value;
		}
		else if (name.equals("pk_defdoc9")) {
			m_pk_defdoc9 = (String) value;
		}
		else if (name.equals("pk_defdoc10")) {
			m_pk_defdoc10 = (String) value;
		}

		else if (name.equals("pk_defdoc11")) {
			m_pk_defdoc11 = (String) value;
		}
		else if (name.equals("pk_defdoc12")) {
			m_pk_defdoc12 = (String) value;
		}
		else if (name.equals("pk_defdoc13")) {
			m_pk_defdoc13 = (String) value;
		}
		else if (name.equals("pk_defdoc14")) {
			m_pk_defdoc14 = (String) value;
		}
		else if (name.equals("pk_defdoc15")) {
			m_pk_defdoc15 = (String) value;
		}
		else if (name.equals("pk_defdoc16")) {
			m_pk_defdoc16 = (String) value;
		}
		else if (name.equals("pk_defdoc17")) {
			m_pk_defdoc17 = (String) value;
		}
		else if (name.equals("pk_defdoc18")) {
			m_pk_defdoc18 = (String) value;
		}
		else if (name.equals("pk_defdoc19")) {
			m_pk_defdoc19 = (String) value;
		}
		else if (name.equals("pk_defdoc20")) {
			m_pk_defdoc20 = (String) value;
		}
		
		else if (name.equals("pk_reqcorp")) {
			m_pk_reqcorp = (String) value;
		}
		else if (name.equals("pk_reqstoorg")) {
			m_pk_reqstoorg = (String) value;
		}
		else if (name.equals("pk_creqwareid")) {
			m_pk_creqwareid = (String) value;
		}
		else if (name.equals("pk_invoicecorp")) {
			m_pk_invoicecorp = (String) value;
		}
		else if (name.equals("bzgyfflag")) {
			m_bzgyfflag = (UFBoolean) value;
		}
		else if (name.equals("vnote")) {
		  m_vnote = (String)value;
		}
		//wanglei 2014-05-28
		else if (name.equals("pk_cubasdoc")) {
			m_pk_cubasdoc = (String)value;
		}
	}
	catch (ClassCastException e) {
		throw new ClassCastException("setAttributeValue方法中为 " + name + " 赋值时类型转换错误！（值：" + value + "）");
	}
}




















































	public String m_cbaseid;
	public String m_cfirstbillbid;
	public String m_cfirstbillhid;
	public String m_cfirsttype;
	public String m_corder_bb1id;//订单到货计划行ID
	public String m_cprojectphaseid;
	public String m_crowno;//行号
	private String m_csourcebillcode;
	private String m_csourcebillname;
	//
	public Integer m_dr;
	public UFDate m_dzgdate;
	//V30增加
	public UFDouble m_hsl;//入库单表体换算率
	//表体编辑状态:0 正常;1 增加;2 修改;3 删除
	private int m_nBodyEditStatus=0;
	public String m_ts;
	public String m_vfree;

/**
 * 此处插入方法说明。
 * 功能描述:增加的获得表体编辑状态
 * 输入参数:
 * 返回值:表体编辑状态
 * 异常处理:
 */
public int getBodyEditStatus() {
	return m_nBodyEditStatus;
}

/**
 * 属性m_cinventoryid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCbaseid() {
	return m_cbaseid;
}

/**
 * 属性m_cfirstbillbid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCfirstbillbid() {
	return m_cfirstbillbid;
}

/**
 * 属性m_cfirstbillhid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCfirstbillhid() {
	return m_cfirstbillhid;
}

/**
 * 属性m_cfirsttype的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCfirsttype() {
	return m_cfirsttype;
}

/**
 * /**
 *  * 作者：晁志平
 *  * 功能：行号的afterEdit
 *  * 参数：无
 *  * 返回：无
 *  * 例外：无
 *  * 日期：(2004-05-31 11:07:27)
 *  * 修改日期，修改人，修改原因，注释标志
 *  *-/
 * @return java.lang.String
 */
public java.lang.String getCorder_bb1id() {
	return m_corder_bb1id;
}

/**
 * 属性m_cprojectphaseid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCprojectphaseid() {
	return m_cprojectphaseid;
}

/**
 * 属性m_crowno的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCrowno() {
	return m_crowno;
}

public String getPk_reqcorp() {
	return m_pk_reqcorp;
}

public String getPk_corp() {
	return m_pk_corp;
}

public void setPk_corp(String unitCode) {
	m_pk_corp = unitCode;
}

public String getPk_invoicecorp() {
	return m_pk_invoicecorp;
}
public String getPk_reqstoorg() {
	return m_pk_reqstoorg;
}
public String getPk_creqwareid() {
	return m_pk_creqwareid;
}
/**
 * 属性m_csourcebillbid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCsourcebillcode() {
	return m_csourcebillcode;
}

/**
 * 属性m_csourcebillbid的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getCsourcebillname() {
	return m_csourcebillname;
}

/**
 * 此处插入方法说明。
 * 功能描述:
 * 输入参数:
 * 返回值:
 * 异常处理:
 */
public Integer getDr() {
	return m_dr;
}

/**
 * ?user>
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2002-4-25 20:27:48)
 * 修改日期，修改人，修改原因，注释标志：
 *
 * @return nc.vo.pub.lang.UFDate
 */
public nc.vo.pub.lang.UFDate getDzgdate() {
	return m_dzgdate;
}

/**
 * 此处插入方法说明。
 * 创建日期：(2003-11-11 11:34:58)
 */
public FieldDBValidateVO [] getFieldDBValidateVOs(){
	return	new	FieldDBValidateVO[]{
		new	FieldDBValidateVO(
			NumField.class,
			new	String[]{nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0002282")/*@res "数量"*/},
			new	UFDouble[]{m_ninnum}
		),
		new	FieldDBValidateVO(
			PriceField.class,
			new	String[]{nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0000741")/*@res "单价"*/},
			new	UFDouble[]{m_nprice}
		),
		new	FieldDBValidateVO(
			MoneyField.class,
			new	String[]{nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0004112")/*@res "金额"*/},
			new	UFDouble[]{m_nmny}
		)
	} ;
}

/**
 * ?user>
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2004-5-27 13:01:06)
 * 修改日期，修改人，修改原因，注释标志：
 *
 * @return nc.vo.pub.lang.UFDouble
 */
public nc.vo.pub.lang.UFDouble getHsl() {
	return m_hsl;
}

/**
 * 此处插入方法说明。
 * 功能描述:
 * 输入参数:
 * 返回值:
 * 异常处理:
 */
public String getTs() {
	return m_ts;
}

/**
 * 属性m_vfree的Getter方法。
 *
 * 创建日期：(2001-6-11)
 * @return String
 */
public String getVfree() {
	return m_vfree;
}

/**
 * 此处插入方法说明。
 * 功能描述:增加的设置表体编辑状态
 * 输入参数:
 * 返回值:
 * 异常处理:
 */
public void setBodyEditStatus(int nStatus) {
	m_nBodyEditStatus=nStatus;
}

/**
 * 属性m_cinventoryid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cinventoryid String
 */
public void setCbaseid(String newCbaseid) {

	m_cbaseid = newCbaseid;
}

public void setPk_reqcorp(String newCorp) {

	m_pk_reqcorp = newCorp;
}
public void setPk_invoicecorp(String newCorp) {

	m_pk_invoicecorp = newCorp;
}
public void setPk_reqstoorg(String newCorp) {

	m_pk_reqstoorg = newCorp;
}
public void setPk_creqwareid(String newCorp) {

	m_pk_creqwareid = newCorp;
}
/**
 * 属性m_cfirstbillbid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cfirstbillbid String
 */
public void setCfirstbillbid(String newCfirstbillbid) {

	m_cfirstbillbid = newCfirstbillbid;
}

/**
 * 属性m_cfirstbillhid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cfirstbillhid String
 */
public void setCfirstbillhid(String newCfirstbillhid) {

	m_cfirstbillhid = newCfirstbillhid;
}

/**
 * 属性m_cfirsttype的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cfirsttype String
 */
public void setCfirsttype(String newCfirsttype) {

	m_cfirsttype = newCfirsttype;
}

/**
 * /**
 *  * 作者：晁志平
 *  * 功能：行号的afterEdit
 *  * 参数：无
 *  * 返回：无
 *  * 例外：无
 *  * 日期：(2004-05-31 11:07:27)
 *  * 修改日期，修改人，修改原因，注释标志
 *  *-/
 * @param newM_corder_bb1id java.lang.String
 */
public void setCorder_bb1id(java.lang.String newM_corder_bb1id) {
	m_corder_bb1id = newM_corder_bb1id;
}

/**
 * 属性m_cprojectphaseid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_cprojectphaseid String
 */
public void setCprojectphaseid(String newCprojectphaseid) {

	m_cprojectphaseid = newCprojectphaseid;
}

/**
 * 属性m_crowno的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_crowno String
 */
public void setCrowno(String newCrowno) {

	m_crowno = newCrowno;
}
public void setCvendorid(String newCrowno) {

	m_cvendorid = newCrowno;
}

/**
 * 属性m_csourcebillbid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_csourcebillbid String
 */
public void setCsourcebillcode(String newCsourcebillbid) {

	m_csourcebillcode = newCsourcebillbid;
}

/**
 * 属性m_csourcebillbid的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_csourcebillbid String
 */
public void setCsourcebillname(String newCsourcebillbid) {

	m_csourcebillname = newCsourcebillbid;
}

/**
 * 此处插入方法说明。
 * 功能描述:
 * 输入参数:
 * 返回值:
 * 异常处理:
 */
public void setDr(Integer newDr) {
	m_dr = newDr;
}

/**
 * ?user>
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2002-4-25 20:27:48)
 * 修改日期，修改人，修改原因，注释标志：
 *
 * @param newM_dzgdate nc.vo.pub.lang.UFDate
 */
public void setDzgdate(nc.vo.pub.lang.UFDate newM_dzgdate) {
	m_dzgdate = newM_dzgdate;
}

/**
 * ?user>
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2004-5-27 13:01:06)
 * 修改日期，修改人，修改原因，注释标志：
 *
 * @param newM_hsl nc.vo.pub.lang.UFDouble
 */
public void setHsl(nc.vo.pub.lang.UFDouble newM_hsl) {
	m_hsl = newM_hsl;
}

/**
 * 此处插入方法说明。
 * 功能描述:
 * 输入参数:
 * 返回值:
 * 异常处理:
 */
public void setTs(String newTs) {
	m_ts = newTs;
}

/**
 * 属性m_vfree的setter方法。
 *
 * 创建日期：(2001-6-11)
 * @param newM_vfree String
 */
public void setVfree(String newVfree) {

	m_vfree = newVfree;
}

public UFBoolean getBtoinzgflag() {
	return m_btoinzgflag;
}
public void setBtoinzgflag(UFBoolean newBtoinzgflag) {

	m_btoinzgflag = newBtoinzgflag;
}

/**
 * 
 * 方法功能描述：返回备注。
 * <p>
 * <b>examples:</b>
 * <p>
 * 使用示例
 * <p>
 * <b>参数说明</b>
 * @return
 * <p>
 * @author zhaoyha
 * @time 2008-11-20 上午09:28:26
 */
public String getVnote(){
  return m_vnote;
}

/**
 * 
 * 方法功能描述：设置备注。
 * <p>
 * <b>examples:</b>
 * <p>
 * 使用示例
 * <p>
 * <b>参数说明</b>
 * @param note
 * <p>
 * @author zhaoyha
 * @time 2008-11-20 上午09:29:05
 */
public void setVnote(String note){
  m_vnote=note;
}
/**
 * @return the m_pk_cubasdoc
 */
public String getPk_cubasdoc() {
	return m_pk_cubasdoc;
}
/**
 * @param m_pk_cubasdoc the m_pk_cubasdoc to set
 */
public void setPk_cubasdoc(String m_cvendorbasid) {
	this.m_pk_cubasdoc = m_cvendorbasid;
}

}