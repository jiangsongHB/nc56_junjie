package nc.vo.ep.dj;

/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
 \***************************************************************/

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import nc.ui.pub.beans.constenum.DefaultConstEnum;
import nc.vo.arap.global.ArapCommonTool;
import nc.vo.arap.selectedpay.ARAPValueObject;
import nc.vo.cmp.settlement.SettlementBodyVO;
import nc.vo.dap.inteface.IAccountGetBalanceInfo;
import nc.vo.fa.outer.IRentVO;
import nc.vo.pub.CircularlyAccessibleValueObject;
import nc.vo.pub.NullFieldException;
import nc.vo.pub.ValidationException;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDate;
import nc.vo.pub.lang.UFDateTime;
import nc.vo.pub.lang.UFDouble;
import nc.vo.scm.relacal.IRelaCalInfos;

/**
 * 单据辅表VO 
 *
 * 创建日期：(2000-10-9)
 *
 * @author：
 */
public class DJZBItemVO extends ARAPValueObject implements IRentVO, IAccountGetBalanceInfo, IRelaCalInfos {
	/**
	 * 
	 */

	private String[] attrname = null;
	private static final long serialVersionUID = 8656260394012670233L;

	/*记录生成单据的对照信息*/
	public List<ArapBillMapVO> billmap;
	/**票据号*/
	public String m_pjh;
	/**
	 * 票据结算方式
	 */
	public String m_pj_jsfs;
	/**
	 * 收款银行账号
	 */
	public String m_bankacc;
	/**辅表PK*/
	public String m_fb_oid;
	/**公司PK*/
	public String m_dwbm;
	/**收付标志*/
	public String m_sfbz;
	/**单据号*/
	public String m_djbh;
	/**单据分录编号*/
	public Integer m_flbh = new Integer(1);

	/**并账标志*/
	public Integer m_xgbh = null;

	/**分录修改编号  */
	public UFBoolean m_old_sys_flag = UFBoolean.FALSE;

	/**收付方向*/
	public Integer m_fx = new Integer(0);
	/**审批状态*/
	public Integer m_spzt;

	/**审批状态*/
	public String m_zy;

	/**科目编码*/
	public String m_kmbm;
	/**伙伴编码*/
	public String m_hbbm;

	/**币种编码*/
	public String m_bzbm;
	/**本币汇率*/
	public UFDouble m_bbhl = ArapCommonTool.ZERO;
	/**辅币汇率*/
	public UFDouble m_fbhl = ArapCommonTool.ZERO;
	/**专项id*/
	public String m_jobid;
	/**专项管理档案id*/
	public String m_xmbm2;

	/**借方原币金额*/
	public UFDouble m_jfybje = ArapCommonTool.ZERO;

	/**借方辅币金额*/
	public UFDouble m_jffbje = ArapCommonTool.ZERO;
	/**借方本币金额*/
	public UFDouble m_jfbbje = ArapCommonTool.ZERO;
	/**编辑前借方本币金额*/
	public UFDouble m_oldjfbbje = ArapCommonTool.ZERO;
	/**编辑前借原币余额*/
	public UFDouble m_oldybye = ArapCommonTool.ZERO;
	/**编辑前借方辅币余额*/
	public UFDouble m_oldfbye = ArapCommonTool.ZERO;
	/**编辑前借方本币余额*/
	public UFDouble m_oldbbye = ArapCommonTool.ZERO;
	/**原币余额*/
	public UFDouble m_ybye = ArapCommonTool.ZERO;
	/**辅币余额*/
	public UFDouble m_fbye = ArapCommonTool.ZERO;
	/**本币余额*/
	public UFDouble m_bbye = ArapCommonTool.ZERO;
	/**数量余额*/
	public UFDouble m_shlye = ArapCommonTool.ZERO;

	/**存货档案主键*/
	public String m_cinventoryid;
	/**存货管理档案主键*/
	public String m_chbm_cl;
	/**存货名称*/
	public String m_chmc;

	/**借方数量*/
	public UFDouble m_jfshl = ArapCommonTool.ZERO;

	/**单价*/
	public UFDouble m_dj = ArapCommonTool.ZERO;
	/**数量*/
	public UFDouble m_sl = ArapCommonTool.ZERO;
	/**借方原币税金*/
	public UFDouble m_jfybsj = ArapCommonTool.ZERO;
	/**借方辅币税金*/
	public UFDouble m_jffbsj = ArapCommonTool.ZERO;
	/**借方本币税金*/
	public UFDouble m_jfbbsj = ArapCommonTool.ZERO;
	/**付款银行名称*/
	public String m_fkyhmc;
	/**付款银行帐号*/
	public String m_fkyhzh;
	/**付款银行地址*/
	public String m_fkyhdz;
	/**收款银行名称*/
	public String m_skyhmc;
	/**收款银行帐号*/
	public String m_skyhzh;
	/**收款银行地址*/
	public String m_skyhdz;

	/**
	 * 坏帐计提子方案
	 */
	public String dstlsubcs;

	/**自定义项1*/
	public String m_zyx1;
	/**自定义项2*/
	public String m_zyx2;
	/**自定义项3*/
	public String m_zyx3;
	/**自定义项4*/
	public String m_zyx4;
	/**自定义项5*/
	public String m_zyx5;
	/**自定义项6*/
	public String m_zyx6;
	/**自定义项7*/
	public String m_zyx7;
	/**自定义项8*/
	public String m_zyx8;
	/**自定义项9*/
	public String m_zyx9;
	/**自定义项10*/
	public String m_zyx10;
	/**自定义项11*/
	public String m_zyx11;
	/**自定义项12*/
	public String m_zyx12;
	/**自定义项13*/
	public String m_zyx13;
	/**自定义项14*/
	public String m_zyx14;
	/**自定义项15*/
	public String m_zyx15;
	/**自定义项16*/
	public String m_zyx16;
	/**自定义项17*/

	public String m_zyx17;
	/**自定义项18*/
	public String m_zyx18;
	/**自定义项19*/
	public String m_zyx19;
	/**自定义项20*/
	public String m_zyx20;
	/**合同编号*/
	public String m_htbh;
	/**合同名称*/
	public String m_htmc;
	/**上层来源单据ID*/
	public String m_ddlx;
	/**订单号*/
	public String m_ddh;
	/**上层来源单据行id*/
	public String m_ddhh;
	/**发票号*/
	public String m_fph;
	/**上层来源单据类型*/
	public String m_jsfsbm;
	/**源头单据类型*/
	public String m_ph;
	/**开票日期*/
	public UFDate m_kprq;
	/**源头单据id*/
	public String m_xyzh;
	/**源头单据行id*/
	public String m_cksqsh;
	/**借方原币无税*/
	public UFDouble m_wbfybje = ArapCommonTool.ZERO;
	/**借方辅币无税*/
	public UFDouble m_wbffbje = ArapCommonTool.ZERO;
	/**借方本币无税*/
	public UFDouble m_wbfbbje = ArapCommonTool.ZERO;

	/**收入标志*/
	public UFBoolean m_srbz;
	/**收支项目ID*/
	public String m_szxmid;
	/**帐户ID*/
	public String m_accountid;
	/**收付款协议号*/
	public String m_sfkxyh;
	/**贷方原币金额*/
	public UFDouble m_dfybje = ArapCommonTool.ZERO;
	/**贷方辅币金额*/
	public UFDouble m_dffbje = ArapCommonTool.ZERO;
	/**贷方本币金额*/
	public UFDouble m_dfbbje = ArapCommonTool.ZERO;
	/**贷方数量*/
	public UFDouble m_dfshl = ArapCommonTool.ZERO;
	/**贷方原币税金*/

	public UFDouble m_dfybsj = ArapCommonTool.ZERO;
	/**贷方辅币税金*/
	public UFDouble m_dffbsj = ArapCommonTool.ZERO;
	/**贷方本币税金*/
	public UFDouble m_dfbbsj = ArapCommonTool.ZERO;
	/**主表PK*/
	public String m_vouchid;
	/**往来对象*/
	public Integer m_wldx = null;
	/**自由项关联主键*/
	public String m_freeitemid;
	/**借方原币无税金额*/
	public UFDouble m_jfybwsje;
	/**贷方原币无税金额*/
	public UFDouble m_dfybwsje;

	/**贷方本币无税金额*/
	public UFDouble m_dfbbwsje;
	/**税号*/
	public String m_tax_num;
	/**并帐日期*/
	public UFDate m_bz_date;

	public UFBoolean m_old_flag;
	/**并帐会计年度*/
	public String m_bz_kjnd;
	/**并帐会计期间*/
	public String m_bz_kjqj;
	/** 项目阶段*/
	public java.lang.String jobphaseid;
	/**项目基本档案*/
	public String m_pk_jobobjpha;
	/**款项用途*/
	public String m_kxyt;
	/**责任部门ID*/
	public String m_deptid;
	/**业务员编码*/
	public String m_ywybm;

	/**DJZBItemVO[]中的唯一标识*/
	public Integer m_djzbitemsIndex = null;

	/** 自由项 */
	public DJFBItemVO[] items = null;
	/**内部使用*/
	public DefdefVO[] freepropertys = null;

	/**收付款协议*/
	public DjfkxybVO[] fkxyvos = null;

	/**客商名称*/
	public String m_ksmc;
	/**客商地址*/
	public String m_ksdz;
	/**客商开户行*/
	public String m_kskhh;
	/**客商账号*/
	public String m_kszh;

	/**比种名称*/
	public String m_bzmc;
	/**收支项目名称*/
	public String m_szxmmc;
	/**帐户名称*/
	public String m_accidname;

	/**科目名称*/
	public String m_kmmc;
	/**部门名称*/
	public String m_bmmc;
	/**业务员名称*/
	public String m_ywymc;
	/**项目名称*/
	public String m_xmmc1;
	/**项目阶段名称*/
	public String m_xmjdmc;
	/**收付款协议名称*/
	public String m_sfkxymc;

	/**含税单价*/
	public UFDouble m_hsdj;

	/**扣税类别*/
	public Integer m_kslb = new Integer(1);

	/**cf add 坏账原币余额*/
	public UFDouble m_hzybye;

	/**坏账本币余额*/
	public UFDouble m_hzbbye;

	/**坏账辅币余额*/
	public UFDouble m_hzfbye;
	/**型号*/
	public String m_invtype;

	/**主计量单位主键*/
	public String m_pk_measdoc;

	/**税目税率主键*/
	public String m_pk_taxitems;

	public String m_pk_invbasdoc;

	/**客商档案主键*/
	public String m_pk_cubasdoc;

	/**开户银行主键*/
	public String m_pk_custbank;

	/**汇率主键*/
	public String m_pk_currrate;

	/**项目管理档案主键*/
	public String m_pk_jobmngfil;

	/**单位名称*/
	public String m_dwmc;

	/**账户标志*/
	public Integer m_accflag;

	/**账户币种编码*/
	public String m_zhbzbm;

	/**是否已经授权*/
	public UFBoolean m_isSqed = UFBoolean.FALSE;

	/**cf add 2002/06/24 授 权标志 0,未授权，1授权通过，－1用户取消授权,-2授权失败*/
	public Integer m_sqflag = new Integer(0);

	/**存货分类主键*/
	public String m_pk_invcl;
	/**删除标志*/
	public Integer m_dr = new Integer(0);

	/***/
	public UFDate m_RentDate = null;

	public String m_zjldwmc = null;

	/**生产订单号*/
	public String m_produceorder;

	/**票据类型*/
	public String m_notetype;

	/**批次号*/
	public String m_groupnum;

	/**存货分类*/
	public String m_stockcat;

	/**项目分类*/
	public String m_ItemStyle;

	/**票据结算方式*/
	public String m_pj_jsfs_mc;

	/**挂起标志*/
	public UFBoolean m_pausetransact = UFBoolean.FALSE;

	/**合同号*/
	public String m_contractno;

	/**订单客户*/
	public String m_ordercusmandoc;

	/**订单客户名称*/
	public String m_ordercusmandoc_name;
	/**票据类型名称*/
	public String m_notetype_name;
	/**内部使用*/
	public DJZBVO m_parent = null;
	/**同步时间戳*/
	public UFDateTime m_ts;

	/**事项审批单pk*/
	public String m_item_bill_pk;
	/**旧事项审批单pk*/
	public String m_item_bill_pk_old;
	/**事项审批单号*/
	public String m_item_bill_djbh;
	/**内部使用*/
	public transient UFBoolean m_isselected = UFBoolean.FALSE;
	/**手工审批流档案pk*/
	public String m_pk_arap_fengcun;
	/**手工审批流档案*/
	public String m_shenpi;
	/**外系统特殊标志*/
	public java.lang.String m_othersysflag;
	/**产品线*/
	public java.lang.String m_productline;
	/**项目*/
	public java.lang.String m_xm;
	/**项目要素*/
	public java.lang.String m_xmys;
	/**任务*/
	public java.lang.String m_task;
	/**产品线*/
	public java.lang.String m_productline_name;
	/**项目*/
	public java.lang.String m_xm_name;
	/**项目要素*/
	public java.lang.String m_xmys_name;
	/**任务*/
	public java.lang.String m_task_name;

	/**计划数*/
	public nc.vo.pub.lang.UFDouble m_plannum;

	/**执行数*/
	public nc.vo.pub.lang.UFDouble m_executenum;

	/**预算表名*/
	public java.lang.String m_bugettablename;

	/**费用类别*/
	public java.lang.String m_xslxmc;

	/**关闭人*/
	public java.lang.String m_closer;

	/**关闭日期*/
	public nc.vo.pub.lang.UFDate m_closedate;

	/**可用额度*/
	public nc.vo.pub.lang.UFDouble m_forelock = ArapCommonTool.ZERO;
	/**客商编码*/
	public String m_ksbm = null;

	/** “使用部门” */
	public String m_zyx16_mc;

	/**内部使用*/
	public Integer m_iSerialNumber = null;

	/**贴现利息原币金额*/
	private UFDouble txlx_ybje;
	/**贴现利息辅币金额*/
	private UFDouble txlx_fbje;
	/**贴现利息本币金额*/
	private UFDouble txlx_bbje;

	/**area classification PK*/
	private String m_strDqflPK = null;
	/**筹投资合同类型 PK*/
	private String m_strCtzhtlxPK = null;
	/**报价计量单位*/
	private String m_bjjldw;
	/**报价单位数量*/
	private UFDouble m_bjdwsl;
	/**报价单位含税单价*/
	private UFDouble m_bjdwhsdj;
	/**报价单位无税单价*/
	private UFDouble m_bjdwwsdj;

	/**启效日期*/
	private UFDate qxrq;
	/**责任部门ID*/
	private String zrdeptid;
	/**责任部门名称*/
	private String zrbmmc;
	/**收付款协议是否发生变化*/
	private UFBoolean isSFKXYChanged = UFBoolean.FALSE;
	/**散户*/
	private String sanhu;
	/**散户名称*/
	private String sanhuname;
	/**批次号*/
	private String seqnum;
	/**使用部门*/
	private String usedept;
	/**托收单号pk*/
	private String tbbh;
	/**固定资产卡片号*/
	private String facardbh;
	/**固定资产**/
	private String kpbh;
	/**现金流量项目*/
	private String cashitem;
	/**自由项21*/
	private String zyx21;
	/**自由项22*/
	private String zyx22;
	/**自由项23*/
	private String zyx23;
	/**自由项24*/
	private String zyx24;
	/**自由项25*/
	private String zyx25;
	/**自由项26*/
	private String zyx26;
	/**自由项27*/
	private String zyx27;
	/**自由项28*/
	private String zyx28;
	/**自由项29*/
	private String zyx29;
	/**自由项30*/
	private String zyx30;
	/**支付标志*/
	private Integer payflag;
	/**单据日期*/
	private UFDate billdate;
	/**密文*/
	private String encode;
	/**付款银行账号*/
	private String bankacc_fk;
	/**处理编号*/
	private String clbh;
	/**发票ID*/
	private String fphid;
	/**定单ID*/
	private String ddhid;
	/**出库单ID*/
	private String ckdid;
	/**出库单号*/

	private String ckdh;
	/**内部使用字段*/
	private UFBoolean isverifyfinished = UFBoolean.FALSE;
	/**内部使用字段*/
	private UFDate verifyfinisheddate = UFDate.getDate("3000-01-01");
	/**内部使用字段*/
	private nc.vo.pub.lang.UFDouble fkje;
	/**内部使用字段*/
	public String m_xbbm3;
	/**内部使用字段*/
	public Hashtable<String, UFDouble> source;
	/**内部使用字段*/
	public UFDate m_begin_date;
	/**内部使用字段*/
	public UFDate m_end_date;
	/**内部使用字段*/
	public String m_ywbm;
	/**内部使用字段*/
	public String m_cashflowmc;
	/**内部使用字段*/
	public String m_ggxh;
	/**内部使用字段*/
	public String m_zjldw;
	/**内部使用字段*/
	public String m_fjldw;
	/**内部使用字段*/
	public String m_pch;
	/**内部使用字段*/
	public String m_ksdh;
	/**内部使用字段*/
	public String m_kssh;
	/**支付人*/
	private String payman;
	/**支付日期*/
	private String paydate;

	/**
	 * UPT2006-v51-000005=原币票据利息
	 */
	private UFDouble ybpjlx;
	/**
	 *UPT2006-v51-000006=本币票据利息
	 */
	private UFDouble bbpjlx;

	/**
	 *UPT2006-v51-000007=辅币票据利息
	 */
	private UFDouble fbpjlx;
	/**
	 *UPT2006-v51-000008=原币贴现费用
	 */
	private UFDouble ybtxfy;
	/**
	 *UPT2006-v51-000009=本币贴现费用
	 */
	private UFDouble bbtxfy;
	/**
	 * UPT2006-v51-000010=辅币贴现费用
	 */
	private UFDouble fbtxfy;
	/**
	 * djxtflag=1 : 分录已经确认标志
	 */
	private Integer djxtflag;

	/**本方银行账号*/
	private String bfyhzh;
	/**对方银行账号*/
	private String dfyhzh;

	/**资金计划项目*/
	private String bankrollprojet;

	private String bankrollprojetname;

	private String pjdirection = null;

	private String tempddhh;//临时保存单据复制的上游PK

	private String tempddlx;//临时保存单据复制的上游PK

	/**
	 * 用于保存本类对象最后一次发生变化的所有属性和其值。
	 * 创建日期：(2005-7-20)
	 * 创建人：rocking
	 */
	private String[] m_strChangedAtts;
	/**
	 * 辅表特殊标志字符集，这些标志为系统内部使用的
	 * 建议使用方式为 "aatr1=X1,attr2=X2,........attrn=Xn"
	 * 其中attr为属性名，x1为属性值
	 */
	private String commonflag;

	private SettlementBodyVO settleBodyVO = null;

	/** 外部交换平台使用 */
	private SettlementBodyVO[] settlementinfo = null;

	private Integer tradertype;

	/**资产合同号*/
	private String assetpactno;
	/**设备编码*/
	private String equipmentcode;
	/**
	 * 预占用核销原币余额
	 */
	private UFDouble occupationmny = null;

	private UFDouble jsje = null;

	public String wldxpk; //往来对象相应值的pk

	private String djlxbm = null;

	private String djdl = null;

	public String getWldxpk() {
		if (m_wldx == 0) {
			return m_hbbm;
		} else if (m_wldx == 2) {
			return m_deptid;
		} else if (m_wldx == 3) {
			return m_ywybm;
		}
		return null;
	}

	public void setWldxpk(String wldxpk) {
		this.wldxpk = wldxpk;
	}

	//    private UFDouble 
	/**
	 * @return 返回 m_strCtzhtlxPK。
	 */
	public String getCtzhtlxPK() {
		return m_strCtzhtlxPK;
	}

	/**
	 * @param ctzhtlxPK 要设置的 m_strCtzhtlxPK。
	 */
	public void setCtzhtlxPK(String ctzhtlxPK) {
		m_strCtzhtlxPK = ctzhtlxPK;
	}

	/**
	 * @return 返回 m_strDqflPK。
	 */
	public String getDqflPK() {
		return m_strDqflPK;
	}

	/**
	 * @param dqflPK 要设置的 m_strDqflPK。
	 */
	public void setDqflPK(String dqflPK) {
		m_strDqflPK = dqflPK;
	}

	/**
	 * 使用主键字段进行初始化的构造子。
	 *
	 * 创建日期：(2000-10-9)
	 */
	public DJZBItemVO() {

	}

	/**
	 * 使用主键进行初始化的构造子。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param ??fieldNameForMethod??
	 *            主键值
	 */
	public DJZBItemVO(String newFb_oid) {

		// 为主键字段赋值:
		m_fb_oid = newFb_oid;
	}

	/**
	 * 使用主键进行初始化的构造子。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param ??fieldNameForMethod??
	 *            主键值
	 */
	public DJZBItemVO(String pk_corp, String djdl, Integer Syscode) {

		if (djdl == null || pk_corp == null || Syscode == null)
			return;

		if (djdl.equals("ys")) {
			setFx(new Integer(1));
		} else if (djdl.equals("yf")) {
			setFx(new Integer(-1));
		} else if (djdl.equals("sk")) {
			setFx(new Integer(-1));
		} else if (djdl.equals("fk")) {
			setFx(new Integer(1));

		} else if (djdl.equals("sj")) {
			setFx(new Integer(-1));
		} else if (djdl.equals("fj")) {
			setFx(new Integer(1));
		} else if (djdl.equals("hj")) {
			//注:代方有数据
			//{
			//setFx(new Integer(-1)); //方向
			//setSfbz("0"); //收付标志
			//}
			// 借方有数据
			//{
			//setFx(new Integer(1)); 方向
			//setSfbz("1"); 收付标志
			//}

		} else if (djdl.equals("ws")) {
			setFx(new Integer(-1));
		} else if (djdl.equals("wf")) {
			setFx(new Integer(1));

			//if (银行内部)
			//{
			//setSfbz("02"); 收付标志
			//}
			//else
			//{
			//setSfbz("01"); 收付标志
			//}

		} else
			;

	}

	/**
	 * 根类Object的方法,克隆这个VO对象。
	 *
	 * 创建日期：(2000-10-9)
	 */
	public Object clone() {

		// 复制基类内容并创建新的VO对象：
		Object o = null;
		try {
			o = super.clone();
		} catch (Exception e) {
		}
		DJZBItemVO dJFB = (DJZBItemVO) o;
		if (items != null) {
			DJFBItemVO[] itemss = new DJFBItemVO[items.length];
			for (int i = 0; i < items.length; i++) {
				itemss[i] = (DJFBItemVO) items[i].clone();
			}
			dJFB.setChildrenVO(itemss);
		}

		if (freepropertys != null) {
			DefdefVO[] freeprop = new DefdefVO[freepropertys.length];
			for (int i = 0; i < freepropertys.length; i++) {
				freeprop[i] = (DefdefVO) freepropertys[i].clone();
			}
			dJFB.freepropertys = freeprop;
		}

		if (fkxyvos != null) {
			DjfkxybVO[] fkxy = new DjfkxybVO[fkxyvos.length];
			for (int i = 0; i < fkxyvos.length; i++) {
				fkxy[i] = (DjfkxybVO) fkxyvos[i].clone();
			}
			dJFB.fkxyvos = fkxy;
		}
		//		// 你在下面复制本VO对象的所有属性：
		//		String key = null;
		//		String[] attr =getAttributeNames();
		//		for (int i = 0; i < attr.length; i++) {
		//			key = attr[i];
		//			dJFB.setAttributeValue(key, this.getAttributeValue(key));
		//		}

		return dJFB;
		//	    Object r=null;
		//	    try
		//	    {
		//	        ByteArrayOutputStream outarry=new ByteArrayOutputStream();
		//		    ObjectOutputStream out=new ObjectOutputStream(outarry);
		//		    out.writeObject(this);
		//		    byte[] o=outarry.toByteArray();
		//		    ByteArrayInputStream inarry=new ByteArrayInputStream(o);
		//		    ObjectInputStream in=new ObjectInputStream(inarry);
		//		    r=in.readObject();
		//	    }
		//	    catch(Exception e)
		//	    {
		//	        nc.bs.logging.Log.getInstance(this.getClass()).error(e.getMessage(),e);
		//	    }
		//	    return r;
	}

	/**
	 * 属性m_jfybwsje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public Integer getAccflag() {
		return m_accflag;
	}

	/**
	 * 属性m_accountid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getAccidname() {
		return m_accidname;
	}

	/**
	 * 属性m_accountid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getAccountid() {
		return m_accountid;
	}

	/**
	 * getAssetName 资产名称。
	 */
	public java.lang.String getAssetName() {
		return null;
	}

	/**
	 * <p>
	 * 需要在一个循环中访问的属性的名称数组。
	 * <p>
	 * 创建日期：(??Date??)
	 *
	 * @return java.lang.String[]
	 */
	public java.lang.String[] getAttributeNames() {
		if (attrname == null) {

			String[] selfattrs = new String[] { "tempddhh,tempddlx,commonflag", "pjdirection", "invtype", "ksbm", "forelock", "closer", "closedate", "plannum", "executenum",
					"bugettablename", "xslxmc", "productline_name", "xm_name", "xmys_name", "task_name", "productline", "task", "xm", "xmys", "othersysflag", "shenpi",
					"pk_arap_fengcun", "isselected", "item_bill_pk_old", "oldybye", "oldfbye", "oldbbye", "item_bill_djbh", "item_bill_pk", "begin_date", "end_date",
					"notetype_name", "notetype", "ordercusmandoc", "ordercusmandoc_name", "contractno", "kmmc", "pausetransact", "zjldwmc", "pjh", "pj_jsfs", "cashflowmc",
					"bankacc", "accidname", "pk_currrate", "bzmc", "dwbm", "sfbz", "djbh", "ywbm", "flbh", "xgbh", "old_sys_flag", "fx", "spzt", "zy", "kmbm", "hbbm", "ksbm_cl",
					"bzbm", "bbhl", "fbhl", "jobid", "xmmc1", "xmbm2", "xbbm3", "xmbm4", "xmbm5", "xmbm6", "xmbm7", "xmbm8", "xmbm9", "jfybje", "jffbje", "jfbbje",
					"ybye", "fbye", "bbye", "shlye", "pzflh", "ywxz", "cinventoryid", "chbm_cl", "chmc", "ggxh", "zjldw", "fjldw", "hsl", "pch", "ckbm", "jfshl", "jfjs", "dj",
					"sl", "jfybsj", "jffbsj", "jfbbsj", "zkl", "jfzkfbje", "jfzkybje", /*"ysybye", "ysfbye",
					 "ysbbye",*/"fkyhmc", "fkyhzh", "fkyhdz", "skyhmc", "skyhzh", "skyhdz", "jshj", "zyx1", "zyx2", "zyx3", "zyx4", "zyx5", "zyx6", "zyx7", "zyx8", "zyx9", "zyx10",
					"zyx11", "zyx12", "zyx13", "zyx14", "zyx15", "zyx16", "zyx17", "zyx18", "zyx19", "zyx20", "htbh", "htmc", "ddlx", "ddh", "ddhh", "fph", "jsfsbm", "ph", "kprq",
					"xyzh", "cksqsh", "wbfybje", "wbffbje", "wbfbbje", "ycskrq", "srbz", "szxmid", "accountid", "sfkxyh", "dfybje", "dffbje", "dfbbje", "dfshl", /*"dfjs",*/
					"dfybsj", "dffbsj", "dfbbsj", "vouchid", "wldx", "freeitemid", "jfybwsje", "dfybwsje", "tax_num", "bz_date", "old_flag", "bz_kjnd", "bz_kjqj", "jobphaseid",
					"pk_jobobjpha", "kxyt", "deptid", "qxrq", "ywybm", "djzbitemsIndex", "szxmmc", "dwmc", "hzybye", "hzbbye", "hzfbye", "ywymc", "accflag", "zhbzbm", "hsdj",
					"kslb", "dfbbwsje", "pk_invcl", "dr", "khhbzbmkhh", "zyx16_mc", "ts", "txlx_ybje", "txlx_bbje", "txlx_fbje",
					"htlx_pk",
					"zrdeptid",
					"zrbmmc",
					"isSFKXYChanged",
					"dqflpk" //地区分类PK
					, "bjjldw", "bjdwsl", "bjdwhsdj", "bjdwwsdj", "ksmc", "bmmc", "sanhu", "sanhuname", "seqnum", "usedept", "tbbh", "facardbh", "cashitem", "zyx21", "zyx22",
					"zyx23", "zyx24", "zyx25", "zyx26", "zyx27", "zyx28", "zyx29", "zyx30", "payflag", "billdate", "bankacc_fk", "encode", "fphid", "ddhid", "ckdid",
					"isverifyfinished", "verifyfinisheddate", "ckdh", "clbh", "payman", "paydate", "payflagname", "ybpjlx", "bbpjlx", "fbpjlx", "ybtxfy", "bbtxfy", "fbtxfy",
					"djxtflag", "djxtflagname", "bfyhzh", "dfyhzh", "bankrollprojet", "bankrollprojetname", "tradertype", "occupationmny", "assetpactno", "equipmentcode",
					"dstlsubcs", "djdl", "djlxbm", "kpbh","fb_oid","ntotalinvoicenumber" }; //wanglei 2013-12-15 
			String[] settleattrs = new SettlementBodyVO().getAttributeNames();
			attrname = new String[selfattrs.length + settleattrs.length];
			attrname = combineArray(selfattrs, settleattrs);
		}
		return attrname;
	}

	public static String[] combineArray(String[] array1, String[] array2) {
		if (array1 == null && array2 == null) {
			return null;
		}
		int len_array1 = 0;
		int len_array2 = 0;
		if (array1 != null) {
			len_array1 = array1.length;
		}
		if (array2 != null) {
			len_array2 = array2.length;
		}

		String[] combinedArray = new String[len_array1 + len_array2];
		if (len_array1 > 0) {
			System.arraycopy(array1, 0, combinedArray, 0, len_array1);
		}
		if (len_array2 > 0) {
			System.arraycopy(array2, 0, combinedArray, len_array1, len_array2);
		}
		return combinedArray;
	}

	/**
	 * <p>
	 * 根据一个属性名称字符串该属性的值。
	 * <p>
	 * 创建日期：(2000-10-9)
	 *
	 * @param key
	 *            java.lang.String
	 */
	public Class getAttributeType(String attributeName) {
		if (attributeName.equals("dr")) {
			return Integer.class;
		} else if (attributeName.equals("billdate")) {
			return UFDate.class;
		} else if (attributeName.equals("djdl")) {
			return String.class;
		} else if (attributeName.equals("djlxbm")) {
			return String.class;
		} else if (attributeName.equals("commonflag")) {
			return String.class;
		} else if (attributeName.equals("bankacc_fk")) {
			return String.class;
		} else if (attributeName.equals("encode")) {
			return String.class;
		} else if (attributeName.equals("payflag")) {
			return Integer.class;
		} else if (attributeName.equals("qxrq")) {
			return UFDate.class;
		} else if (attributeName.equals("kslb")) {
			return Integer.class;
		} else if (attributeName.equals("accflag")) {
			return Integer.class;
		} else if (attributeName.equals("flbh")) {
			return Integer.class;
		} else if (attributeName.equals("xgbh")) {
			return Integer.class;
		} else if (attributeName.equals("fx")) {
			return Integer.class;
		} else if (attributeName.equals("spzt")) {
			return Integer.class;
		} else if (attributeName.equals("wldx")) {
			return Integer.class;
		} else if (attributeName.equals("djzbitemsIndex")) {
			return Integer.class;
		}

		else if (attributeName.equals("dfbbwsje")) {
			return UFDouble.class;
		} else if (attributeName.equals("hsdj")) {
			return UFDouble.class;
		} else if (attributeName.equals("hzybye")) {
			return UFDouble.class;
		} else if (attributeName.equals("hzbbye")) {
			return UFDouble.class;
		} else if (attributeName.equals("hzfbye")) {
			return UFDouble.class;
		} else if (attributeName.equals("old_sys_flag")) {
			return UFBoolean.class;
		} else if (attributeName.equals("bbhl")) {
			return UFDouble.class;
		} else if (attributeName.equals("fbhl")) {
			return UFDouble.class;
		} else if (attributeName.equals("jfybje")) {
			return UFDouble.class;
		} else if (attributeName.equals("jffbje")) {
			return UFDouble.class;
		} else if (attributeName.equals("jfbbje")) {
			return UFDouble.class;
		} else if (attributeName.equals("ybye")) {
			return UFDouble.class;
		} else if (attributeName.equals("fbye")) {
			return UFDouble.class;
		} else if (attributeName.equals("bbye")) {
			return UFDouble.class;
		} else if (attributeName.equals("shlye")) {
			return UFDouble.class;
		} else if (attributeName.equals("jfshl")) {
			return UFDouble.class;
		} else if (attributeName.equals("dj")) {
			return UFDouble.class;
		} else if (attributeName.equals("sl")) {
			return UFDouble.class;
		} else if (attributeName.equals("jfybsj")) {
			return UFDouble.class;
		} else if (attributeName.equals("jffbsj")) {
			return UFDouble.class;
		} else if (attributeName.equals("jfbbsj")) {
			return UFDouble.class;
		} else if (attributeName.equals("wbfybje")) {
			return UFDouble.class;
		} else if (attributeName.equals("wbffbje")) {
			return UFDouble.class;
		} else if (attributeName.equals("wbfbbje")) {
			return UFDouble.class;
		} else if (attributeName.equals("dfybje")) {
			return UFDouble.class;
		} else if (attributeName.equals("dffbje")) {
			return UFDouble.class;
		} else if (attributeName.equals("dfbbje")) {
			return UFDouble.class;
		} else if (attributeName.equals("dfshl")) {
			return UFDouble.class;
		} else if (attributeName.equals("dfybsj")) {
			return UFDouble.class;
		} else if (attributeName.equals("dffbsj")) {
			return UFDouble.class;
		} else if (attributeName.equals("dfbbsj")) {
			return UFDouble.class;
		} else if (attributeName.equals("jfybwsje")) {
			return UFDouble.class;
		} else if (attributeName.equals("dfybwsje")) {
			return UFDouble.class;
		}

		else if (attributeName.equals("kprq")) {
			return UFDate.class;
		} else if (attributeName.equals("bz_date")) {
			return UFDate.class;
		}

		else if (attributeName.equals("srbz")) {
			return UFBoolean.class;
		} else if (attributeName.equals("old_flag")) {
			return UFBoolean.class;
		} else if (attributeName.equals("begin_date")) {
			return UFDate.class;
		} else if (attributeName.equals("end_date")) {
			return UFDate.class;
		}
		//grouping symbol for proceeding bill type,added by wangqiang
		// 2004-08-02
		else if (attributeName.equals("serial_number")) {
			return Integer.class;
		}//使用部门名称（不是pk）
		else if (attributeName.equals("zyx16_mc")) {
			return String.class;
		} else if (attributeName.equals("zyx16")) {
			return String.class;
		} else if (attributeName.equals("ts")) {
			return UFDateTime.class;
		}
		/**
		 * new items added in V31,wangqiang
		 */
		else if (attributeName.equals("txlx_ybje")) {
			return UFDouble.class;
		} else if (attributeName.equals("txlx_bbje")) {
			return UFDouble.class;
		} else if (attributeName.equals("txlx_fbje")) {
			return UFDouble.class;
		}

		else if (attributeName.equals("bjdwsl")) {//地区分类PK
			return UFDouble.class;
		} else if (attributeName.equals("bjdwhsdj")) {//地区分类PK
			return UFDouble.class;
		} else if (attributeName.equals("bjdwwsdj")) {//地区分类PK
			return UFDouble.class;
		} else if (attributeName.equals("sanhu")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("sanhuname")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("seqnum")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("usedept")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("tbbh")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("facardbh")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("kpbh")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("cashitem")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx19")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx21")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx22")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx23")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx24")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx25")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx26")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx27")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx28")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx29")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("zyx30")) {//地区分类PK
			return String.class;
		} else if (attributeName.equals("bfyhzh")) {//本方银行账号
			return String.class;
		} else if (attributeName.equals("dfyhzh")) {//对方银行账号
			return String.class;
		} else if (attributeName.equals("bankrollprojet")) {//资金计划项目
			return String.class;
		} else if (attributeName.equals("bankrollprojetname")) {
			return String.class;
		} else if (attributeName.equals("tradertype")) {//资金计划项目
			return Integer.class;
		} else if (attributeName.equals("assetpactno")) {//资产合同号
			return String.class;
		} else if (attributeName.equals("equipmentcode")) {//设备编码
			return String.class;
		} else if (attributeName.equals("dstlsubcs")) {//设备编码
			return String.class;
		}else if (attributeName.equals("jobid")) {//预算项目id
			return String.class;
		}
		//wanglei 2013-12-15 
		else if (attributeName.equals("ntotalinvoicenumber")){
			return UFDouble.class;
		}
		return String.class;
		/*
		 * if (attributeName.equals("fb_oid")) { return m_fb_oid; } //cf add
		 * 存货分类主键 else if (attributeName.equals("pk_invcl")) { return
		 * m_pk_invcl; } //cf add 账户币种编码 else if
		 * (attributeName.equals("zhbzbm")) { return m_zhbzbm; } //cf add 业务员名称
		 * else if (attributeName.equals("ywymc")) { return m_ywymc; } else if
		 * (attributeName.equals("dwmc")) { return m_dwmc; } else if
		 * (attributeName.equals("dwbm")) { return m_dwbm; } else if
		 * (attributeName.equals("sfbz")) { return m_sfbz; } else if
		 * (attributeName.equals("djbh")) { return m_djbh; } else if
		 * (attributeName.equals("ywbm")) { return m_ywbm; }else if
		 * (attributeName.equals("zy")) { return m_zy; } else if
		 * (attributeName.equals("kmbm")) { return m_kmbm; } else if
		 * (attributeName.equals("hbbm")) { return m_hbbm; } else if
		 * (attributeName.equals("ksbm_cl")) { return m_ksbm_cl; } else if
		 * (attributeName.equals("bzbm")) { return m_bzbm; } else if
		 * (attributeName.equals("jobid")) { return m_jobid; } else if
		 * (attributeName.equals("xmbm2")) { return m_xmbm2; }else if
		 * (attributeName.equals("cinventoryid")) { return m_cinventoryid; }
		 * else if (attributeName.equals("chbm_cl")) { return m_chbm_cl; } else
		 * if (attributeName.equals("chmc")) { return m_chmc; } else if
		 * (attributeName.equals("ggxh")) { return m_ggxh; } else if
		 * (attributeName.equals("zjldw")) { return m_zjldw; } else if
		 * (attributeName.equals("fjldw")) { return m_fjldw; } else if
		 * (attributeName.equals("pch")) { return m_pch; }else if
		 * (attributeName.equals("fkyhmc")) { return m_fkyhmc; } else if
		 * (attributeName.equals("fkyhzh")) { return m_fkyhzh; } else if
		 * (attributeName.equals("fkyhdz")) { return m_fkyhdz; } else if
		 * (attributeName.equals("skyhmc")) { return m_skyhmc; } else if
		 * (attributeName.equals("skyhzh")) { return m_skyhzh; } else if
		 * (attributeName.equals("skyhdz")) { return m_skyhdz; } else if
		 * (attributeName.equals("zyx1")) { return m_zyx1; } else if
		 * (attributeName.equals("zyx2")) { return m_zyx2; } else if
		 * (attributeName.equals("zyx3")) { return m_zyx3; } else if
		 * (attributeName.equals("zyx4")) { return m_zyx4; } else if
		 * (attributeName.equals("zyx5")) { return m_zyx5; } else if
		 * (attributeName.equals("zyx6")) { return m_zyx6; } else if
		 * (attributeName.equals("zyx7")) { return m_zyx7; } else if
		 * (attributeName.equals("zyx8")) { return m_zyx8; } else if
		 * (attributeName.equals("zyx9")) { return m_zyx9; } else if
		 * (attributeName.equals("zyx10")) { return m_zyx10; } else if
		 * (attributeName.equals("zyx11")) { return m_zyx11; } else if
		 * (attributeName.equals("zyx12")) { return m_zyx12; } else if
		 * (attributeName.equals("zyx13")) { return m_zyx13; } else if
		 * (attributeName.equals("zyx14")) { return m_zyx14; } else if
		 * (attributeName.equals("zyx15")) { return m_zyx15; } else if
		 * (attributeName.equals("zyx16")) { return m_zyx16; } else if
		 * (attributeName.equals("zyx17")) { return m_zyx17; } else if
		 * (attributeName.equals("zyx18")) { return m_zyx18; } else if
		 * (attributeName.equals("zyx19")) { return m_zyx19; } else if
		 * (attributeName.equals("zyx20")) { return m_zyx20; } else if
		 * (attributeName.equals("htbh")) { return m_htbh; } else if
		 * (attributeName.equals("htmc")) { return m_htmc; } else if
		 * (attributeName.equals("ddlx")) { return m_ddlx; } else if
		 * (attributeName.equals("ddh")) { return m_ddh; } else if
		 * (attributeName.equals("ddhh")) { return m_ddhh; } else if
		 * (attributeName.equals("fph")) { return m_fph; } else if
		 * (attributeName.equals("jsfsbm")) { return m_jsfsbm; } else if
		 * (attributeName.equals("ph")) { return m_ph; } else if
		 * (attributeName.equals("xyzh")) { return m_xyzh; } else if
		 * (attributeName.equals("cksqsh")) { return m_cksqsh; } else if
		 * (attributeName.equals("szxmid")) { return m_szxmid; } else if
		 * (attributeName.equals("accountid")) { return m_accountid; } else if
		 * (attributeName.equals("sfkxyh")) { return m_sfkxyh; } else if
		 * (attributeName.equals("vouchid")) { return m_vouchid; } else if
		 * (attributeName.equals("freeitemid")) { return m_freeitemid; } else if
		 * (attributeName.equals("tax_num")) { return m_tax_num; } else if
		 * (attributeName.equals("bz_kjnd")) { return m_bz_kjnd; } else if
		 * (attributeName.equals("bz_kjqj")) { return m_bz_kjqj; } else if
		 * (attributeName.equals("pk_jobobjpha")) { return m_pk_jobobjpha; }else
		 * if (attributeName.equals("kxyt")) { return m_kxyt; } else if
		 * (attributeName.equals("deptid")) { return m_deptid; } else if
		 * (attributeName.equals("ywybm")) { return m_ywybm; } else if
		 * (attributeName.equals("ksmc")) { return m_ksmc; } else if
		 * (attributeName.equals("ksdz")) { return m_ksdz; } else if
		 * (attributeName.equals("kskhh")) { return m_kskhh; } else if
		 * (attributeName.equals("kszh")) { return m_kszh; } else if
		 * (attributeName.equals("ksdh")) { return m_ksdh; } else if
		 * (attributeName.equals("kssh")) { return m_kssh; } else if
		 * (attributeName.equals("szxmmc")) { return m_szxmmc; }
		 */
	}

	/**
	 * <p>
	 * 根据一个属性名称字符串该属性的值。
	 * <p>
	 * 创建日期：(2000-10-9)
	 *
	 * @param key
	 *            java.lang.String
	 */
	public Object getAttributeValue(String attributeName) {
		if (attributeName == null)
			return null;
		Object obj = null;
		if (null != this.settleBodyVO) {
			if (!"ts".equalsIgnoreCase(attributeName)) {
				obj = this.settleBodyVO.getAttributeValue(attributeName);
				if (null != obj) {
					return obj;
				}
			}
		}
		if (attributeName.equalsIgnoreCase("occupationmny")) {
			return occupationmny;
		}
		if (attributeName.equals("fb_oid")) {
			return m_fb_oid;
		} else if (attributeName.equals("djdl"))
			return this.djdl;
		else if (attributeName.equals("djlxbm"))
			return this.djlxbm;
		else if (attributeName.equals("tempddhh"))
			return this.tempddhh;
		else if (attributeName.equals("tempddlx"))
			return this.tempddlx;
		else if (attributeName.equals("commonflag"))
			return this.commonflag;
		else if (attributeName.equals("djxtflagname"))
			return DJZBVOUtility.getXtFlagName(this.djxtflag);
		else if (attributeName.equals("djxtflag"))
			return this.djxtflag;
		else if (attributeName.equals("ybpjlx"))
			return this.ybpjlx;
		else if (attributeName.equals("bbpjlx"))
			return this.bbpjlx;
		else if (attributeName.equals("fbpjlx"))
			return this.fbpjlx;
		else if (attributeName.equals("ybtxfy"))
			return this.ybtxfy;
		else if (attributeName.equals("bbtxfy"))
			return this.bbtxfy;
		else if (attributeName.equals("fbtxfy"))
			return this.fbtxfy;
		else if (attributeName.equals("pjdirection"))
			return this.pjdirection;

		else if (attributeName.equals("payman"))
			return this.payman;
		else if (attributeName.equals("paydate"))
			return this.paydate;
		else if (attributeName.equals("fphid")) {
			return fphid;
		} else if (attributeName.equals("clbh")) {
			return clbh;
		} else if (attributeName.equals("ckdh")) {
			return ckdh;
		} else if (attributeName.equals("ddhid"))
			return ddhid;
		else if (attributeName.equals("ckdid"))
			return ckdid;
		else if (attributeName.equals("isverifyfinished"))
			return isverifyfinished;
		else if (attributeName.equals("verifyfinisheddate"))
			return verifyfinisheddate == null ? new UFDate("3000-01-01") : verifyfinisheddate;

		else if (attributeName.equals("bankacc_fk")) {
			return bankacc_fk;
		} else if (attributeName.equals("encode"))
			return encode;
		else if (attributeName.equals("payflagname"))
			return DJZBVOUtility.getPayFlagName(payflag);
		else if (attributeName.equals("payflag"))
			return payflag;
		else if (attributeName.equals("billdate"))
			return billdate;
		//
		else if (attributeName.equals("closer"))
			return m_closer;
		else if (attributeName.equals("ksbm"))
			return m_ksbm;
		else if (attributeName.equals("fkje"))
			return fkje;
		else if (attributeName.equals("invtype"))
			return m_invtype;

		else if (attributeName.equals("closedate"))
			return m_closedate;
		else if (attributeName.equals("plannum"))
			return m_plannum;
		else if (attributeName.equals("executenum"))
			return m_executenum;
		else if (attributeName.equals("bugettablename"))
			return m_bugettablename;
		else if (attributeName.equals("xslxmc"))
			return m_xslxmc;
		else if (attributeName.equals("forelock"))
			return m_forelock;
		//

		else if (attributeName.equals("productline_name"))
			return m_productline_name;

		else if (attributeName.equals("othersysflag"))
			return m_othersysflag;
		else if (attributeName.equals("xm"))
			return m_xm;
		else if (attributeName.equals("xmys"))
			return m_xmys;
		else if (attributeName.equals("task"))
			return m_task;

		else if (attributeName.equals("xm_name"))
			return m_xm_name;
		else if (attributeName.equals("xmys_name"))
			return m_xmys_name;
		else if (attributeName.equals("task_name"))
			return m_task_name;

		else if (attributeName.equals("productline"))
			return m_productline;

		else if (attributeName.equals("pk_arap_fengcun"))
			return m_pk_arap_fengcun;

		else if (attributeName.equals("shenpi"))
			return m_shenpi;

		else if (attributeName.equals("isselected")) {
			return m_isselected;
		} else if (attributeName.equals("item_bill_pk_old")) {
			return m_item_bill_pk_old;
		} else if (attributeName.equals("kmmc")) {
			return m_kmmc;
		} else if (attributeName.equals("oldybye")) {
			return m_oldybye;
		} else if (attributeName.equals("oldfbye")) {
			return m_oldfbye;
		} else if (attributeName.equals("oldbbye")) {
			return m_oldbbye;
		} else if (attributeName.equals("item_bill_djbh")) {
			return m_item_bill_djbh;
		} else if (attributeName.equals("item_bill_pk")) {
			return m_item_bill_pk;
		} else if (attributeName.equals("ordercusmandoc")) {
			return m_ordercusmandoc;
		} else if (attributeName.equals("notetype")) {
			return m_notetype;
		} else if (attributeName.equals("begin_date")) {
			return m_begin_date;
		} else if (attributeName.equals("end_date")) {
			return m_end_date;
		} else if (attributeName.equals("notetype_name")) {
			return m_notetype_name;
		} else if (attributeName.equals("ordercusmandoc_name")) {
			return m_ordercusmandoc_name;
		} else if (attributeName.equals("contractno")) {
			return m_contractno;
		} else if (attributeName.equals("pausetransact")) {
			return m_pausetransact;
		} else if (attributeName.equals("zjldwmc")) {
			return m_zjldwmc;
		} else if (attributeName.equals("pj_jsfs_mc")) {
			return m_pj_jsfs_mc;
		} else if (attributeName.equals("xmmc1")) {
			return m_xmmc1;
		} else if (attributeName.equals("bmmc")) {
			return m_bmmc;
		} else if (attributeName.equals("sfkxymc")) {
			return m_sfkxymc;
		} else if (attributeName.equals("cashflowmc")) {
			return m_cashflowmc;
		} else if (attributeName.equals("pjh")) {
			return m_pjh;
		} else if (attributeName.equals("pj_jsfs")) {
			return m_pj_jsfs;
		} else if (attributeName.equals("bankacc")) {
			return m_bankacc;
		} else if (attributeName.equals("accidname")) {
			return m_accidname;
		} else if (attributeName.equals("pk_currrate")) {
			return m_pk_currrate;
		}
		//cf add 存货分类主键
		else if (attributeName.equals("pk_invcl")) {
			return m_pk_invcl;
		} else if (attributeName.equals("dr")) {
			return m_dr;
		}

		//cf add 扣税类别
		else if (attributeName.equals("kslb")) {
			return m_kslb;
		}

		//cf add 贷方本币无税金额
		else if (attributeName.equals("dfbbwsje")) {
			return m_dfbbwsje;
		}

		//cf add 含税单价
		else if (attributeName.equals("hsdj")) {
			return m_hsdj;
		}

		//cf add 账户标志
		else if (attributeName.equals("accflag")) {
			return m_accflag;
		}

		//cf add 账户币种编码
		else if (attributeName.equals("zhbzbm")) {
			return m_zhbzbm;
		}

		//cf add 坏账原币余额
		else if (attributeName.equals("hzybye")) {
			return m_hzybye;
		}

		//坏账本币余额
		else if (attributeName.equals("hzbbye")) {
			return m_hzbbye;
		}

		//坏账辅币余额
		else if (attributeName.equals("hzfbye")) {
			return m_hzfbye;
		}

		//cf add 业务员名称
		else if (attributeName.equals("ywymc")) {
			return m_ywymc;
		} else if (attributeName.equals("dwmc")) {
			return m_dwmc;
		} else if (attributeName.equals("dwbm")) {
			return m_dwbm;
		} else if (attributeName.equals("sfbz")) {
			return m_sfbz;
		} else if (attributeName.equals("djbh")) {
			return m_djbh;
		} else if (attributeName.equals("ywbm")) {
			return m_ywbm;
		} else if (attributeName.equals("flbh")) {
			return m_flbh;
		} else if (attributeName.equals("xgbh")) {
			return m_xgbh;
		} else if (attributeName.equals("old_sys_flag")) {
			return m_old_sys_flag;
		} else if (attributeName.equals("fx")) {
			return m_fx;
		} else if (attributeName.equals("spzt")) {
			return m_spzt;
		} else if (attributeName.equals("zy")) {
			return m_zy;
		} else if (attributeName.equals("kmbm")) {
			return m_kmbm;
		} else if (attributeName.equals("hbbm")) {
			return m_hbbm;
		} else if (attributeName.equals("bzbm")) {
			return m_bzbm;
		} else if (attributeName.equals("khhbzbmkhh")) {
			return m_bzbm;
		} else if (attributeName.equals("bzmc")) {
			return m_bzmc;
		} else if (attributeName.equals("bbhl")) {
			return m_bbhl;
		} else if (attributeName.equals("fbhl")) {
			return m_fbhl;
		} else if (attributeName.equals("jobid")) {
			return m_jobid;
		} else if (attributeName.equals("xmbm2")) {
			return m_xmbm2;
		} else if (attributeName.equals("xbbm3")) {
			return m_xbbm3;
		}

		//else if (attributeName.equals("xmbm4")) {
		//return m_xmbm4;
		//}
		//else if (attributeName.equals("xmbm5")) {
		//return m_xmbm5;
		//}
		//else if (attributeName.equals("xmbm6")) {
		//return m_xmbm6;
		//}
		//else if (attributeName.equals("xmbm7")) {
		//return m_xmbm7;
		//}
		//else if (attributeName.equals("xmbm8")) {
		//return m_xmbm8;
		//}
		//else if (attributeName.equals("xmbm9")) {
		//return m_xmbm9;
		//}
		//else if (attributeName.equals("jobid0")) {
		//return m_jobid0;
		//}
		else if (attributeName.equals("jfybje")) {
			return m_jfybje;
		} else if (attributeName.equals("jffbje")) {
			return m_jffbje;
		} else if (attributeName.equals("jfbbje")) {
			return m_jfbbje;
		} else if (attributeName.equals("ybye")) {
			return m_ybye;
		} else if (attributeName.equals("fbye")) {
			return m_fbye;
		} else if (attributeName.equals("bbye")) {
			return m_bbye;
		} else if (attributeName.equals("shlye")) {
			return m_shlye;
		}
		//else if (attributeName.equals("pzflh")) {
		//return m_pzflh;
		//}
		//else if (attributeName.equals("ywxz")) {
		//return m_ywxz;
		//}
		else if (attributeName.equals("cinventoryid")) {
			return m_cinventoryid;
		} else if (attributeName.equals("chbm_cl")) {
			return m_chbm_cl;
		} else if (attributeName.equals("chmc")) {
			return m_chmc;
		} else if (attributeName.equals("ggxh")) {
			return m_ggxh;
		} else if (attributeName.equals("zjldw")) {
			return m_zjldw;
		} else if (attributeName.equals("fjldw")) {
			return m_fjldw;
		}
		//else if (attributeName.equals("hsl")) {
		//return m_hsl;
		//}
		else if (attributeName.equals("pch")) {
			return m_pch;
		}
		//else if (attributeName.equals("ckbm")) {
		//return m_ckbm;
		//}
		else if (attributeName.equals("jfshl")) {
			return m_jfshl;
		}
		//else if (attributeName.equals("jfjs")) {
		//return m_jfjs;
		//}
		else if (attributeName.equals("dj")) {
			return m_dj;
		} else if (attributeName.equals("sl")) {
			return m_sl;
		} else if (attributeName.equals("jfybsj")) {
			return m_jfybsj;
		} else if (attributeName.equals("jffbsj")) {
			return m_jffbsj;
		} else if (attributeName.equals("jfbbsj")) {
			return m_jfbbsj;
		}
		//else if (attributeName.equals("zkl")) {
		//return m_zkl;
		//}
		//else if (attributeName.equals("jfzkfbje")) {
		//return m_jfzkfbje;
		//}
		//else if (attributeName.equals("jfzkybje")) {
		//return m_jfzkybje;
		//}
		//else if (attributeName.equals("ysybye")) {
		//return m_ysybye;
		//}
		//else if (attributeName.equals("ysfbye")) {
		//return m_ysfbye;
		//}
		//else if (attributeName.equals("ysbbye")) {
		//return m_ysbbye;
		//}
		else if (attributeName.equals("fkyhmc")) {
			return m_fkyhmc;
		} else if (attributeName.equals("fkyhzh")) {
			return m_fkyhzh;
		} else if (attributeName.equals("fkyhdz")) {
			return m_fkyhdz;
		} else if (attributeName.equals("skyhmc")) {
			return m_skyhmc;
		} else if (attributeName.equals("skyhzh")) {
			return m_skyhzh;
		} else if (attributeName.equals("skyhdz")) {
			return m_skyhdz;
		}
		//else if (attributeName.equals("jshj")) {
		//return m_jshj;
		//}
		else if (attributeName.equals("zyx1")) {
			return m_zyx1;
		} else if (attributeName.equals("zyx2")) {
			return m_zyx2;
		} else if (attributeName.equals("zyx3")) {
			return m_zyx3;
		} else if (attributeName.equals("zyx4")) {
			return m_zyx4;
		} else if (attributeName.equals("zyx5")) {
			return m_zyx5;
		} else if (attributeName.equals("zyx6")) {
			return m_zyx6;
		} else if (attributeName.equals("zyx7")) {
			return m_zyx7;
		} else if (attributeName.equals("zyx8")) {
			return m_zyx8;
		} else if (attributeName.equals("zyx9")) {
			return m_zyx9;
		} else if (attributeName.equals("zyx10")) {
			return m_zyx10;
		} else if (attributeName.equals("zyx11")) {
			return m_zyx11;
		} else if (attributeName.equals("zyx12")) {
			return m_zyx12;
		} else if (attributeName.equals("zyx13")) {
			return m_zyx13;
		} else if (attributeName.equals("zyx14")) {
			return m_zyx14;
		} else if (attributeName.equals("zyx15")) {
			return m_zyx15;
		} else if (attributeName.equals("zyx16")) {
			return m_zyx16;
		} else if (attributeName.equals("zyx17")) {
			return m_zyx17;
		} else if (attributeName.equals("zyx18")) {
			return m_zyx18;
		} else if (attributeName.equals("zyx19")) {
			return m_zyx19;
		} else if (attributeName.equals("zyx20")) {
			return m_zyx20;
		} else if (attributeName.equals("htbh")) {
			return m_htbh;
		} else if (attributeName.equals("htmc")) {
			return m_htmc;
		} else if (attributeName.equals("ddlx")) {
			return m_ddlx;
		} else if (attributeName.equals("ddh")) {
			return m_ddh;
		} else if (attributeName.equals("ddhh")) {
			return m_ddhh;
		} else if (attributeName.equals("fph")) {
			return m_fph;
		} else if (attributeName.equals("jsfsbm")) {
			return m_jsfsbm;
		} else if (attributeName.equals("ph")) {
			return m_ph;
		} else if (attributeName.equals("kprq")) {
			return m_kprq;
		} else if (attributeName.equals("xyzh")) {
			return m_xyzh;
		} else if (attributeName.equals("cksqsh")) {
			return m_cksqsh;
		} else if (attributeName.equals("wbfybje")) {
			return m_wbfybje;
		} else if (attributeName.equals("wbffbje")) {
			return m_wbffbje;
		} else if (attributeName.equals("wbfbbje")) {
			return m_wbfbbje;
		}
		//else if (attributeName.equals("ycskrq")) {
		//return m_ycskrq;
		//}
		else if (attributeName.equals("srbz")) {
			return m_srbz;
		} else if (attributeName.equals("szxmid")) {
			return m_szxmid;
		} else if (attributeName.equals("accountid")) {
			return m_accountid;
		} else if (attributeName.equals("sfkxyh")) {
			return m_sfkxyh;
		} else if (attributeName.equals("dfybje")) {
			return m_dfybje;
		} else if (attributeName.equals("dffbje")) {
			return m_dffbje;
		} else if (attributeName.equals("dfbbje")) {
			return m_dfbbje;
		} else if (attributeName.equals("dfshl")) {
			return m_dfshl;
		}
		//else if (attributeName.equals("dfjs")) {
		//return m_dfjs;
		//}
		else if (attributeName.equals("dfybsj")) {
			return m_dfybsj;
		} else if (attributeName.equals("dffbsj")) {
			return m_dffbsj;
		} else if (attributeName.equals("dfbbsj")) {
			return m_dfbbsj;
		} else if (attributeName.equals("vouchid")) {
			return m_vouchid;
		} else if (attributeName.equals("wldx")) {
			return m_wldx;
		} else if (attributeName.equals("freeitemid")) {
			return m_freeitemid;
		} else if (attributeName.equals("jfybwsje")) {
			return m_jfybwsje;
		} else if (attributeName.equals("dfybwsje")) {
			return m_dfybwsje;
		} else if (attributeName.equals("tax_num")) {
			return m_tax_num;
		} else if (attributeName.equals("bz_date")) {
			return m_bz_date;
		} else if (attributeName.equals("old_flag")) {
			return m_old_flag;
		} else if (attributeName.equals("bz_kjnd")) {
			return m_bz_kjnd;
		} else if (attributeName.equals("bz_kjqj")) {
			return m_bz_kjqj;
		} else if (attributeName.equals("pk_jobobjpha")) {
			return m_pk_jobobjpha;
		}
		//jobphaseid
		//else if (attributeName.equals("jobphaseid")) {
		//return m_pk_jobobjpha;
		//}
		//同zxz商量的结果，改回返回基本档案的pk
		if (attributeName.equalsIgnoreCase("jobphaseid")) {
			//        	try{
			////	        	nc.bs.logging.Log.getInstance(this.getClass()).warn("in jobphaseid,pk_jobobjpha:"+m_pk_jobobjpha);
			//        		FormulaParseFather fmlParse = new FormulaParse();
			////				nc.bs.logging.Log.getInstance(this.getClass()).warn("formula:getColValue(bd_cumandoc,pk_cubasdoc,pk_cumandoc,pk)");
			//				fmlParse.setExpress("getColValue(bd_jobobjpha,pk_jobphase,pk_jobobjpha,pk)");
			////				java.util.Hashtable h1 = new java.util.Hashtable();
			////				h1.put("pk", m_pk_jobobjpha);
			////				fmlParse.setData(h1);
			//				fmlParse.addVariable("pk", m_pk_jobobjpha);
			//				Object jobphaseid = fmlParse.getValue();
			//				nc.bs.logging.Log.getInstance(this.getClass()).warn("in jobphaseid,jobphaseid:"+jobphaseid);
			return jobphaseid;
			//        	}catch(Exception e){
			//        		nc.bs.logging.Log.getInstance(this.getClass()).error(e.getMessage(),e);
			//        	}
		}

		else if (attributeName.equals("kxyt")) {
			return m_kxyt;
		} else if (attributeName.equals("deptid")) {
			return m_deptid;
		} else if (attributeName.equals("ywybm")) {
			return m_ywybm;
		} else if (attributeName.equals("ksmc")) {
			return m_ksmc;
		} else if (attributeName.equals("ksdz")) {
			return m_ksdz;
		} else if (attributeName.equals("kskhh")) {
			return m_kskhh;
		} else if (attributeName.equals("kszh")) {
			return m_kszh;
		} else if (attributeName.equals("ksdh")) {
			return m_ksdh;
		} else if (attributeName.equals("kssh")) {
			return m_kssh;
		} else if (attributeName.equals("szxmmc")) {
			return m_szxmmc;
		}
		//
		else if (attributeName.equals("djzbitemsIndex")) {
			return m_djzbitemsIndex;
		} else if (attributeName.equals("ts")) {
			return m_ts;
		}
		//grouping symbol for proceeding bill type,added by wangqiang
		// 2004-08-02
		else if (attributeName.equals("serial_number")) {
			return m_iSerialNumber;
		}//使用部门（名称）
		else if (attributeName.equals("zyx16_mc")) {
			return m_zyx16_mc;
		}
		/**
		 * new items added in V31,wangqiang
		 */
		else if (attributeName.equals("txlx_ybje")) {
			return txlx_ybje;
		} else if (attributeName.equals("txlx_bbje")) {
			return txlx_bbje;
		} else if (attributeName.equals("txlx_fbje")) {
			return txlx_fbje;
		} else if (attributeName.equals("htlx_pk")) {
			return this.m_strCtzhtlxPK;
		} else if (attributeName.equals("dqflpk")) {//地区分类PK
			return this.m_strDqflPK;
		}

		else if (attributeName.equals("bjjldw")) {//地区分类PK
			return this.m_bjjldw;
		} else if (attributeName.equals("bjdwsl")) {//地区分类PK
			return this.m_bjdwsl;
		} else if (attributeName.equals("bjdwhsdj")) {//地区分类PK
			return this.m_bjdwhsdj;
		} else if (attributeName.equals("bjdwwsdj")) {//地区分类PK
			return this.m_bjdwwsdj;
		} else if (attributeName.equals("zrdeptid")) {//地区分类PK
			return this.zrdeptid;
		} else if (attributeName.equals("zrbmmc")) {//地区分类PK
			return this.zrbmmc;
		} else if (attributeName.equals("qxrq")) {//地区分类PK
			return this.qxrq;
		} else if (attributeName.equals("isSFKXYChanged")) {//地区分类PK
			return this.isSFKXYChanged;
		} else if (attributeName.equals("sanhu")) {//地区分类PK
			return this.sanhu;
		} else if (attributeName.equals("sanhuname")) {//地区分类PK
			return this.sanhuname;
		} else if (attributeName.equals("seqnum")) {//地区分类PK
			return this.seqnum;
		} else if (attributeName.equals("usedept")) {//地区分类PK
			return this.usedept;
		} else if (attributeName.equals("tbbh")) {//地区分类PK
			return this.tbbh;
		} else if (attributeName.equals("cashitem")) {//地区分类PK
			return this.cashitem;
		} else if (attributeName.equals("facardbh")) {//地区分类PK 
			return this.facardbh;
		} else if (attributeName.equals("kpbh")) {//地区分类PK
			return this.kpbh;
		} else if (attributeName.equals("zyx21")) {//地区分类PK
			return this.zyx21;
		} else if (attributeName.equals("zyx22")) {//地区分类PK
			return this.zyx22;
		} else if (attributeName.equals("zyx23")) {//地区分类PK
			return this.zyx23;
		} else if (attributeName.equals("zyx24")) {//地区分类PK
			return this.zyx24;
		} else if (attributeName.equals("zyx25")) {//地区分类PK
			return this.zyx25;
		} else if (attributeName.equals("zyx26")) {//地区分类PK
			return this.zyx26;
		} else if (attributeName.equals("zyx27")) {//地区分类PK
			return this.zyx27;
		} else if (attributeName.equals("zyx28")) {//地区分类PK
			return this.zyx28;
		} else if (attributeName.equals("zyx29")) {//地区分类PK
			return this.zyx29;
		} else if (attributeName.equals("zyx30")) {//地区分类PK
			return this.zyx30;
		} else if (attributeName.equals("bfyhzh")) {
			return this.bfyhzh;
		} else if (attributeName.equals("dfyhzh")) {
			return this.dfyhzh;
		} else if (attributeName.equals("bankrollprojet")) {
			return this.bankrollprojet;
		} else if (attributeName.endsWith("bankrollprojetname")) {
			return this.bankrollprojetname;
		} else if (attributeName.equals("tradertype")) {
			return this.tradertype;
		} else if (attributeName.equals("assetpactno")) {//资产合同号
			return this.assetpactno;
		} else if (attributeName.equals("equipmentcode")) {//设备编码
			return this.equipmentcode;
		} else if (attributeName.equals("dstlsubcs")) {//坏帐子方案
			return this.dstlsubcs;
		}
		
		else if (attributeName.equals("ntotalinvoicenumber")){
			return this.ntotalinvoicenumber;
		}

		//
		//else if (attributeName.equals("jobmanagerid")) {
		//return m_jobmanagerid;
		//}

		return null;
	}

	/**
	 * 属性m_accountid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getBankacc() {
		return m_bankacc;
	}

	/**
	 * 此处插入方法描述。 银行账号 创建日期：(2004-4-5 11:43:45)
	 *
	 * @author：陈飞
	 * @return java.lang.String //ys=1,sk-1,sj-1,ws-1,hj收款-1 //ss 1,yf -1,fk
	 *         1,fj 1,wf 1,hj付款1 /*备注:单据大类对应方向: 应收单:jfybje 应付单:dfybje 收款单:dfybje
	 *         付款单:jfybje 收款结算单:dfybje 付款结算单:jfybje 划账结算单:借正,代负,表头原币金额为零
	 *         对外收款结算单:dfybje 对外付款结算单:jfybje 只能应收单，应付单，收款单，付款单须要计算余额 djdl:单据大类
	 *
	 */
	public java.lang.String getBankCode() {
		if (getSettleBodyVO() != null) {
			return getSettleBodyVO().getBankCode();
		}
		return getBfyhzh();
	}

	/**
	 * 属性m_bbhl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getBbhl() {
		return m_bbhl;
	}

	/**
	 * 属性m_bbye的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getBbye() {
		return m_bbye;
	}

	/**
	 * 属性m_kprq的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDate
	 */
	public UFDate getBegin_date() {
		return m_begin_date;
	}

	/**
	 * getBillRowPK //单据行pk
	 */
	public java.lang.String getBillRowPK() {
		return getFb_oid();
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:37:22)
	 *
	 * @author:陈飞
	 * @return java.lang.String
	 */
	public java.lang.String getBugettablename() {
		return m_bugettablename;
	}

	/**
	 * 属性m_bz_date的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDate
	 */
	public UFDate getBz_date() {
		return m_bz_date;
	}

	/**
	 * 属性m_bz_kjnd的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getBz_kjnd() {
		return m_bz_kjnd;
	}

	/**
	 * 属性m_bz_kjqj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getBz_kjqj() {
		return m_bz_kjqj;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getBzbm() {
		return m_bzbm;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getBzmc() {
		return m_bzmc;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getCashflowmc() {
		return m_cashflowmc;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getChbm_cl() {
		return m_chbm_cl;
	}

	/**
	 * 获得票据日期。 创建日期：(2003-5-9 16:51:34)
	 *
	 * @return nc.vo.pub.lang.UFDate
	 */
	public nc.vo.pub.lang.UFDate getCheckDate() throws java.lang.Exception {
		if (getSettleBodyVO() != null) {
			return getSettleBodyVO().getCheckDate();
		}
		DJZBHeaderVO head = (DJZBHeaderVO) m_parent.getParentVO();

		return head.getDjrq();
	}

	/**
	 * 获得票据日期。 创建日期：(2003-5-9 16:51:06)
	 *
	 * @return java.lang.String
	 */
	public java.lang.String getCheckNo() throws java.lang.Exception {
		if (getSettleBodyVO() != null) {
			return getSettleBodyVO().getNotenumber();
		}
		return getPjh();
	}

	/**
	 * <p>
	 * 获得子表的VO数组。
	 * <p>
	 * 创建日期：(2001-6-1)
	 *
	 * @return nc.vo.pub.CircularlyAccessibleValueObject[]
	 */
	public CircularlyAccessibleValueObject[] getChildrenVO() {

		return items;
	}

	/**
	 * 属性m_chmc的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getChmc() {
		return "";
	}

	/**
	 * 属性m_cinventoryid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getCinventoryid() {
		return m_cinventoryid;
	}

	/**
	 * 属性m_cksqsh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getCksqsh() {
		return m_cksqsh;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:40:39)
	 *
	 * @author:陈飞
	 * @return nc.vo.pub.lang.UFDate
	 */
	public nc.vo.pub.lang.UFDate getClosedate() {
		return m_closedate;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:39:39)
	 *
	 * @author:陈飞
	 * @return java.lang.String
	 */
	public java.lang.String getCloser() {
		return m_closer;
	}

	/**
	 * 获得票据日期。 创建日期：(2003-5-9 16:51:06)
	 *
	 * @return java.lang.String
	 */
	public java.lang.String getContractno() {
		return m_contractno;
	}

	/**
	 * 属性m_ddh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getDdh() {
		return m_ddh;
	}

	/**
	 * 属性m_ddhh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return Integer
	 */
	public String getDdhh() {
		return m_ddhh;
	}

	/**
	 * 属性m_ddlx的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getDdlx() {
		return m_ddlx;
	}

	/**
	 * 属性m_deptid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getDeptid() {
		return m_deptid;
	}

	/**
	 * 属性m_dfbbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDfbbje() {
		return m_dfbbje;
	}

	/**
	 * 属性m_dfbbsj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDfbbsj() {
		return m_dfbbsj;
	}

	/**
	 * 属性m_ysbbye的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDfbbwsje() {
		return m_dfbbwsje;
	}

	/**
	 * 属性m_dffbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDffbje() {
		return m_dffbje;
	}

	/**
	 * 属性m_dffbsj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDffbsj() {
		return m_dffbsj;
	}

	/**
	 * 属性m_dfshl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDfshl() {
		return m_dfshl;
	}

	/**
	 * 属性m_dfybje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDfybje() {
		return m_dfybje;
	}

	/**
	 * 属性m_dfybsj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDfybsj() {
		return m_dfybsj;
	}

	/**
	 * 属性m_dfybwsje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDfybwsje() {
		return m_dfybwsje;
	}

	/**
	 * 属性m_dj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getDj() {
		return m_dj;
	}

	/**
	 * 属性m_djbh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getDjbh() {
		return m_djbh;
	}

	public Integer getDjzbitemsIndex() {
		return m_djzbitemsIndex;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public Integer getDr() {
		return m_dr;
	}

	/**
	 * 属性m_dwbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getDwbm() {
		return m_dwbm;
	}

	/**
	 * 属性m_kprq的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDate
	 */
	public UFDate getEnd_date() {
		return m_end_date;
	}

	/**
	 * 返回数值对象的显示名称。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return java.lang.String 返回数值对象的显示名称。
	 */
	public String getEntityName() {

		return "DJFB";
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:35:36)
	 *
	 * @author:陈飞
	 * @return nc.vo.pub.lang.UFDouble
	 */
	public nc.vo.pub.lang.UFDouble getExecutenum() {
		return m_executenum;
	}

	/**
	 * 属性m_fb_oid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getFb_oid() {
		return m_fb_oid;
	}

	/**
	 * 属性m_fbhl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getFbhl() {
		return m_fbhl;
	}

	/**
	 * 属性m_fbye的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getFbye() {
		return m_fbye;
	}

	/**
	 * 属性m_fjldw的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getFjldw() {
		return m_fjldw;
	}

	/**
	 * 属性m_fkyhdz的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getFkyhdz() {
		return m_fkyhdz;
	}

	/**
	 * 属性m_fkyhmc的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getFkyhmc() {
		return m_fkyhmc;
	}

	/**
	 * 属性m_fkyhzh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getFkyhzh() {
		return m_fkyhzh;
	}

	/**
	 * 属性m_flbh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return Integer
	 */
	public Integer getFlbh() {
		return m_flbh;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-4-21 10:32:40)
	 *
	 * @author:陈飞
	 * @return nc.vo.pub.lang.UFDouble
	 */
	public nc.vo.pub.lang.UFDouble getForelock() {
		return m_forelock;
	}

	/**
	 * 属性m_fph的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getFph() {
		return m_fph;
	}

	/**
	 * 属性m_freeitemid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getFreeitemid() {
		return m_freeitemid;
	}

	/**
	 * 属性m_fx的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return Integer
	 */
	public Integer getFx() {
		return m_fx;
	}

	/**
	 * 属性m_ggxh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getGgxh() {
		return m_ggxh;
	}

	public Integer getGroupingSerialNumber() {
		return m_iSerialNumber;
	}

	/**
	 * 属性m_hbbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getHbbm() {
		return m_hbbm;
	}

	/**
	 * 属性m_jfybsj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getHsdj() {
		return m_hsdj;
	}

	/**
	 * 属性m_htbh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getHtbh() {
		return m_htbh;
	}

	/**
	 * 属性m_htmc的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getHtmc() {
		return m_htmc;
	}

	/**
	 * 属性m_dfybje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getHzbbye() {
		return m_hzbbye;
	}

	/**
	 * 属性m_dfybje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getHzfbye() {
		return m_hzfbye;
	}

	/**
	 * 属性m_dfybje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getHzybye() {
		return m_hzybye;
	}

	/**
	 * 属性m_bz_kjnd的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public UFBoolean getIsselected() {
		return m_isselected;
	}

	/**
	 * 属性m_bz_kjnd的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public UFBoolean getIsSqed() {
		return m_isSqed;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getItem_bill_djbh() {
		return m_item_bill_djbh;
	}

	/**
	 * 属性m_bz_kjnd的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getItem_bill_pk() {
		return m_item_bill_pk;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getItem_bill_pk_old() {
		return m_item_bill_pk_old;
	}

	/**
	 * 属性m_jfbbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getJfbbje() {
		return m_jfbbje;
	}

	/**
	 * 属性m_jfbbsj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getJfbbsj() {
		return m_jfbbsj;
	}

	/**
	 * 属性m_jffbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getJffbje() {
		return m_jffbje;
	}

	/**
	 * 属性m_jffbsj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getJffbsj() {
		return m_jffbsj;
	}

	/**
	 * 属性m_jfshl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getJfshl() {
		return m_jfshl;
	}

	/**
	 * 属性m_jfybje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getJfybje() {
		return m_jfybje;
	}

	/**
	 * 属性m_jfybsj的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getJfybsj() {
		return m_jfybsj;
	}

	/**
	 * 属性m_jfybwsje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getJfybwsje() {
		return m_jfybwsje;
	}

	/**
	 * 属性m_jobid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getJobid() {
		return m_jobid;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2002-6-25 12:31:49)
	 *
	 * @return java.lang.String
	 */
	public java.lang.String getJobphaseid() {
		return jobphaseid;
	}

	/**
	 * 获得结算方式。 创建日期：(2003-5-9 16:50:06)
	 *
	 * @return java.lang.String
	 */
	public java.lang.String getJsfs() throws java.lang.Exception {
		if (getSettleBodyVO() != null) {
			return getSettleBodyVO().getJsfs();
		}
		return getPj_jsfs();
	}

	/**
	 * 属性m_jsfsbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getJsfsbm() {
		return m_jsfsbm;
	}

	/**
	 * 属性m_kmbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getKmbm() {
		return m_kmbm;
	}

	/**
	 * 属性m_kprq的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDate
	 */
	public UFDate getKprq() {
		return m_kprq;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getKsbm() {
		return m_ksbm;
	}

	/**
	 * 属性m_ksbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	//	public String getKsbm_cl() {
	//		return m_ksbm_cl;
	//	}
	public String getKsdh() {
		return m_ksdh;
	}

	public String getKsdz() {
		return m_ksdz;
	}

	public String getKskhh() {
		return m_kskhh;
	}

	/**
	 * 属性m_ddhh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return Integer
	 */
	public Integer getKslb() {
		return m_kslb;
	}

	public String getKsmc() {
		return m_ksmc;
	}

	public String getKssh() {
		return m_kssh;
	}

	public String getKszh() {
		return m_kszh;
	}

	/**
	 * 属性m_kxyt的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getKxyt() {
		return m_kxyt;
	}

	/**
	 * 属性m_htbh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 * @throws Exception 
	 */
	public String getNotetype() throws Exception {
		if (getSettleBodyVO() != null) {
			return getSettleBodyVO().getNotetype();
		}
		return m_notetype;
	}

	/**
	 * 属性m_htbh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getNotetype_name() {
		return m_notetype_name;
	}

	/**
	 * 属性m_old_flag的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFBoolean
	 */
	public UFBoolean getOld_flag() {
		return m_old_flag;
	}

	/**
	 * 属性m_old_sys_flag的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFBoolean
	 */
	public UFBoolean getOld_sys_flag() {
		return m_old_sys_flag;
	}

	/**
	 * 属性m_dffbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getOldbbye() {
		return m_oldbbye;
	}

	/**
	 * 属性m_dffbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getOldfbye() {
		return m_oldfbye;
	}

	/**
	 * 属性m_dffbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getOldybye() {
		return m_oldybye;
	}

	/**
	 * 属性m_ph的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getOrdercusmandoc() {
		return m_ordercusmandoc;
	}

	/**
	 * 属性m_ph的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getOrdercusmandoc_name() {
		return m_ordercusmandoc_name;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getOthersysflag() {
		return m_othersysflag;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public UFBoolean getPausetransact() {
		return m_pausetransact;
	}

	/**
	 * 属性m_pch的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPch() {
		return m_pch;
	}

	/**
	 * 属性m_ph的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPh() {
		return m_ph;
	}

	/**
	 * 属性m_bzbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPj_jfsf_mc() {
		return m_pj_jsfs_mc;
	}

	/**
	 * 属性m_accountid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPj_jsfs() {
		return m_pj_jsfs;
	}

	/**
	 * 属性m_accountid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPjh() {
		return m_pjh;
	}

	/**
	 * 属性m_ddh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPk_arap_fengcun() {
		return m_pk_arap_fengcun;
	}

	/**
	 * 返回对象标识，用来唯一定位对象。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPk_currrate() {

		return m_pk_currrate;
	}

	/**
	 * 属性m_hbbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPk_invcl() {
		return m_pk_invcl;
	}

	/**
	 * 属性m_jobphaseid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPk_jobobjpha() {
		return m_pk_jobobjpha;
	}

	/**
	 * getPkCard //卡片pk
	 */
	public java.lang.String getPkCard() {
		return this.getFacardbh();
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:29:48)
	 *
	 * @author:陈飞
	 * @return nc.vo.pub.lang.UFDouble
	 */
	public nc.vo.pub.lang.UFDouble getPlannum() {
		return m_plannum;
	}

	/**
	 * 返回对象标识，用来唯一定位对象。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getPrimaryKey() {

		return m_fb_oid;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getProductline() {
		return m_productline;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-4-20 9:33:36)
	 *
	 * @author:
	 * @return java.lang.String
	 */
	public java.lang.String getProductline_name() {
		return m_productline_name;
	}

	/**
	 * getRentDate //取实际交租日期
	 */
	public java.lang.String getRentDate() {
		return m_RentDate.toString();
	}

	/**
	 * getRentMoney //实际租金
	 */
	public nc.vo.pub.lang.UFDouble getRentMoney() {
		return getJfbbje().add(getDfbbje());
	}

	/**
	 * 属性m_sfbz的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getSfbz() {
		return m_sfbz;
	}

	/**
	 * 属性m_sfkxyh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getSfkxyh() {
		return m_sfkxyh;
	}

	/**
	 * 属性m_ddh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getShenpi() {
		return m_shenpi;
	}

	/**
	 * 属性m_shlye的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getShlye() {
		return m_shlye;
	}

	/**
	 * 属性m_skyhdz的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getSkyhdz() {
		return m_skyhdz;
	}

	/**
	 * 属性m_skyhmc的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getSkyhmc() {
		return m_skyhmc;
	}

	/**
	 * 属性m_skyhzh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getSkyhzh() {
		return m_skyhzh;
	}

	/**
	 * 属性m_sl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getSl() {
		return m_sl;
	}

	/**
	 * 属性m_spzt的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return Integer
	 */
	public Integer getSpzt() {
		return m_spzt;
	}

	/**
	 * 属性m_jfybwsje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public Integer getSqflag() {
		return m_sqflag;
	}

	/**
	 * 属性m_srbz的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFBoolean
	 */
	public UFBoolean getSrbz() {
		return m_srbz;
	}

	/**
	 * 属性m_zyx16_mc(使用部门）的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getSYBM_MC() {
		return m_zyx16_mc;
	}

	/**
	 * 属性m_szxmid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getSzxmid() {
		return m_szxmid;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getTask() {
		return m_task;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getTask_name() {
		return m_task_name;
	}

	/**
	 * 属性m_tax_num的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getTax_num() {
		return m_tax_num;
	}

	public UFDateTime getTs() {
		return m_ts;
	}

	/**
	 * 属性m_vouchid的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getVouchid() {
		return m_vouchid;
	}

	/**
	 * 属性m_wbfbbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getWbfbbje() {
		return m_wbfbbje;
	}

	/**
	 * 属性m_wbffbje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getWbffbje() {
		return m_wbffbje;
	}

	/**
	 * 属性m_wbfybje的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getWbfybje() {
		return m_wbfybje;
	}

	/**
	 * 属性m_wldx的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return Integer
	 */
	public Integer getWldx() {
		return m_wldx;
	}

	/**
	 * 属性m_xmbm2的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getXbbm3() {
		return m_xbbm3;
	}

	/**
	 * 属性m_xgbh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return Integer
	 */
	public Integer getXgbh() {
		return m_xgbh;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getXm() {
		return m_xm;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getXm_name() {
		return m_xm_name;
	}

	/**
	 * 属性m_xmbm2的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getXmbm2() {
		return m_xmbm2;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getXmys() {
		return m_xmys;
	}

	/**
	 * 属性m_chbm_cl的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getXmys_name() {
		return m_xmys_name;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:38:26)
	 *
	 * @author:陈飞
	 * @return java.lang.String
	 */
	public java.lang.String getXslxmc() {
		return m_xslxmc;
	}

	/**
	 * 属性m_xyzh的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getXyzh() {
		return m_xyzh;
	}

	/**
	 * 属性m_ybye的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return UFDouble
	 */
	public UFDouble getYbye() {
		return m_ybye;
	}

	/**
	 * 属性m_ywbm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getYwbm() {
		return m_ywbm;
	}

	/**
	 * 属性m_ywybm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getYwybm() {
		return m_ywybm;
	}

	/**
	 * 属性m_ywybm的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getYwymc() {
		return m_ywymc;
	}

	/**
	 * 属性m_xmbm2的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZhbzbm() {
		return m_zhbzbm;
	}

	/**
	 * 属性m_zjldw的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZjldw() {
		return m_zjldw;
	}

	/**
	 * 属性m_chmc的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZjldwmc() {
		return m_zjldwmc;
	}

	/**
	 * 属性m_zy的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZy() {
		return m_zy;
	}

	/**
	 * 属性m_zyx1的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx1() {
		return m_zyx1;
	}

	/**
	 * 属性m_zyx10的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx10() {
		return m_zyx10;
	}

	/**
	 * 属性m_zyx11的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx11() {
		return m_zyx11;
	}

	/**
	 * 属性m_zyx12的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx12() {
		return m_zyx12;
	}

	/**
	 * 属性m_zyx13的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx13() {
		return m_zyx13;
	}

	/**
	 * 属性m_zyx14的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx14() {
		return m_zyx14;
	}

	/**
	 * 属性m_zyx15的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx15() {
		return m_zyx15;
	}

	/**
	 * 属性m_zyx16的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx16() {
		return m_zyx16;
	}

	/**
	 * 属性m_zyx17的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx17() {
		return m_zyx17;
	}

	/**
	 * 属性m_zyx18的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx18() {
		return m_zyx18;
	}

	/**
	 * 属性m_zyx19的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx19() {
		return m_zyx19;
	}

	/**
	 * 属性m_zyx2的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx2() {
		return m_zyx2;
	}

	/**
	 * 属性m_zyx20的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx20() {
		return m_zyx20;
	}

	/**
	 * 属性m_zyx3的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx3() {
		return m_zyx3;
	}

	/**
	 * 属性m_zyx4的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx4() {
		return m_zyx4;
	}

	/**
	 * 属性m_zyx5的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx5() {
		return m_zyx5;
	}

	/**
	 * 属性m_zyx6的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx6() {
		return m_zyx6;
	}

	/**
	 * 属性m_zyx7的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx7() {
		return m_zyx7;
	}

	/**
	 * 属性m_zyx8的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx8() {
		return m_zyx8;
	}

	/**
	 * 属性m_zyx9的Getter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @return String
	 */
	public String getZyx9() {
		return m_zyx9;
	}

	/**
	 * 属性m_jfbbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfbbje
	 *            UFDouble
	 */
	public void setAccflag(Integer newAccflag) {

		m_accflag = newAccflag;
	}

	/**
	 * 属性m_accountid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_accountid
	 *            String
	 */
	public void setAccidname(String newaccidname) {

		m_accidname = newaccidname;
	}

	/**
	 * 属性m_accountid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_accountid
	 *            String
	 */
	public void setAccountid(String newAccountid) {

		m_accountid = newAccountid;
	}

	/**
	 * <p>
	 * 对参数name对型的属性设置值。
	 * <p>
	 * 创建日期：(2000-10-9)
	 *
	 * @param key
	 *            java.lang.String
	 */
	public void setAttributeValue(String name, Object value) {

		try {
			if (name.equalsIgnoreCase("occupationmny")) {
				occupationmny = (UFDouble) value;
			}
			if (name.equals("fb_oid")) {
				m_fb_oid = (String) value;
			} else if (name.equals("djdl")) {
				djdl = (String) value;
			} else if (name.equals("djlxbm")) {
				djlxbm = (String) value;
			} else if (name.equals("commonflag")) {
				commonflag = (String) value;
			} else if (name.equals("pjdirection")) {
				pjdirection = (String) value;
			} else if (name.equals("tempddhh")) {
				tempddhh = (String) tempddhh;
			} else if (name.equals("tempddlx")) {
				tempddhh = (String) tempddhh;
			} else if (name.equals("djxtflagname"))
				djxtflag = DJZBVOUtility.getXtFlag(value);
			else if (name.equals("djxtflag"))
				djxtflag = (Integer) value;
			else if (name.equals("ybpjlx"))
				ybpjlx = (UFDouble) value;
			else if (name.equals("bbpjlx"))
				bbpjlx = (UFDouble) value;
			else if (name.equals("fbpjlx"))
				fbpjlx = (UFDouble) value;
			else if (name.equals("ybtxfy"))
				ybtxfy = (UFDouble) value;
			else if (name.equals("bbtxfy"))
				bbtxfy = (UFDouble) value;
			else if (name.equals("fbtxfy"))
				fbtxfy = (UFDouble) value;

			else if (name.equals("payman"))
				payman = (String) value;
			else if (name.equals("paydate"))
				paydate = (String) value;
			else if (name.equals("clbh"))
				clbh = (String) value;
			else if (name.equals("ckdh"))
				ckdh = (String) value;
			else if (name.equals("fphid"))
				fphid = (String) value;
			else if (name.equals("ddhid"))
				ddhid = (String) value;
			else if (name.equals("ckdid"))
				ckdid = (String) value;
			else if (name.equals("isverifyfinished")) {
				if (null != value && value.toString().length() > 0)
					isverifyfinished = (UFBoolean) value;
			} else if (name.equals("verifyfinisheddate")) {
				if (null != value && value.toString().length() > 0)
					verifyfinisheddate = new UFDate(value.toString());
			} else if (name.equals("bankacc_fk"))
				bankacc_fk = (String) value;
			else if (name.equals("encode"))
				encode = (String) value;
			else if (name.equals("billdate"))
				billdate = (UFDate) value;
			else if (name.equals("payflag"))
				payflag = (Integer) value;
			else if (name.equals("payflagname"))
				payflag = DJZBVOUtility.getPayFlagNum((String) value);
			//
			else if (name.equals("invtype"))
				m_invtype = (String) value;

			else if (name.equals("closer"))
				m_closer = (String) value;
			else if (name.equals("closedate"))
				m_closedate = (UFDate) value;
			else if (name.equals("ksbm"))
				m_ksbm = (String) value;

			else if (name.equals("plannum"))
				m_plannum = (UFDouble) value;
			else if (name.equals("executenum"))
				m_executenum = (UFDouble) value;
			else if (name.equals("bugettablename"))
				m_bugettablename = (String) value;
			else if (name.equals("xslxmc"))
				m_xslxmc = (String) value;
			else if (name.equals("forelock")) {

				m_forelock = (value == null ? ArapCommonTool.ZERO : new UFDouble(value.toString()));
			}
			//
			else if (name.equals("productline_name"))
				m_productline_name = (String) value;

			else if (name.equals("isselected")) {
				m_isselected = (UFBoolean) value;
			}
			//
			else if (name.equals("productline")) {
				m_productline = (String) value;
			} else if (name.equals("xm")) {
				m_xm = (String) value;
			} else if (name.equals("xmys")) {
				m_xmys = (String) value;
			} else if (name.equals("task")) {
				m_task = (String) value;
			} else if (name.equals("xm_name")) {
				m_xm_name = (String) value;
			} else if (name.equals("xmys_name")) {
				m_xmys_name = (String) value;
			} else if (name.equals("task_name")) {
				m_task_name = (String) value;
			} else if (name.equals("othersysflag")) {
				m_othersysflag = (String) value;
			}

			//
			else if (name.equals("shenpi")) {
				m_shenpi = (String) value;
			} else if (name.equals("pk_arap_fengcun")) {
				m_pk_arap_fengcun = (String) value;
			}
			//

			else if (name.equals("item_bill_pk_old")) {
				m_item_bill_pk_old = (String) value;
			} else if (name.equals("kmmc")) {
				m_kmmc = (String) value;
			} else if (name.equals("oldybye")) {
				m_oldybye = (UFDouble) value;
				;
			} else if (name.equals("oldfbye")) {
				m_oldfbye = (UFDouble) value;
			} else if (name.equals("oldbbye")) {
				m_oldbbye = (UFDouble) value;
			} else if (name.equals("item_bill_djbh")) {
				m_item_bill_djbh = (String) value;
			} else if (name.equals("item_bill_pk")) {
				if (null != value && value.toString().length() == 0)
					m_item_bill_pk = null;
				else
					m_item_bill_pk = (String) value;
			} else if (name.equals("notetype")) {
				m_notetype = (String) value;
			} else if (name.equals("begin_date")) {
				m_begin_date = (UFDate) value;
			} else if (name.equals("end_date")) {
				m_end_date = (UFDate) value;
			} else if (name.equals("notetype_name")) {
				m_notetype_name = (String) value;
			} else if (name.equals("ordercusmandoc")) {
				m_ordercusmandoc = (String) value;
			} else if (name.equals("ordercusmandoc_name")) {
				m_ordercusmandoc_name = (String) value;
			} else if (name.equals("contractno")) {
				m_contractno = (String) value;
			} else if (name.equals("pausetransact")) {
				m_pausetransact = (UFBoolean) value;
			} else if (name.equals("zjldwmc")) {
				m_zjldwmc = (String) value;
			} else if (name.equals("pj_jsfs_mc")) {
				m_pj_jsfs_mc = (String) value;
			} else if (name.equals("cashflowmc")) {
				m_cashflowmc = (String) value;
			} else if (name.equals("pjh")) {
				if (value instanceof DefaultConstEnum) {
					m_pjh = (String)((DefaultConstEnum) value).getValue();
				}else {
					m_pjh = (String) value;
				}
			} else if (name.equals("pj_jsfs")) {
				m_pj_jsfs = (String) value;
			} else if (name.equals("xmmc1")) {
				m_xmmc1 = (String) value;
			} else if (name.equals("bmmc")) {
				m_bmmc = (String) value;
			} else if (name.equals("sfkxymc")) {
				m_sfkxymc = (String) value;
			} else if (name.equals("bankacc")) {
				m_bankacc = (String) value;
			} else if (name.equals("accidname")) {
				m_accidname = (String) value;
			}
			//cf add 存货分类主键
			else if (name.equals("pk_invcl")) {
				m_pk_invcl = (String) value;
			} else if (name.equals("pk_currrate")) {
				m_pk_currrate = (String) value;
			} else if (name.equals("dr")) {
				m_dr = (Integer) value;
			}

			//cf add 贷方本币无税金额
			else if (name.equals("dfbbwsje")) {
				m_dfbbwsje = (UFDouble) value;
			}

			//cf add 含税单价
			else if (name.equals("hsdj")) {
				m_hsdj = (UFDouble) value;
			}

			//cf add 扣税类别
			else if (name.equals("kslb")) {
				m_kslb = DJZBVOUtility.getKslbCodeByName(value);

			}

			//cf add 账户标志
			else if (name.equals("accflag")) {
				m_accflag = value == null || value.toString().trim().length() < 1 ? null : new Integer(value.toString().trim());
			}

			//cf add 账户币种编码
			else if (name.equals("zhbzbm")) {
				m_zhbzbm = (String) value;
			}

			//cf add 坏账原币余额
			else if (name.equals("hzybye")) {
				m_hzybye = (UFDouble) value;
			}

			//坏账本币余额
			else if (name.equals("hzbbye")) {
				m_hzbbye = (UFDouble) value;
			}

			//坏账辅币余额
			else if (name.equals("hzfbye")) {
				m_hzfbye = (UFDouble) value;
			}

			//业务员名称
			else if (name.equals("ywymc")) {
				m_ywymc = (String) value;
			} else if (name.equals("dwmc")) {
				m_dwmc = (String) value;
			} else if (name.equals("szxmmc")) {
				m_szxmmc = (String) value;
			} else if (name.equals("dwbm")) {
				m_dwbm = (String) value;
			} else if (name.equals("sfbz")) {
				m_sfbz = (String) value;
			} else if (name.equals("djbh")) {
				m_djbh = (String) value;
			} else if (name.equals("ywbm")) {
				m_ywbm = (String) value;
			} else if (name.equals("flbh")) {
				m_flbh = (Integer) value;
			} else if (name.equals("xgbh")) {
				m_xgbh = (Integer) value;
			} else if (name.equals("old_sys_flag")) {
				m_old_sys_flag = (UFBoolean) value;
			} else if (name.equals("fx")) {
				m_fx = (Integer) value;
			} else if (name.equals("spzt")) {
				m_spzt = (Integer) value;
			} else if (name.equals("zy")) {
				m_zy = (String) value;
			} else if (name.equals("kmbm")) {
				m_kmbm = (String) value;
			} else if (name.equals("hbbm")) {
				m_hbbm = (String) value;
			} else if (name.equals("bzbm")) {
				m_bzbm = (String) value;
			} else if (name.equals("khhbzbmkhh")) {
				m_bzbm = (String) value;
			} else if (name.equals("bzmc")) {
				m_bzmc = (String) value;
			} else if (name.equals("bbhl")) {
				m_bbhl = (UFDouble) value;
			} else if (name.equals("fbhl")) {
				m_fbhl = (UFDouble) value;
			} else if (name.equals("jobid")) {
				m_jobid = (String) value;
			} else if (name.equals("xmbm2")) {
				m_xmbm2 = (String) value;
			} else if (name.equals("xbbm3")) {
				m_xbbm3 = (String) value;
			}
			//else if (name.equals("xmbm4")) {
			//m_xmbm4 = (String) value;
			//}
			//else if (name.equals("xmbm5")) {
			//m_xmbm5 = (String) value;
			//}
			//else if (name.equals("xmbm6")) {
			//m_xmbm6 = (String) value;
			//}
			//else if (name.equals("xmbm7")) {
			//m_xmbm7 = (String) value;
			//}
			//else if (name.equals("xmbm8")) {
			//m_xmbm8 = (String) value;
			//}
			//else if (name.equals("xmbm9")) {
			//m_xmbm9 = (String) value;
			//}
			//else if (name.equals("jobid0")) {
			//m_jobid0 = (String) value;
			//}
			else if (name.equals("jfybje")) {
				m_jfybje = (UFDouble) value;
			} else if (name.equals("jffbje")) {
				m_jffbje = (UFDouble) value;
			} else if (name.equals("jfbbje")) {
				m_jfbbje = (UFDouble) value;
			} else if (name.equals("ybye")) {
				m_ybye = (UFDouble) value;
			} else if (name.equals("fbye")) {
				m_fbye = (UFDouble) value;
			} else if (name.equals("bbye")) {
				m_bbye = (UFDouble) value;
			} else if (name.equals("shlye")) {
				m_shlye = (UFDouble) value;
			}
			//else if (name.equals("pzflh")) {
			//m_pzflh = (Integer) value;
			//}
			//else if (name.equals("ywxz")) {
			//m_ywxz = (String) value;
			//}
			else if (name.equals("cinventoryid")) {
				m_cinventoryid = (String) value;
			} else if (name.equals("chbm_cl")) {
				m_chbm_cl = (String) value;
			} else if (name.equals("chmc")) {
				m_chmc = (String) value;
			} else if (name.equals("ggxh")) {
				m_ggxh = (String) value;
			} else if (name.equals("zjldw")) {
				m_zjldw = (String) value;
			} else if (name.equals("fjldw")) {
				m_fjldw = (String) value;
			}
			//else if (name.equals("hsl")) {
			//m_hsl = (UFDouble) value;
			//}
			else if (name.equals("pch")) {
				m_pch = (String) value;
			}
			//else if (name.equals("ckbm")) {
			//m_ckbm = (String) value;
			//}
			else if (name.equals("jfshl")) {
				m_jfshl = (UFDouble) value;
			}
			//else if (name.equals("jfjs")) {
			//m_jfjs = (UFDouble) value;
			//}
			else if (name.equals("dj")) {
				m_dj = (UFDouble) value;
			} else if (name.equals("sl")) {
				m_sl = (UFDouble) value;
			} else if (name.equals("jfybsj")) {
				m_jfybsj = (UFDouble) value;
			} else if (name.equals("jffbsj")) {
				m_jffbsj = (UFDouble) value;
			} else if (name.equals("jfbbsj")) {
				m_jfbbsj = (UFDouble) value;
			}
			//else if (name.equals("zkl")) {
			//m_zkl = (UFDouble) value;
			//}
			//else if (name.equals("jfzkfbje")) {
			//m_jfzkfbje = (UFDouble) value;
			//}
			//else if (name.equals("jfzkybje")) {
			//m_jfzkybje = (UFDouble) value;
			//}
			//else if (name.equals("ysybye")) {
			//m_ysybye = (UFDouble) value;
			//}
			//else if (name.equals("ysfbye")) {
			//m_ysfbye = (UFDouble) value;
			//}
			//else if (name.equals("ysbbye")) {
			//m_ysbbye = (UFDouble) value;
			//}
			else if (name.equals("fkyhmc")) {
				m_fkyhmc = (String) value;
			} else if (name.equals("fkyhzh")) {
				m_fkyhzh = (String) value;
			} else if (name.equals("fkyhdz")) {
				m_fkyhdz = (String) value;
			} else if (name.equals("skyhmc")) {
				m_skyhmc = (String) value;
			} else if (name.equals("skyhzh")) {
				m_skyhzh = (String) value;
			} else if (name.equals("skyhdz")) {
				m_skyhdz = (String) value;
			}
			//else if (name.equals("jshj")) {
			//m_jshj = (UFDouble) value;
			//}
			else if (name.equals("zyx1")) {

				if (value != null)
					m_zyx1 = value.toString();
				else
					m_zyx1 = null;
			} else if (name.equals("zyx2")) {
				if (value != null)
					m_zyx2 = value.toString();
				else
					m_zyx2 = null;
			} else if (name.equals("zyx3")) {
				if (value != null)
					m_zyx3 = value.toString();
				else
					m_zyx3 = null;
			} else if (name.equals("zyx4")) {
				if (value != null)
					m_zyx4 = value.toString();
				else
					m_zyx4 = null;
			} else if (name.equals("zyx5")) {
				if (value != null)
					m_zyx5 = value.toString();
				else
					m_zyx5 = null;
			} else if (name.equals("zyx6")) {
				if (value != null)
					m_zyx6 = value.toString();
				else
					m_zyx6 = null;
			} else if (name.equals("zyx7")) {
				if (value != null)
					m_zyx7 = value.toString();
				else
					m_zyx7 = null;
			} else if (name.equals("zyx8")) {
				if (value != null)
					m_zyx8 = value.toString();
				else
					m_zyx8 = null;
			} else if (name.equals("zyx9")) {
				if (value != null)
					m_zyx9 = value.toString();
				else
					m_zyx9 = null;
			} else if (name.equals("zyx10")) {
				if (value != null)
					m_zyx10 = value.toString();
				else
					m_zyx10 = null;
			} else if (name.equals("zyx11")) {
				if (value != null)
					m_zyx11 = value.toString();
				else
					m_zyx11 = null;
			} else if (name.equals("zyx12")) {
				if (value != null)
					m_zyx12 = value.toString();
				else
					m_zyx12 = null;
			} else if (name.equals("zyx13")) {
				if (value != null)
					m_zyx13 = value.toString();
				else
					m_zyx13 = null;
			} else if (name.equals("zyx14")) {
				if (value != null)
					m_zyx14 = value.toString();
				else
					m_zyx14 = null;
			} else if (name.equals("zyx15")) {
				if (value != null)
					m_zyx15 = value.toString();
				else
					m_zyx15 = null;
			} else if (name.equals("zyx16")) {
				if (value != null)
					m_zyx16 = value.toString();
				else
					m_zyx16 = null;
			} else if (name.equals("zyx17")) {
				if (value != null)
					m_zyx17 = value.toString();
				else
					m_zyx17 = null;
			} else if (name.equals("zyx18")) {
				if (value != null)
					m_zyx18 = value.toString();
				else
					m_zyx18 = null;
			} else if (name.equals("zyx19")) {
				if (value != null)
					m_zyx19 = value.toString();
				else
					m_zyx19 = null;
			} else if (name.equals("zyx20")) {
				if (value != null)
					m_zyx20 = value.toString();
				else
					m_zyx20 = null;
			} else if (name.equals("htbh")) {
				m_htbh = (String) value;
			} else if (name.equals("htmc")) {
				m_htmc = (String) value;
			} else if (name.equals("ddlx")) {
				m_ddlx = (String) value;
			} else if (name.equals("ddh")) {
				m_ddh = (String) value;
			} else if (name.equals("ddhh")) {
				m_ddhh = (String) value;
			} else if (name.equals("fph")) {
				m_fph = (String) value;
			} else if (name.equals("jsfsbm")) {
				m_jsfsbm = (String) value;
			} else if (name.equals("ph")) {
				m_ph = (String) value;
			} else if (name.equals("kprq")) {
				m_kprq = (UFDate) value;
			} else if (name.equals("xyzh")) {
				m_xyzh = (String) value;
			} else if (name.equals("cksqsh")) {
				m_cksqsh = (String) value;
			} else if (name.equals("wbfybje")) {
				m_wbfybje = (UFDouble) value;
			} else if (name.equals("wbffbje")) {
				m_wbffbje = (UFDouble) value;
			} else if (name.equals("wbfbbje")) {
				m_wbfbbje = (UFDouble) value;
			}
			//else if (name.equals("ycskrq")) {
			//m_ycskrq = (UFDate) value;
			//}
			else if (name.equals("srbz")) {
				m_srbz = (UFBoolean) value;
			} else if (name.equals("szxmid")) {
				m_szxmid = (String) value;
			} else if (name.equals("accountid")) {
				m_accountid = (String) value;
			} else if (name.equals("sfkxyh")) {
				m_sfkxyh = (String) value;
			} else if (name.equals("dfybje")) {
				m_dfybje = (UFDouble) value;
			} else if (name.equals("dffbje")) {
				m_dffbje = (UFDouble) value;
			} else if (name.equals("dfbbje")) {
				m_dfbbje = (UFDouble) value;
			} else if (name.equals("dfshl")) {
				m_dfshl = (UFDouble) value;
			}
			//else if (name.equals("dfjs")) {
			//m_dfjs = (UFDouble) value;
			//}
			else if (name.equals("dfybsj")) {
				m_dfybsj = (UFDouble) value;
			} else if (name.equals("dffbsj")) {
				m_dffbsj = (UFDouble) value;
			} else if (name.equals("dfbbsj")) {
				m_dfbbsj = (UFDouble) value;
			} else if (name.equals("vouchid")) {
				m_vouchid = (String) value;
			} else if (name.equals("wldx")) {
				if (value instanceof DefaultConstEnum) {
					DefaultConstEnum enumValue = (DefaultConstEnum) value;
					if (enumValue != null)
						m_wldx = (Integer) enumValue.getValue();
				} else
					m_wldx = (Integer) value;
			} else if (name.equals("freeitemid")) {
				m_freeitemid = (String) value;
			} else if (name.equals("jfybwsje")) {
				m_jfybwsje = (UFDouble) value;
			} else if (name.equals("dfybwsje")) {
				m_dfybwsje = (UFDouble) value;
			} else if (name.equals("tax_num")) {
				m_tax_num = (String) value;
			} else if (name.equals("bz_date")) {
				m_bz_date = (UFDate) value;
			} else if (name.equals("old_flag")) {
				m_old_flag = (UFBoolean) value;
			} else if (name.equals("bz_kjnd")) {
				m_bz_kjnd = (String) value;
			} else if (name.equals("bz_kjqj")) {
				m_bz_kjqj = (String) value;
			} else if (name.equals("pk_jobobjpha")) {
				m_pk_jobobjpha = (String) value;
			}
			//jobphaseid
			else if (name.equals("jobphaseid")) {
				jobphaseid = (String) value;
			}

			else if (name.equals("kxyt")) {
				m_kxyt = (String) value;
			} else if (name.equals("deptid")) {
				m_deptid = (String) value;
			} else if (name.equals("ywybm")) {
				m_ywybm = (String) value;
			}
			//
			else if (name.equals("ksmc")) {
				m_ksmc = (String) value;
			} else if (name.equals("ksdz")) {
				m_ksdz = (String) value;
			} else if (name.equals("kskhh")) {
				m_kskhh = (String) value;
			} else if (name.equals("kszh")) {
				m_kszh = (String) value;
			} else if (name.equals("ksdh")) {
				m_ksdh = (String) value;
			} else if (name.equals("kssh")) {
				m_kssh = (String) value;
			} else if (name.equals("djzbitemsIndex")) {
				m_djzbitemsIndex = (Integer) value;
			}
			//grouping symbol added by wangqiang at 2004-8-02
			else if (name.equals("serial_number")) {
				m_iSerialNumber = (Integer) value;
			}//使用部门（名称）
			else if (name.equals("zyx16_mc")) {
				m_zyx16_mc = (String) value;
			} else if (name.equals("ts")) {
				m_ts = (UFDateTime) value;
			}
			/**
			 * new items added in V31,wangqiang
			 */
			else if (name.equals("txlx_ybje")) {
				txlx_ybje = (UFDouble) value;
			} else if (name.equals("txlx_bbje")) {
				txlx_bbje = (UFDouble) value;
			} else if (name.equals("txlx_fbje")) {
				txlx_fbje = (UFDouble) value;
			} else if (name.equals("htlx_pk")) {
				this.m_strCtzhtlxPK = (String) value;
			} else if (name.equals("dqflpk")) {//地区分类PK
				this.m_strDqflPK = (String) value;
			} else if (name.equals("bjjldw")) {//地区分类PK
				this.m_bjjldw = (String) value;
			} else if (name.equals("bjdwsl")) {//地区分类PK
				this.m_bjdwsl = (UFDouble) value;
			} else if (name.equals("bjdwhsdj")) {//地区分类PK
				this.m_bjdwhsdj = (UFDouble) value;
			} else if (name.equals("bjdwwsdj")) {//地区分类PK
				this.m_bjdwwsdj = (UFDouble) value;
			} else if (name.equals("zrdeptid")) {//地区分类PK
				this.zrdeptid = (String) value;
			} else if (name.equals("zrbmmc")) {//地区分类PK
				this.zrbmmc = (String) value;
			} else if (name.equals("qxrq")) {//地区分类PK
				this.qxrq = (UFDate) value;
			} else if (name.equals("isSFKXYChanged")) {//地区分类PK
				this.isSFKXYChanged = (UFBoolean) value;
			} else if (name.equals("sanhu")) {//地区分类PK
				this.sanhu = (String) value;
			} else if (name.equals("sanhuname")) {//地区分类PK
				this.sanhuname = (String) value;
			} else if (name.equals("seqnum")) {//地区分类PK
				this.seqnum = (String) value;
			} else if (name.equals("usedept")) {//地区分类PK
				this.usedept = (String) value;
			} else if (name.equals("tbbh")) {//地区分类PK
				this.tbbh = (String) value;
			} else if (name.equals("facardbh")) {//地区分类PK 
				this.facardbh = (String) value;
			} else if (name.equals("kpbh")) {//地区分类PK
				this.kpbh = (String) value;
			} else if (name.equals("cashitem")) {//地区分类PK
				this.cashitem = (String) value;
			} else if (name.equals("zyx21")) {//地区分类PK
				this.zyx21 = value == null ? null : value.toString();
			} else if (name.equals("zyx22")) {//地区分类PK
				this.zyx22 = value == null ? null : value.toString();
			} else if (name.equals("zyx23")) {//地区分类PK
				this.zyx23 = value == null ? null : value.toString();
			} else if (name.equals("zyx24")) {//地区分类PK
				this.zyx24 = value == null ? null : value.toString();
			} else if (name.equals("zyx25")) {//地区分类PK
				this.zyx25 = value == null ? null : value.toString();
			} else if (name.equals("zyx26")) {//地区分类PK
				this.zyx26 = value == null ? null : value.toString();
			} else if (name.equals("zyx27")) {//地区分类PK
				this.zyx27 = value == null ? null : value.toString();
			} else if (name.equals("zyx28")) {//地区分类PK
				this.zyx28 = value == null ? null : value.toString();
			} else if (name.equals("zyx29")) {//地区分类PK
				this.zyx29 = value == null ? null : value.toString();
			} else if (name.equals("zyx30")) {//地区分类PK
				this.zyx30 = value == null ? null : value.toString();
			} else if (name.equals("bfyhzh")) {//本方银行账号
				this.bfyhzh = (String) value;
			} else if (name.equals("dfyhzh")) {//对方银行账号
				this.dfyhzh = (String) value;
			} else if (name.equals("bankrollprojet")) {//资金计划项目
				this.bankrollprojet = (String) value;
			} else if (name.equals("bankrollprojetname")) {
				this.bankrollprojetname = (String) value;
			} else if (name.equals("dstlsubcs")) {//坏帐子方案s
				this.dstlsubcs = (String) value;
			} else if (name.equals("tradertype")) {//交易对象类型-cmp
				if (null == value) {
					this.tradertype = null;
				} else if (value instanceof String) {
					this.tradertype = Integer.valueOf((String) value);
				} else if (value instanceof Integer) {
					this.tradertype = (Integer) value;
				} else if (value instanceof DefaultConstEnum) {
					DefaultConstEnum enumValue = (DefaultConstEnum) value;
					if (enumValue != null)
						this.tradertype = (Integer) enumValue.getValue();
				} else {
					this.tradertype = null;
				}
			} else if (name.equals("equipmentcode")) {
				this.equipmentcode = (String) value;
			} else if (name.equals("assetpactno")) {
				this.assetpactno = (String) value;
			}

		} catch (ClassCastException e) {

			throw new ClassCastException(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("200602", "UPP200602-000040")/*@res "setAttributeValue方法中为 "*/+ name
					+ nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("200602", "UPP200602-000041")/*@res " 赋值时类型转换错误！（值："*/+ value
					+ nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("200602", "UPP200602-000042")/*@res "）"*/);
		}
		//catch(Exception e)
		//{
		//nc.bs.logging.Log.getInstance(this.getClass()).warn("setAttributeValue方法中为 " + name + " 赋值时类型转换错误！（值：" +
		// value + "）");
		//}
	}

	/**
	 * 属性m_accountid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_accountid
	 *            String
	 */
	public void setBankacc(String newbankacc) {

		m_bankacc = newbankacc;
	}

	/**
	 * 属性m_bbhl的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bbhl
	 *            UFDouble
	 */
	public void setBbhl(UFDouble newBbhl) {

		m_bbhl = newBbhl;
	}

	/**
	 * 属性m_bbye的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bbye
	 *            UFDouble
	 */
	public void setBbye(UFDouble newBbye) {

		m_bbye = newBbye;
	}

	/**
	 * 属性m_kprq的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_kprq
	 *            UFDate
	 */
	public void setBegin_date(UFDate newBegin_date) {

		m_begin_date = newBegin_date;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:37:22)
	 *
	 * @author:陈飞
	 * @param newM_bugettablename
	 *            java.lang.String
	 */
	public void setBugettablename(java.lang.String newM_bugettablename) {
		m_bugettablename = newM_bugettablename;
	}

	/**
	 * 属性m_bz_date的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bz_date
	 *            UFDate
	 */
	public void setBz_date(UFDate newBz_date) {

		m_bz_date = newBz_date;
	}

	/**
	 * 属性m_bz_kjnd的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bz_kjnd
	 *            String
	 */
	public void setBz_kjnd(String newBz_kjnd) {

		m_bz_kjnd = newBz_kjnd;
	}

	/**
	 * 属性m_bz_kjqj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bz_kjqj
	 *            String
	 */
	public void setBz_kjqj(String newBz_kjqj) {

		m_bz_kjqj = newBz_kjqj;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setBzbm(String newBzbm) {

		m_bzbm = newBzbm;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setBzmc(String newBzmc) {

		m_bzmc = newBzmc;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setCashflowmc(String newCashflowmc) {

		m_cashflowmc = newCashflowmc;
	}

	/**
	 * 属性m_chbm_cl的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_chbm_cl
	 *            String
	 */
	public void setChbm_cl(String newChbm_cl) {

		m_chbm_cl = newChbm_cl;
	}

	/**
	 * <p>
	 * 设置子表的VO数组。
	 * <p>
	 * 创建日期：(2001-6-1)
	 *
	 * @param children
	 *            nc.vo.pub.CircularlyAccessibleValueObject[]
	 */
	public void setChildrenVO(CircularlyAccessibleValueObject[] children) {

		items = (DJFBItemVO[]) children;
	}

	/**
	 * 属性m_chmc的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_chmc
	 *            String
	 */
	public void setChmc(String newChmc) {

		m_chmc = newChmc;
	}

	/**
	 * 属性m_cinventoryid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_cinventoryid
	 *            String
	 */
	public void setCinventoryid(String newChbm) {

		m_cinventoryid = newChbm;
	}

	/**
	 * 属性m_cksqsh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_cksqsh
	 *            String
	 */
	public void setCksqsh(String newCksqsh) {

		m_cksqsh = newCksqsh;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:40:39)
	 *
	 * @author:陈飞
	 * @param newM_closedate
	 *            nc.vo.pub.lang.UFDate
	 */
	public void setClosedate(nc.vo.pub.lang.UFDate newM_closedate) {
		m_closedate = newM_closedate;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:39:39)
	 *
	 * @author:陈飞
	 * @param newM_closer
	 *            java.lang.String
	 */
	public void setCloser(java.lang.String newM_closer) {
		m_closer = newM_closer;
	}

	/**
	 * 属性m_hbbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_hbbm
	 *            String
	 */
	public void setContractno(String newContractno) {

		m_contractno = newContractno;
	}

	/**
	 * 属性m_ddh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ddh
	 *            String
	 */
	public void setDdh(String newDdh) {

		m_ddh = newDdh;
	}

	/**
	 * 属性m_ddhh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ddhh
	 *            Integer
	 */
	public void setDdhh(String newDdhh) {

		m_ddhh = newDdhh;
	}

	/**
	 * 属性m_ddlx的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ddlx
	 *            String
	 */
	public void setDdlx(String newDdlx) {

		m_ddlx = newDdlx;
	}

	/**
	 * 属性m_deptid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_deptid
	 *            String
	 */
	public void setDeptid(String newdeptid) {

		m_deptid = newdeptid;
	}

	/**
	 * 属性m_dfbbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dfbbje
	 *            UFDouble
	 */
	public void setDfbbje(UFDouble newDfbbje) {

		m_dfbbje = newDfbbje;
	}

	/**
	 * 属性m_dfbbsj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dfbbsj
	 *            UFDouble
	 */
	public void setDfbbsj(UFDouble newDfbbsj) {

		m_dfbbsj = newDfbbsj;
	}

	/**
	 * 属性m_dfshl的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dfshl
	 *            UFDouble
	 */
	public void setDfbbwsje(UFDouble newDfbbwsje) {

		m_dfbbwsje = newDfbbwsje;
	}

	/**
	 * 属性m_dffbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dffbje
	 *            UFDouble
	 */
	public void setDffbje(UFDouble newDffbje) {

		m_dffbje = newDffbje;
	}

	/**
	 * 属性m_dffbsj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dffbsj
	 *            UFDouble
	 */
	public void setDffbsj(UFDouble newDffbsj) {

		m_dffbsj = newDffbsj;
	}

	/**
	 * 属性m_dfshl的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dfshl
	 *            UFDouble
	 */
	public void setDfshl(UFDouble newDfshl) {

		m_dfshl = newDfshl;
	}

	/**
	 * 属性m_dfybje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dfybje
	 *            UFDouble
	 */
	public void setDfybje(UFDouble newDfybje) {

		m_dfybje = newDfybje;
	}

	/**
	 * 属性m_dfybsj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dfybsj
	 *            UFDouble
	 */
	public void setDfybsj(UFDouble newDfybsj) {

		m_dfybsj = newDfybsj;
	}

	/**
	 * 属性m_dfybwsje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dfybwsje
	 *            UFDouble
	 */
	public void setDfybwsje(UFDouble newDfybwsje) {

		m_dfybwsje = newDfybwsje;
	}

	/**
	 * 属性m_dj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dj
	 *            UFDouble
	 */
	public void setDj(UFDouble newDj) {

		m_dj = newDj;
	}

	/**
	 * 属性m_djbh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_djbh
	 *            String
	 */
	public void setDjbh(String newDjbh) {

		m_djbh = newDjbh;
	}

	public void setDjzbitemsIndex(Integer newDjzbitemsIndex) {
		m_djzbitemsIndex = newDjzbitemsIndex;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setDr(Integer newDr) {

		m_dr = newDr;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setDwbm(String newDwbm) {

		m_dwbm = newDwbm;
	}

	/**
	 * 属性m_kprq的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_kprq
	 *            UFDate
	 */
	public void setEnd_date(UFDate newEnd_date) {

		m_end_date = newEnd_date;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:35:36)
	 *
	 * @author:陈飞
	 * @param newM_executenum
	 *            nc.vo.pub.lang.UFDouble
	 */
	public void setExecutenum(nc.vo.pub.lang.UFDouble newM_executenum) {
		m_executenum = newM_executenum;
	}

	/**
	 * 属性m_fb_oid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fb_oid
	 *            String
	 */
	public void setFb_oid(String newFb_oid) {

		m_fb_oid = newFb_oid;
	}

	/**
	 * 属性m_fbhl的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fbhl
	 *            UFDouble
	 */
	public void setFbhl(UFDouble newFbhl) {

		m_fbhl = newFbhl;
	}

	/**
	 * 属性m_fbye的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fbye
	 *            UFDouble
	 */
	public void setFbye(UFDouble newFbye) {

		m_fbye = newFbye;
	}

	/**
	 * 属性m_fjldw的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fjldw
	 *            String
	 */
	public void setFjldw(String newFjldw) {

		m_fjldw = newFjldw;
	}

	/**
	 * 属性m_fkyhdz的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fkyhdz
	 *            String
	 */
	public void setFkyhdz(String newFkyhdz) {

		m_fkyhdz = newFkyhdz;
	}

	/**
	 * 属性m_fkyhmc的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fkyhmc
	 *            String
	 */
	public void setFkyhmc(String newFkyhmc) {

		m_fkyhmc = newFkyhmc;
	}

	/**
	 * 属性m_fkyhzh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fkyhzh
	 *            String
	 */
	public void setFkyhzh(String newFkyhzh) {

		m_fkyhzh = newFkyhzh;
	}

	/**
	 * 属性m_flbh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_flbh
	 *            Integer
	 */
	public void setFlbh(Integer newFlbh) {

		m_flbh = newFlbh;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-4-21 10:32:40)
	 *
	 * @author:陈飞
	 * @param newM_forelock
	 *            nc.vo.pub.lang.UFDouble
	 */
	public void setForelock(nc.vo.pub.lang.UFDouble newM_forelock) {
		m_forelock = newM_forelock;
	}

	/**
	 * 属性m_fph的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fph
	 *            String
	 */
	public void setFph(String newFph) {

		m_fph = newFph;
	}

	/**
	 * 属性m_freeitemid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_freeitemid
	 *            String
	 */
	public void setFreeitemid(String newFreeitemid) {

		m_freeitemid = newFreeitemid;
	}

	/**
	 * 属性m_fx的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fx
	 *            Integer
	 */
	public void setFx(Integer newFx) {

		m_fx = newFx;
	}

	/**
	 * 属性m_ggxh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ggxh
	 *            String
	 */
	public void setGgxh(String newGgxh) {

		m_ggxh = newGgxh;
	}

	public void setGroupSerialNumber(Integer iSerialNumber) {
		this.m_iSerialNumber = iSerialNumber;
	}

	/**
	 * 属性m_hbbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_hbbm
	 *            String
	 */
	public void setHbbm(String newHbbm) {

		m_hbbm = newHbbm;
	}

	/**
	 * 属性m_jffbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jffbje
	 *            UFDouble
	 */
	public void setHsdj(UFDouble newHsdj) {

		m_hsdj = newHsdj;
	}

	/**
	 * 属性m_htbh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_htbh
	 *            String
	 */
	public void setHtbh(String newHtbh) {

		m_htbh = newHtbh;
	}

	/**
	 * 属性m_htmc的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_htmc
	 *            String
	 */
	public void setHtmc(String newHtmc) {

		m_htmc = newHtmc;
	}

	/**
	 * 属性m_fbye的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fbye
	 *            UFDouble
	 */
	public void setHzbbye(UFDouble newHzye) {

		m_hzbbye = newHzye;
	}

	/**
	 * 属性m_fbye的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fbye
	 *            UFDouble
	 */
	public void setHzfbye(UFDouble newHzye) {

		m_hzfbye = newHzye;
	}

	/**
	 * 属性m_fbye的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_fbye
	 *            UFDouble
	 */
	public void setHzybye(UFDouble newHzye) {

		m_hzybye = newHzye;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setIsselected(UFBoolean newIsselected) {

		m_isselected = newIsselected;
	}

	/**
	 * 属性m_dffbsj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dffbsj
	 *            UFDouble
	 */
	public void setIsSqed(UFBoolean newIsSqed) {

		m_isSqed = newIsSqed;
	}

	/**
	 * 属性m_chmc的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_chmc
	 *            String
	 */
	public void setItem_bill_djbh(String newItem_bill_djbh) {

		m_item_bill_djbh = newItem_bill_djbh;
	}

	/**
	 * 属性m_bz_kjnd的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bz_kjnd
	 *            String
	 */
	public void setItem_bill_pk(String newItem_bill_pk) {

		m_item_bill_pk = newItem_bill_pk;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setItem_bill_pk_old(String newItem_bill_pk_old) {

		m_item_bill_pk_old = newItem_bill_pk_old;
	}

	/**
	 * 属性m_jfbbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfbbje
	 *            UFDouble
	 */
	public void setJfbbje(UFDouble newJfbbje) {

		m_jfbbje = newJfbbje;
	}

	/**
	 * 属性m_jfbbsj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfbbsj
	 *            UFDouble
	 */
	public void setJfbbsj(UFDouble newJfbbsj) {

		m_jfbbsj = newJfbbsj;
	}

	/**
	 * 属性m_jffbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jffbje
	 *            UFDouble
	 */
	public void setJffbje(UFDouble newJffbje) {

		m_jffbje = newJffbje;
	}

	/**
	 * 属性m_jffbsj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jffbsj
	 *            UFDouble
	 */
	public void setJffbsj(UFDouble newJffbsj) {

		m_jffbsj = newJffbsj;
	}

	/**
	 * 属性m_jfshl的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfshl
	 *            UFDouble
	 */
	public void setJfshl(UFDouble newJfshl) {

		m_jfshl = newJfshl;
	}

	/**
	 * 属性m_jfybje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfybje
	 *            UFDouble
	 */
	public void setJfybje(UFDouble newJfybje) {

		m_jfybje = newJfybje;
	}

	/**
	 * 属性m_jfybsj的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfybsj
	 *            UFDouble
	 */
	public void setJfybsj(UFDouble newJfybsj) {

		m_jfybsj = newJfybsj;
	}

	/**
	 * 属性m_jfybwsje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfybwsje
	 *            UFDouble
	 */
	public void setJfybwsje(UFDouble newJfybwsje) {

		m_jfybwsje = newJfybwsje;
	}

	/**
	 * 属性m_jobid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jobid
	 *            String
	 */
	public void setJobid(String newjobid) {

		m_jobid = newjobid;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2002-6-25 12:31:49)
	 *
	 * @param newJobphaseid
	 *            java.lang.String
	 */
	public void setJobphaseid(java.lang.String newJobphaseid) {
		jobphaseid = newJobphaseid;
	}

	/**
	 * 属性m_jsfsbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jsfsbm
	 *            String
	 */
	public void setJsfsbm(String newJsfsbm) {

		m_jsfsbm = newJsfsbm;
	}

	/**
	 * 属性m_kmbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_kmbm
	 *            String
	 */
	public void setKmbm(String newKmbm) {

		m_kmbm = newKmbm;
	}

	/**
	 * 属性m_kprq的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_kprq
	 *            UFDate
	 */
	public void setKprq(UFDate newKprq) {

		m_kprq = newKprq;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setKsbm(String newKsbm) {

		m_ksbm = newKsbm;
	}

	/**
	 * 属性m_ksbm_cl的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ksbm_cl
	 *            String
	 */
	//	public void setKsbm_cl(String newKsbm_cl) {
	//
	//		m_ksbm_cl = newKsbm_cl;
	//	}
	public void setKsdh(String newKsdh) {
		m_ksdh = newKsdh;
	}

	public void setKsdz(String newKsdz) {
		m_ksdz = newKsdz;
	}

	public void setKskhh(String newKskhh) {
		m_kskhh = newKskhh;
	}

	/**
	 * 属性m_jobid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jobid
	 *            String
	 */
	public void setKslb(Integer newKslb) {

		m_kslb = newKslb;
	}

	public void setKsmc(String newKsmc) {
		m_ksmc = newKsmc;
	}

	public void setKssh(String newKssh) {
		m_kssh = newKssh;
	}

	public void setKszh(String newKszh) {
		m_kszh = newKszh;
	}

	/**
	 * 属性m_kxyt的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_kxyt
	 *            String
	 */
	public void setKxyt(String newKxyt) {

		m_kxyt = newKxyt;
	}

	/**
	 * 属性m_skyhdz的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_skyhdz
	 *            String
	 */
	public void setNotetype(String newNotetype) {

		m_notetype = newNotetype;
	}

	/**
	 * 属性m_skyhdz的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_skyhdz
	 *            String
	 */
	public void setNotetype_name(String newNotetype_name) {

		m_notetype_name = newNotetype_name;
	}

	/**
	 * 属性m_old_flag的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_old_flag
	 *            UFBoolean
	 */
	public void setOld_flag(UFBoolean newOld_flag) {

		m_old_flag = newOld_flag;
	}

	/**
	 * 属性m_old_sys_flag的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_old_sys_flag
	 *            UFBoolean
	 */
	public void setOld_sys_flag(UFBoolean newOld_sys_flag) {

		m_old_sys_flag = newOld_sys_flag;
	}

	/**
	 * 属性m_jfbbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfbbje
	 *            UFDouble
	 */
	public void setOldbbye(UFDouble newOldbbye) {

		m_oldbbye = newOldbbye;
	}

	/**
	 * 属性m_jfbbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfbbje
	 *            UFDouble
	 */
	public void setOldfbye(UFDouble newOldfbye) {

		m_oldfbye = newOldfbye;
	}

	/**
	 * 属性m_jfbbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfbbje
	 *            UFDouble
	 */
	public void setOldybye(UFDouble newOldybye) {

		m_oldybye = newOldybye;
	}

	/**
	 * 属性m_ddhh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ddhh
	 *            Integer
	 */
	public void setOrdercusmandoc(String newOrdercusmandoc) {

		m_ordercusmandoc = newOrdercusmandoc;
	}

	/**
	 * 属性m_ddhh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ddhh
	 *            Integer
	 */
	public void setOrdercusmandoc_name(String newOrdercusmandoc_name) {

		m_ordercusmandoc_name = newOrdercusmandoc_name;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setOthersysflag(String newOthersysflag) {

		m_othersysflag = newOthersysflag;
	}

	/**
	 * 属性m_deptid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_deptid
	 *            String
	 */
	public void setPausetransact(UFBoolean newpausetransact) {

		m_pausetransact = newpausetransact;
	}

	/**
	 * 属性m_pch的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_pch
	 *            String
	 */
	public void setPch(String newPch) {

		m_pch = newPch;
	}

	/**
	 * 属性m_ph的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ph
	 *            String
	 */
	public void setPh(String newPh) {

		m_ph = newPh;
	}

	/**
	 * 属性m_accountid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_accountid
	 *            String
	 */
	public void setPj_jsfs(String newPj_jsfs) {

		m_pj_jsfs = newPj_jsfs;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setPj_jsfs_mc(String newpj_jsfs_mc) {

		m_pj_jsfs_mc = newpj_jsfs_mc;
	}

	/**
	 * 属性m_accountid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_accountid
	 *            String
	 */
	public void setPjh(String newPjh) {

		m_pjh = newPjh;
	}

	public void setPk_arap_fengcun(String newPk_arap_fengcun) {
		m_pk_arap_fengcun = newPk_arap_fengcun;
	}

	/**
	 * 设置对象标识，用来唯一定位对象。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param m_fb_oid
	 *            String
	 */
	public void setPk_currrate(String newpk_currrate) {

		m_pk_currrate = newpk_currrate;
	}

	/**
	 * 属性m_ddhh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ddhh
	 *            Integer
	 */
	public void setPk_invcl(String newPk_invcl) {

		m_pk_invcl = newPk_invcl;
	}

	/**
	 * 属性m_jobphaseid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jobphaseid
	 *            String
	 */
	public void setPk_jobobjpha(String newPk_jobobjpha) {

		m_pk_jobobjpha = newPk_jobobjpha;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:29:48)
	 *
	 * @author:陈飞
	 * @param newM_plannum
	 *            nc.vo.pub.lang.UFDouble
	 */
	public void setPlannum(nc.vo.pub.lang.UFDouble newM_plannum) {
		m_plannum = newM_plannum;
	}

	/**
	 * 设置对象标识，用来唯一定位对象。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param m_fb_oid
	 *            String
	 */
	public void setPrimaryKey(String newFb_oid) {

		m_fb_oid = newFb_oid;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setProductline(String newProductline) {

		m_productline = newProductline;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-4-20 9:33:36)
	 *
	 * @author:
	 * @param newM_productline_name
	 *            java.lang.String
	 */
	public void setProductline_name(java.lang.String newM_productline_name) {
		m_productline_name = newM_productline_name;
	}

	/**
	 * 属性m_sfbz的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_sfbz
	 *            String
	 */
	public void setSfbz(String newSfbz) {

		m_sfbz = newSfbz;
	}

	/**
	 * 属性m_sfkxyh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_sfkxyh
	 *            String
	 */
	public void setSfkxyh(String newSfkxyh) {

		m_sfkxyh = newSfkxyh;
	}

	public void setShenpi(String newShenpi) {
		m_shenpi = newShenpi;
	}

	/**
	 * 属性m_shlye的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_shlye
	 *            UFDouble
	 */
	public void setShlye(UFDouble newShlye) {

		m_shlye = newShlye;
	}

	/**
	 * 属性m_skyhdz的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_skyhdz
	 *            String
	 */
	public void setSkyhdz(String newSkyhdz) {

		m_skyhdz = newSkyhdz;
	}

	/**
	 * 属性m_skyhmc的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_skyhmc
	 *            String
	 */
	public void setSkyhmc(String newSkyhmc) {

		m_skyhmc = newSkyhmc;
	}

	/**
	 * 属性m_skyhzh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_skyhzh
	 *            String
	 */
	public void setSkyhzh(String newSkyhzh) {

		m_skyhzh = newSkyhzh;
	}

	/**
	 * 属性m_sl的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_sl
	 *            UFDouble
	 */
	public void setSl(UFDouble newSl) {

		m_sl = newSl;
	}

	/**
	 * 属性m_spzt的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_spzt
	 *            Integer
	 */
	public void setSpzt(Integer newSpzt) {

		m_spzt = newSpzt;
	}

	/**
	 * 属性m_jfbbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_jfbbje
	 *            UFDouble
	 */
	public void setSqflag(Integer newSqflag) {

		m_sqflag = newSqflag;
	}

	/**
	 * 属性m_srbz的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_srbz
	 *            UFBoolean
	 */
	public void setSrbz(UFBoolean newSrbz) {

		m_srbz = newSrbz;
	}

	/**
	 * 属性m_zyx16_mc（使用部门）的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param m_zyx16_mc
	 *            String
	 */
	public void setSYBM_MC(String zyx16_mc) {

		m_zyx16_mc = zyx16_mc;
	}

	/**
	 * 属性m_szxmid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_szxmid
	 *            String
	 */
	public void setSzxmid(String newSzxmid) {

		m_szxmid = newSzxmid;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setTask(String newTask) {

		m_task = newTask;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setTask_name(String newTask_name) {

		m_task_name = newTask_name;
	}

	/**
	 * 属性m_tax_num的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_tax_num
	 *            String
	 */
	public void setTax_num(String newTax_num) {

		m_tax_num = newTax_num;
	}

	public void setTs(UFDateTime ts) {
		m_ts = ts;
	}

	/**
	 * 属性m_vouchid的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_vouchid
	 *            String
	 */
	public void setVouchid(String newVouchid) {

		m_vouchid = newVouchid;
	}

	/**
	 * 属性m_wbfbbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_wbfbbje
	 *            UFDouble
	 */
	public void setWbfbbje(UFDouble newWbfbbje) {

		m_wbfbbje = newWbfbbje;
	}

	/**
	 * 属性m_wbffbje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_wbffbje
	 *            UFDouble
	 */
	public void setWbffbje(UFDouble newWbffbje) {

		m_wbffbje = newWbffbje;
	}

	/**
	 * 属性m_wbfybje的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_wbfybje
	 *            UFDouble
	 */
	public void setWbfybje(UFDouble newWbfybje) {

		m_wbfybje = newWbfybje;
	}

	/**
	 * 属性m_wldx的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_wldx
	 *            Integer
	 */
	public void setWldx(Integer newWldx) {

		m_wldx = newWldx;
	}

	/**
	 * 属性m_xmbm2的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_xmbm2
	 *            String
	 */
	public void setXbbm3(String newXbbm3) {

		m_xbbm3 = newXbbm3;
	}

	/**
	 * 属性m_xgbh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_xgbh
	 *            Integer
	 */
	public void setXgbh(Integer newXgbh) {

		m_xgbh = newXgbh;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setXm(String newXm) {

		m_xm = newXm;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setXm_name(String newXm_name) {

		m_xm_name = newXm_name;
	}

	/**
	 * 属性m_xmbm2的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_xmbm2
	 *            String
	 */
	public void setXmbm2(String newXmbm2) {

		m_xmbm2 = newXmbm2;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setXmys(String newXmys) {

		m_xmys = newXmys;
	}

	/**
	 * 属性m_dwbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_dwbm
	 *            String
	 */
	public void setXmys_name(String newXmys_name) {

		m_xmys_name = newXmys_name;
	}

	/**
	 * 此处插入方法描述。 创建日期：(2004-8-20 11:38:26)
	 *
	 * @author:陈飞
	 * @param newM_xslxmc
	 *            java.lang.String
	 */
	public void setXslxmc(java.lang.String newM_xslxmc) {
		m_xslxmc = newM_xslxmc;
	}

	/**
	 * 属性m_xyzh的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_xyzh
	 *            String
	 */
	public void setXyzh(String newXyzh) {

		m_xyzh = newXyzh;
	}

	/**
	 * 属性m_ybye的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ybye
	 *            UFDouble
	 */
	public void setYbye(UFDouble newYbye) {

		m_ybye = newYbye;
	}

	/**
	 * 属性m_ywbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ywbm
	 *            String
	 */
	public void setYwbm(String newYwbm) {

		m_ywbm = newYwbm;
	}

	/**
	 * 属性m_ywybm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ywybm
	 *            String
	 */
	public void setYwybm(String newYwybm) {

		m_ywybm = newYwybm;
	}

	/**
	 * 属性m_ywybm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_ywybm
	 *            String
	 */
	public void setYwymc(String newYwymc) {

		m_ywymc = newYwymc;
	}

	/**
	 * 属性m_kmbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_kmbm
	 *            String
	 */
	public void setZhbzbm(String newZhbzbm) {

		m_zhbzbm = newZhbzbm;
	}

	/**
	 * 属性m_zjldw的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zjldw
	 *            String
	 */
	public void setZjldw(String newZjldw) {

		m_zjldw = newZjldw;
	}

	/**
	 * 属性m_bzbm的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_bzbm
	 *            String
	 */
	public void setZjldwmc(String newZjldwmc) {

		m_zjldwmc = newZjldwmc;
	}

	/**
	 * 属性m_zy的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zy
	 *            String
	 */
	public void setZy(String newZy) {

		m_zy = newZy;
	}

	/**
	 * 属性m_zyx1的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx1
	 *            String
	 */
	public void setZyx1(String newZyx1) {

		m_zyx1 = newZyx1;
	}

	/**
	 * 属性m_zyx10的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx10
	 *            String
	 */
	public void setZyx10(String newZyx10) {

		m_zyx10 = newZyx10;
	}

	/**
	 * 属性m_zyx11的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx11
	 *            String
	 */
	public void setZyx11(String newZyx11) {

		m_zyx11 = newZyx11;
	}

	/**
	 * 属性m_zyx12的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx12
	 *            String
	 */
	public void setZyx12(String newZyx12) {

		m_zyx12 = newZyx12;
	}

	/**
	 * 属性m_zyx13的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx13
	 *            String
	 */
	public void setZyx13(String newZyx13) {

		m_zyx13 = newZyx13;
	}

	/**
	 * 属性m_zyx14的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx14
	 *            String
	 */
	public void setZyx14(String newZyx14) {

		m_zyx14 = newZyx14;
	}

	/**
	 * 属性m_zyx15的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx15
	 *            String
	 */
	public void setZyx15(String newZyx15) {

		m_zyx15 = newZyx15;
	}

	/**
	 * 属性m_zyx16的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx16
	 *            String
	 */
	public void setZyx16(String newZyx16) {

		m_zyx16 = newZyx16;
	}

	/**
	 * 属性m_zyx17的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx17
	 *            String
	 */
	public void setZyx17(String newZyx17) {

		m_zyx17 = newZyx17;
	}

	/**
	 * 属性m_zyx18的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx18
	 *            String
	 */
	public void setZyx18(String newZyx18) {

		m_zyx18 = newZyx18;
	}

	/**
	 * 属性m_zyx19的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx19
	 *            String
	 */
	public void setZyx19(String newZyx19) {

		m_zyx19 = newZyx19;
	}

	/**
	 * 属性m_zyx2的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx2
	 *            String
	 */
	public void setZyx2(String newZyx2) {

		m_zyx2 = newZyx2;
	}

	/**
	 * 属性m_zyx20的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx20
	 *            String
	 */
	public void setZyx20(String newZyx20) {

		m_zyx20 = newZyx20;
	}

	/**
	 * 属性m_zyx3的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx3
	 *            String
	 */
	public void setZyx3(String newZyx3) {

		m_zyx3 = newZyx3;
	}

	/**
	 * 属性m_zyx4的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx4
	 *            String
	 */
	public void setZyx4(String newZyx4) {

		m_zyx4 = newZyx4;
	}

	/**
	 * 属性m_zyx5的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx5
	 *            String
	 */
	public void setZyx5(String newZyx5) {

		m_zyx5 = newZyx5;
	}

	/**
	 * 属性m_zyx6的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx6
	 *            String
	 */
	public void setZyx6(String newZyx6) {

		m_zyx6 = newZyx6;
	}

	/**
	 * 属性m_zyx7的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx7
	 *            String
	 */
	public void setZyx7(String newZyx7) {

		m_zyx7 = newZyx7;
	}

	/**
	 * 属性m_zyx8的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx8
	 *            String
	 */
	public void setZyx8(String newZyx8) {

		m_zyx8 = newZyx8;
	}

	/**
	 * 属性m_zyx9的setter方法。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @param newM_zyx9
	 *            String
	 */
	public void setZyx9(String newZyx9) {

		m_zyx9 = newZyx9;
	}

	/**
	 * 验证对象各属性之间的数据逻辑正确性。
	 *
	 * 创建日期：(2000-10-9)
	 *
	 * @exception nc.vo.pub.ValidationException
	 *                如果验证失败，抛出 ValidationException，对错误进行解释。
	 */
	public void validate() throws ValidationException {

		ArrayList<String> errFields = new ArrayList<String>(); // errFields record those null
		// fields that cannot be null.
		// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
		if (m_fb_oid == null) {
			errFields.add(new String("m_fb_oid"));
		}
		if (m_dwbm == null) {
			errFields.add(new String("m_dwbm"));
		}
		if (m_djbh == null) {
			errFields.add(new String("m_djbh"));
		}
		if (m_ywbm == null) {
			errFields.add(new String("m_ywbm"));
		}
		if (m_flbh == null) {
			errFields.add(new String("m_flbh"));
		}
		if (m_xgbh == null) {
			errFields.add(new String("m_xgbh"));
		}
		if (m_old_sys_flag == null) {
			errFields.add(new String("m_old_sys_flag"));
		}
		if (m_fx == null) {
			errFields.add(new String("m_fx"));
		}
		if (m_bzbm == null) {
			errFields.add(new String("m_bzbm"));
		}
		if (m_jfybje == null) {
			errFields.add(new String("m_jfybje"));
		}
		if (m_jffbje == null) {
			errFields.add(new String("m_jffbje"));
		}
		if (m_jfbbje == null) {
			errFields.add(new String("m_jfbbje"));
		}
		if (m_ybye == null) {
			errFields.add(new String("m_ybye"));
		}
		if (m_fbye == null) {
			errFields.add(new String("m_fbye"));
		}
		if (m_bbye == null) {
			errFields.add(new String("m_bbye"));
		}
		if (m_shlye == null) {
			errFields.add(new String("m_shlye"));
		}
		if (m_jfybsj == null) {
			errFields.add(new String("m_jfybsj"));
		}
		if (m_jffbsj == null) {
			errFields.add(new String("m_jffbsj"));
		}
		if (m_jfbbsj == null) {
			errFields.add(new String("m_jfbbsj"));
		}
		//if (m_jfzkfbje == null) {
		//errFields.add(new String("m_jfzkfbje"));
		//}
		//if (m_jfzkybje == null) {
		//errFields.add(new String("m_jfzkybje"));
		//}
		//if (m_ysybye == null) {
		//errFields.add(new String("m_ysybye"));
		//}
		//if (m_ysfbye == null) {
		//errFields.add(new String("m_ysfbye"));
		//}
		//if (m_ysbbye == null) {
		//errFields.add(new String("m_ysbbye"));
		//}
		//if (m_jshj == null) {
		//errFields.add(new String("m_jshj"));
		//}
		if (m_wbfybje == null) {
			errFields.add(new String("m_wbfybje"));
		}
		if (m_wbffbje == null) {
			errFields.add(new String("m_wbffbje"));
		}
		if (m_wbfbbje == null) {
			errFields.add(new String("m_wbfbbje"));
		}
		if (m_dfybje == null) {
			errFields.add(new String("m_dfybje"));
		}
		if (m_dffbje == null) {
			errFields.add(new String("m_dffbje"));
		}
		if (m_dfbbje == null) {
			errFields.add(new String("m_dfbbje"));
		}
		if (m_dfshl == null) {
			errFields.add(new String("m_dfshl"));
		}
		//if (m_dfjs == null) {
		//errFields.add(new String("m_dfjs"));
		//}
		if (m_dfybsj == null) {
			errFields.add(new String("m_dfybsj"));
		}
		if (m_dffbsj == null) {
			errFields.add(new String("m_dffbsj"));
		}
		if (m_dfbbsj == null) {
			errFields.add(new String("m_dfbbsj"));
		}
		if (m_vouchid == null) {
			errFields.add(new String("m_vouchid"));
		}
		if (m_wldx == null) {
			errFields.add(new String("m_wldx"));
		}
		if (m_jfybwsje == null) {
			errFields.add(new String("m_jfybwsje"));
		}
		if (m_dfybwsje == null) {
			errFields.add(new String("m_dfybwsje"));
		}
		// construct the exception message:
		StringBuffer message = new StringBuffer();
		message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("200602", "UPP200602-000043")/*@res "下列字段不能为空："*/);
		if (errFields.size() > 0) {
			String[] temp = (String[]) errFields.toArray(new String[0]);
			message.append(temp[0]);
			for (int i = 1; i < temp.length; i++) {
				message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("200602", "UPP200602-000044")/*@res "、"*/);
				message.append(temp[i]);
			}
			// throw the exception:
			throw new NullFieldException(message.toString());
		}
	}

	public String getTableName() {
		return "arap_djfb";
	}

	public String getPKName() {
		return "fb_iod";
	}

	public String getFKName() {
		return "vouchid";
	}

	public String getDmo() throws Exception {
		return "nc.bs.arap.selectedpay.DJZBItemDMO";
	}

	public nc.vo.pub.lang.UFDouble getFkje() {
		return fkje;
	}

	public void setFkje(nc.vo.pub.lang.UFDouble fkje) {
		this.fkje = fkje;
	}

	public UFDouble getTxlx_bbje() {
		return this.txlx_bbje;
	}

	public void setTxlx_bbje(UFDouble txlx_bbje) {
		this.txlx_bbje = txlx_bbje;
	}

	public UFDouble getTxlx_fbje() {
		return this.txlx_fbje;
	}

	public void setTxlx_fbje(UFDouble txlx_fbje) {
		this.txlx_fbje = txlx_fbje;
	}

	public UFDouble getTxlx_ybje() {
		return this.txlx_ybje;
	}

	public void setTxlx_ybje(UFDouble txlx_ybje) {
		this.txlx_ybje = txlx_ybje;
	}

	public UFDouble getBjdwsl() {
		return this.m_bjdwsl;
	}

	public void setBjdwsl(UFDouble bjdwsl) {
		this.m_bjdwsl = bjdwsl;
	}

	public UFDouble getBjdwhsdj() {
		return this.m_bjdwhsdj;
	}

	public void setBjdwhsdj(UFDouble bjdwhsdj) {
		this.m_bjdwhsdj = bjdwhsdj;
	}

	public UFDouble getBjdwwsdj() {
		return this.m_bjdwwsdj;
	}

	public void setBjdwwsdj(UFDouble bjdwwsdj) {
		this.m_bjdwwsdj = bjdwwsdj;
	}

	public String getBjjldw() {
		return this.m_bjjldw;
	}

	public void setBjjldw(String bjjldw) {
		this.m_bjjldw = bjjldw;
	}

	/**
	 * @return 返回 m_strChangedAtts。
	 */
	public String[] getM_strChangedAtts() {
		return m_strChangedAtts;
	}

	/**
	 * @param changedAtts 要设置的 m_strChangedAtts。
	 */
	public void setM_strChangedAtts(String[] changedAtts) {
		m_strChangedAtts = changedAtts;
	}

	/**
	 * @return 返回 zrdeptid。
	 */
	public String getZrdeptid() {
		return zrdeptid;
	}

	/**
	 * @param zrdeptid 要设置的 zrdeptid。
	 */
	public void setZrdeptid(String zrdeptid) {
		this.zrdeptid = zrdeptid;
	}

	/**
	 * @return 返回 zrbmmc。
	 */
	public String getZrbmmc() {
		return zrbmmc;
	}

	/**
	 * @param zrbmmc 要设置的 zrbmmc。
	 */
	public void setZrbmmc(String zrbmmc) {
		this.zrbmmc = zrbmmc;
	}

	/**
	 * @return 返回 isSFKXYChanged。
	 */
	public UFBoolean getIsSFKXYChanged() {
		return isSFKXYChanged;
	}

	/**
	 * @param isSFKXYChanged 要设置的 isSFKXYChanged。
	 */
	public void setIsSFKXYChanged(UFBoolean isSFKXYChanged) {
		this.isSFKXYChanged = isSFKXYChanged;
	}

	public String getSanhu() {
		return sanhu;
	}

	public void setSanhu(String sanhu) {
		this.sanhu = sanhu;
	}

	public String getSeqnum() {
		return seqnum;
	}

	public void setSeqnum(String seqnum) {
		this.seqnum = seqnum;
	}

	public String getCashitem() {
		return cashitem;
	}

	public void setCashitem(String cashitem) {
		this.cashitem = cashitem;
	}

	public String getFacardbh() {
		return facardbh;
	}

	public void setFacardbh(String facardbh) {
		this.facardbh = facardbh;
	}

	public String getTbbh() {
		return tbbh;
	}

	public void setTbbh(String tbbh) {
		this.tbbh = tbbh;
	}

	public String getUsedept() {
		return usedept;
	}

	public void setUsedept(String usedept) {
		this.usedept = usedept;
	}

	public String getZyx21() {
		return zyx21;
	}

	public void setZyx21(String zyx21) {
		this.zyx21 = zyx21;
	}

	public String getZyx22() {
		return zyx22;
	}

	public void setZyx22(String zyx22) {
		this.zyx22 = zyx22;
	}

	public String getZyx23() {
		return zyx23;
	}

	public void setZyx23(String zyx23) {
		this.zyx23 = zyx23;
	}

	public String getZyx24() {
		return zyx24;
	}

	public void setZyx24(String zyx24) {
		this.zyx24 = zyx24;
	}

	public String getZyx25() {
		return zyx25;
	}

	public void setZyx25(String zyx25) {
		this.zyx25 = zyx25;
	}

	public String getZyx26() {
		return zyx26;
	}

	public void setZyx26(String zyx26) {
		this.zyx26 = zyx26;
	}

	public String getZyx27() {
		return zyx27;
	}

	public void setZyx27(String zyx27) {
		this.zyx27 = zyx27;
	}

	public String getZyx28() {
		return zyx28;
	}

	public void setZyx28(String zyx28) {
		this.zyx28 = zyx28;
	}

	public String getZyx29() {
		return zyx29;
	}

	public void setZyx29(String zyx29) {
		this.zyx29 = zyx29;
	}

	public String getZyx30() {
		return zyx30;
	}

	public void setZyx30(String zyx30) {
		this.zyx30 = zyx30;
	}

	public Integer getPayflag() {
		return payflag;
	}

	public void setPayflag(Integer payflag) {
		this.payflag = payflag;
	}

	public UFDate getQxrq() {
		return qxrq;
	}

	public void setQxrq(UFDate qxrq) {
		this.qxrq = qxrq;
	}

	public UFDate getBilldate() {
		return billdate;
	}

	public void setBilldate(UFDate billdate) {
		this.billdate = billdate;
	}

	public String getBankacc_fk() {
		return bankacc_fk;
	}

	public void setBankacc_fk(String bankacc_fk) {
		this.bankacc_fk = bankacc_fk;
	}

	public String getEncode() {
		return encode;
	}

	public void setEncode(String encode) {
		this.encode = encode;
	}

	public String getClbh() {
		return clbh;
	}

	public void setClbh(String clbh) {
		this.clbh = clbh;
	}

	public String getCkdid() {
		return ckdid;
	}

	public void setCkdid(String ckdid) {
		this.ckdid = ckdid;
	}

	public String getDdhid() {
		return ddhid;
	}

	public void setDdhid(String ddhid) {
		this.ddhid = ddhid;
	}

	public String getFphid() {
		return fphid;
	}

	public void setFphid(String fphid) {
		this.fphid = fphid;
	}

	public UFBoolean getIsverifyfinished() {
		return isverifyfinished;
	}

	public void setIsverifyfinished(UFBoolean isverifyfinished) {
		this.isverifyfinished = isverifyfinished;
	}

	public UFDate getVerifyfinisheddate() {
		return verifyfinisheddate == null ? new UFDate("3000-01-01") : verifyfinisheddate;
	}

	public void setVerifyfinisheddate(UFDate verifyfinisheddate) {
		this.verifyfinisheddate = verifyfinisheddate;
	}

	public String getCorpPk() {
		// TODO Auto-generated method stub
		return this.getDwbm();
	}

	public String getCurrTypePk() {
		// TODO Auto-generated method stub
		return this.getBzbm();
	}

	public String getCkdh() {
		return ckdh;
	}

	public void setCkdh(String ckdh) {
		this.ckdh = ckdh;
	}

	public String getPaydate() {
		return paydate;
	}

	public void setPaydate(String paydate) {
		this.paydate = paydate;
	}

	public String getPayman() {
		return payman;
	}

	public void setPayman(String payman) {
		this.payman = payman;
	}

	public UFDouble getBbpjlx() {
		return bbpjlx;
	}

	public void setBbpjlx(UFDouble bbpjlx) {
		this.bbpjlx = bbpjlx;
	}

	public UFDouble getBbtxfy() {
		return bbtxfy;
	}

	public void setBbtxfy(UFDouble bbtxfy) {
		this.bbtxfy = bbtxfy;
	}

	public UFDouble getFbpjlx() {
		return fbpjlx;
	}

	public void setFbpjlx(UFDouble fbpjlx) {
		this.fbpjlx = fbpjlx;
	}

	public UFDouble getFbtxfy() {
		return fbtxfy;
	}

	public void setFbtxfy(UFDouble fbtxfy) {
		this.fbtxfy = fbtxfy;
	}

	public UFDouble getYbpjlx() {
		return ybpjlx;
	}

	public void setYbpjlx(UFDouble ybpjlx) {
		this.ybpjlx = ybpjlx;
	}

	public UFDouble getYbtxfy() {
		return ybtxfy;
	}

	public void setYbtxfy(UFDouble ybtxfy) {
		this.ybtxfy = ybtxfy;
	}

	public Integer getDjxtflag() {
		return djxtflag;
	}

	public void setDjxtflag(Integer djxtflag) {
		this.djxtflag = djxtflag;
	}

	public String getpjdirection() {
		return pjdirection;
	}

	public void setpjdirection(String pjdirection) {
		this.pjdirection = pjdirection;
	}

	public String getCommonflag() {
		return commonflag;
	}

	public void setCommonflag(String commonflag) {
		this.commonflag = commonflag;
	}

	public String getM_xmmc1() {
		return m_xmmc1;
	}

	public void setM_xmmc1(String m_xmmc1) {
		this.m_xmmc1 = m_xmmc1;
	}

	public String getM_kmmc() {
		return m_kmmc;
	}

	public void setM_kmmc(String m_kmmc) {
		this.m_kmmc = m_kmmc;
	}

	public String getM_bmmc() {
		return m_bmmc;
	}

	public void setM_bmmc(String m_bmmc) {
		this.m_bmmc = m_bmmc;
	}

	public String getM_xmjdmc() {
		return m_xmjdmc;
	}

	public String getBfyhzh() {
		return bfyhzh;
	}

	public void setBfyhzh(String bfyhzh) {
		this.bfyhzh = bfyhzh;
	}

	public String getDfyhzh() {
		return dfyhzh;
	}

	public void setDfyhzh(String dfyhzh) {
		this.dfyhzh = dfyhzh;
	}

	public void setM_xmjdmc(String m_xmjdmc) {
		this.m_xmjdmc = m_xmjdmc;
	}

	public String getM_szxmmc() {
		return m_szxmmc;
	}

	public void setM_szxmmc(String m_szxmmc) {
		this.m_szxmmc = m_szxmmc;
	}

	public String getBankrollprojet() {
		return bankrollprojet;
	}

	public void setBankrollprojet(String bankrollprojet) {
		this.bankrollprojet = bankrollprojet;
	}

	public SettlementBodyVO getSettleBodyVO() {
		return settleBodyVO;
	}

	public void setSettleBodyVO(SettlementBodyVO settleBodyVO) {
		this.settleBodyVO = settleBodyVO;
	}

	public Integer getTradertype() {
		return tradertype;
	}

	public void setTradertype(Integer tradertype) {
		this.tradertype = tradertype;
	}

	public List<ArapBillMapVO> getBillmap() {
		return billmap;
	}

	public void setBillmap(List<ArapBillMapVO> billmap) {
		this.billmap = billmap;
	}

	public UFDouble getOccupationmny() {
		return occupationmny;
	}

	public void setOccupationmny(UFDouble occupationmny) {
		this.occupationmny = occupationmny;
	}

	public String getAssetpactno() {
		return assetpactno;
	}

	public void setAssetpactno(String assetpactno) {
		this.assetpactno = assetpactno;
	}

	public String getEquipmentcode() {
		return equipmentcode;
	}

	public void setEquipmentcode(String equipmentcode) {
		this.equipmentcode = equipmentcode;
	}

	public String getDstlsubcs() {
		return dstlsubcs;
	}

	public void setDstlsubcs(String dstlsubcs) {
		this.dstlsubcs = dstlsubcs;
	}

	public String getSanhuname() {
		return sanhuname;
	}

	public void setSanhuname(String sanhuname) {
		this.sanhuname = sanhuname;
	}

	public UFDouble getJsje() {
		return jsje;
	}

	public void setJsje(UFDouble jsje) {
		this.jsje = jsje;
	}

	public String getBankrollprojetname() {
		return bankrollprojetname;
	}

	public void setBankrollprojetname(String bankrollprojetname) {
		this.bankrollprojetname = bankrollprojetname;
	}

	public String getTempddhh() {
		return tempddhh;
	}

	public void setTempddhh(String tempddhh) {
		this.tempddhh = tempddhh;
	}

	public String getTempddlx() {
		return tempddlx;
	}

	public void setTempddlx(String tempddlx) {
		this.tempddlx = tempddlx;
	}

	public String getDjlxbm() {
		return djlxbm;
	}

	public void setDjlxbm(String djlxbm) {
		this.djlxbm = djlxbm;
	}

	public String getDjdl() {
		return djdl;
	}

	public void setDjdl(String djdl) {
		this.djdl = djdl;
	}

	public String getKpbh() {
		return kpbh;
	}

	public void setKpbh(String kpbh) {
		this.kpbh = kpbh;
	}

	public SettlementBodyVO[] getSettlementinfo() {
		return settlementinfo;
	}

	public void setSettlementinfo(SettlementBodyVO[] settlementinfo) {
		this.settlementinfo = settlementinfo;
	}
	
	//wanglei 2013-12-15 
	private UFDouble ntotalinvoicenumber ;

	public UFDouble getNtotalinvoicenumber() {
		return ntotalinvoicenumber;
	}

	public void setNtotalinvoicenumber(UFDouble ntotalinvoicenumber) {
		this.ntotalinvoicenumber = ntotalinvoicenumber;
	}
	
}